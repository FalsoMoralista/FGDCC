INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:root:called-params configs/in1k_vith14_ep300_FGDCC.yaml
INFO:root:loaded params...
{   'data': {   'batch_size': 96,
                'color_jitter_strength': 0.0,
                'crop_scale': [0.3, 1.0],
                'crop_size': 224,
                'cutmix': 0.0,
                'drop_path': 0.25,
                'image_folder': '/home/rtcalumby/adam/luciano/plantnet_300K/',
                'mixup': 0.0,
                'nb_classes': 1081,
                'num_workers': 16,
                'pin_mem': True,
                'reprob': 0.25,
                'resume_epoch': 0,
                'root_path': '/home/rtcalumby/adam/luciano/',
                'use_color_distortion': False,
                'use_gaussian_blur': False,
                'use_horizontal_flip': False},
    'logging': {   'folder': '/home/rtcalumby/adam/luciano/LifeCLEFPlant2022/logs/debug',
                   'write_tag': 'jepa'},
    'mask': {   'allow_overlap': False,
                'aspect_ratio': [0.75, 1.5],
                'enc_mask_scale': [0.85, 1.0],
                'min_keep': 10,
                'num_enc_masks': 1,
                'num_pred_masks': 4,
                'patch_size': 14,
                'pred_mask_scale': [0.15, 0.2]},
    'meta': {   'copy_data': False,
                'load_checkpoint': True,
                'model_name': 'vit_huge',
                'pred_depth': 12,
                'pred_emb_dim': 384,
                'read_checkpoint': None,
                'use_bfloat16': True},
    'optimization': {   'ema': [0.9, 0.999],
                        'epochs': 50,
                        'final_lr': 1e-05,
                        'final_weight_decay': 0.4,
                        'ipe_scale': 1.0,
                        'label_smoothing': 0.1,
                        'lr': 0.00035,
                        'start_lr': 9e-05,
                        'warmup': 35,
                        'weight_decay': 0.05}}
INFO:root:Running... (rank: 0/1)
INFO:root:Initialized (rank/world-size) 0/1
INFO:root:making imagenet data transforms
INFO:root:making imagenet data transforms
INFO:root:Finetuning dataset created
INFO:root:PairedDataset created
Training dataset, length: 245952
INFO:root:Finetuning dataset created
Val dataset, length: 31200
INFO:root:Using AdamW
['encoder', 'predictor', 'opt', 'scaler', 'target_encoder', 'epoch', 'loss', 'batch_size', 'world_size', 'lr']
INFO:root:loaded pretrained encoder from epoch 66 with msg: <All keys matched successfully>
INFO:root:ClassificationHead(
  (classifier): Linear(in_features=1280, out_features=15134, bias=True)
)
INFO:root:Using AdamW
INFO:root:VisionTransformer(
  (patch_embed): PatchEmbed(
    (proj): Conv2d(3, 1280, kernel_size=(14, 14), stride=(14, 14))
  )
  (blocks): ModuleList(
    (0-31): 32 x Block(
      (norm1): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
      (attn): Attention(
        (qkv): Linear(in_features=1280, out_features=3840, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj): Linear(in_features=1280, out_features=1280, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
      )
      (drop_path): Identity()
      (norm2): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
      (mlp): MLP(
        (fc1): Linear(in_features=1280, out_features=5120, bias=True)
        (act): GELU(approximate='none')
        (fc2): Linear(in_features=5120, out_features=1280, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
    )
  )
  (norm): LayerNorm((1280,), eps=1e-06, elementwise_affine=True)
)
INFO:root:Setting up cache...
INFO:root:Done...
INFO:root:Initializing centroids...
INFO:root:Update Step...
/home/rtcalumby/miniconda3/envs/py382/lib/python3.12/site-packages/faiss/contrib/torch_utils.py:51: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  x.storage().data_ptr() + x.storage_offset() * 4)
INFO:root:Epoch 1
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
INFO:faiss.loader:Loading faiss with AVX2 support.
INFO:faiss.loader:Successfully loaded faiss with AVX2 support.
***************************************************************************************
i: 
Batch x size: torch.Size([836, 1280])
S-Scores: tensor([0.6780, 2.0378, 4.1686, 6.6397], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([836, 1])
Inertia: tensor([360.1648], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([836, 1280])
Centroid_list: tensor([[-0.0198, -0.0361, -0.0708,  ..., -0.0615,  0.0392, -0.1928],
        [-0.0198, -0.0361, -0.0708,  ..., -0.0615,  0.0392, -0.1928],
        [-0.0336, -0.0715, -0.0702,  ..., -0.0535,  0.0712, -0.3603],
        ...,
        [-0.0198, -0.0361, -0.0708,  ..., -0.0615,  0.0392, -0.1928],
        [-0.0198, -0.0361, -0.0708,  ..., -0.0615,  0.0392, -0.1928],
        [-0.0336, -0.0715, -0.0702,  ..., -0.0535,  0.0712, -0.3603]],
       device='cuda:0')
Computed C_score: tensor([0.4999, 0.7820, 0.4077, 0.8366, 0.8271, 0.7713, 0.8344, 0.8434, 0.8136,
        0.7993, 0.8627, 0.8457, 0.4864, 0.5357, 0.8274, 0.7745, 0.7471, 0.8090,
        0.8288, 0.6686, 0.8631, 0.8064, 0.7125, 0.8497, 0.8885, 0.8040, 0.6883,
        0.8070, 0.7735, 0.8739, 0.8596, 0.8400, 0.7589, 0.8605, 0.7435, 0.7729,
        0.8147, 0.7033, 0.8562, 0.6845, 0.7702, 0.5820, 0.7177, 0.7247, 0.7709,
        0.7972, 0.7344, 0.7267, 0.7714, 0.5475, 0.8174, 0.5745, 0.8157, 0.6878,
        0.7778, 0.7009, 0.4920, 0.6466, 0.6561, 0.7902, 0.8472, 0.7933, 0.8121,
        0.6206, 0.8430, 0.7730, 0.8406, 0.8081, 0.6590, 0.7645, 0.7761, 0.5030,
        0.8295, 0.6996, 0.7836, 0.8183, 0.6553, 0.7121, 0.7980, 0.7556, 0.5809,
        0.8203, 0.7174, 0.8510, 0.4615, 0.7886, 0.4624, 0.7358, 0.7385, 0.7622,
        0.8800, 0.7695, 0.7826, 0.7629, 0.7832, 0.8090, 0.7582, 0.8507, 0.6354,
        0.5107, 0.8958, 0.5958, 0.6359, 0.7216, 0.8142, 0.6916, 0.7898, 0.8159,
        0.7926, 0.5804, 0.7626, 0.7378, 0.8524, 0.8338, 0.6903, 0.5789, 0.8139,
        0.5849, 0.8102, 0.8408, 0.8599, 0.7899, 0.7322, 0.6654, 0.8744, 0.7973,
        0.7170, 0.5443, 0.8530, 0.5388, 0.7668, 0.5805, 0.8171, 0.6935, 0.7593,
        0.8006, 0.8249, 0.7471, 0.5903, 0.6699, 0.7520, 0.7608, 0.7534, 0.7071,
        0.7598, 0.7453, 0.8034, 0.8001, 0.8463, 0.6284, 0.8500, 0.8664, 0.7824,
        0.6126, 0.8638, 0.7223, 0.7814, 0.4798, 0.7493, 0.8291, 0.6900, 0.7824,
        0.8276, 0.6436, 0.7108, 0.8974, 0.8205, 0.7108, 0.7962, 0.7754, 0.8826,
        0.8144, 0.7845, 0.7861, 0.7151, 0.6819, 0.8286, 0.4657, 0.6107, 0.8777,
        0.8164, 0.8095, 0.8535, 0.8113, 0.4456, 0.8111, 0.8229, 0.7436, 0.7853,
        0.8160, 0.8182, 0.8445, 0.7820, 0.7220, 0.7846, 0.5901, 0.7578, 0.7771,
        0.5991, 0.7358, 0.6754, 0.7450, 0.6428, 0.8404, 0.8224, 0.8088, 0.7115,
        0.5672, 0.7468, 0.6596, 0.6785, 0.7284, 0.7911, 0.7892, 0.7617, 0.6623,
        0.7938, 0.5702, 0.7777, 0.8474, 0.7676, 0.8041, 0.8161, 0.8636, 0.8036,
        0.7884, 0.6592, 0.7074, 0.8582, 0.7704, 0.6218, 0.7860, 0.8766, 0.8920,
        0.8677, 0.6450, 0.8214, 0.8554, 0.7018, 0.5458, 0.7571, 0.6903, 0.8066,
        0.7380, 0.8131, 0.8290, 0.5164, 0.7678, 0.6836, 0.7330, 0.6443, 0.8755,
        0.7929, 0.7566, 0.8436, 0.8222, 0.8428, 0.4226, 0.7578, 0.7566, 0.7092,
        0.6248, 0.8271, 0.8148, 0.6389, 0.7003, 0.8128, 0.8169, 0.7870, 0.8269,
        0.7170, 0.8483, 0.8524, 0.5162, 0.8181, 0.7721, 0.8119, 0.8549, 0.6271,
        0.8418, 0.5842, 0.7507, 0.7914, 0.4020, 0.8235, 0.8219, 0.8492, 0.7185,
        0.7697, 0.8665, 0.7391, 0.5658, 0.6798, 0.7263, 0.6754, 0.6064, 0.8443,
        0.8296, 0.7303, 0.8236, 0.8495, 0.8267, 0.8132, 0.7381, 0.7357, 0.7813,
        0.5352, 0.8130, 0.7529, 0.5474, 0.8773, 0.6480, 0.8390, 0.6440, 0.8588,
        0.7252, 0.6036, 0.7538, 0.5429, 0.7463, 0.8752, 0.8114, 0.7428, 0.6974,
        0.7697, 0.4885, 0.8685, 0.6885, 0.7349, 0.6970, 0.7766, 0.6581, 0.7771,
        0.8078, 0.8683, 0.5323, 0.7917, 0.6542, 0.7853, 0.7243, 0.8076, 0.6458,
        0.7499, 0.8519, 0.7619, 0.5605, 0.8148, 0.6977, 0.7153, 0.6988, 0.8502,
        0.8396, 0.7956, 0.7457, 0.7083, 0.6600, 0.8352, 0.8698, 0.7242, 0.6655,
        0.7639, 0.7544, 0.7953, 0.8171, 0.7278, 0.6966, 0.7767, 0.7186, 0.8145,
        0.7241, 0.8822, 0.7985, 0.8597, 0.5812, 0.7572, 0.6993, 0.7166, 0.8798,
        0.8557, 0.6213, 0.5861, 0.7962, 0.8701, 0.5637, 0.7706, 0.8323, 0.8262,
        0.8168, 0.7517, 0.7717, 0.7125, 0.5871, 0.5441, 0.7634, 0.7704, 0.7130,
        0.8083, 0.7933, 0.6554, 0.7250, 0.4230, 0.6984, 0.6282, 0.7608, 0.7720,
        0.5674, 0.7436, 0.7940, 0.7483, 0.6231, 0.7151, 0.7496, 0.7858, 0.8076,
        0.8528, 0.8743, 0.8797, 0.7967, 0.6209, 0.6571, 0.8722, 0.8467, 0.7154,
        0.8210, 0.7774, 0.8695, 0.8227, 0.7438, 0.7730, 0.6761, 0.7499, 0.6702,
        0.8339, 0.5770, 0.8213, 0.8257, 0.6938, 0.6823, 0.7324, 0.5075, 0.6666,
        0.8378, 0.6762, 0.8530, 0.7841, 0.7773, 0.7919, 0.6964, 0.8701, 0.8279,
        0.7543, 0.7589, 0.4691, 0.6391, 0.7191, 0.8067, 0.7300, 0.8230, 0.7814,
        0.7784, 0.8574, 0.7913, 0.7801, 0.8212, 0.8904, 0.6352, 0.6300, 0.8660,
        0.8057, 0.6553, 0.8028, 0.7147, 0.7339, 0.7726, 0.7282, 0.8455, 0.6365,
        0.8306, 0.5805, 0.7636, 0.5531, 0.6591, 0.8843, 0.8341, 0.7312, 0.6146,
        0.8930, 0.5293, 0.8307, 0.8031, 0.8760, 0.7222, 0.7499, 0.7153, 0.8779,
        0.8416, 0.7702, 0.8805, 0.6911, 0.7971, 0.8103, 0.7144, 0.6793, 0.8453,
        0.8530, 0.8522, 0.8656, 0.6749, 0.5913, 0.4864, 0.8160, 0.5733, 0.8255,
        0.5886, 0.7199, 0.8065, 0.8106, 0.7377, 0.8925, 0.8400, 0.4886, 0.7760,
        0.8403, 0.6569, 0.8259, 0.6382, 0.8182, 0.8272, 0.6778, 0.8776, 0.8074,
        0.8640, 0.7775, 0.7357, 0.7747, 0.7725, 0.6882, 0.8750, 0.5179, 0.8688,
        0.6882, 0.7885, 0.8169, 0.8866, 0.7534, 0.6854, 0.8072, 0.8276, 0.8146,
        0.7843, 0.7735, 0.8276, 0.7670, 0.5815, 0.4572, 0.7232, 0.5589, 0.7553,
        0.6741, 0.7804, 0.7279, 0.8336, 0.8269, 0.5938, 0.6658, 0.8200, 0.7827,
        0.6046, 0.8200, 0.8364, 0.5990, 0.6626, 0.7733, 0.7471, 0.5966, 0.7601,
        0.6287, 0.7530, 0.8132, 0.8169, 0.8124, 0.8564, 0.7210, 0.8050, 0.5624,
        0.7880, 0.7328, 0.6437, 0.7481, 0.8765, 0.8906, 0.4339, 0.8117, 0.7972,
        0.8166, 0.6053, 0.7050, 0.7750, 0.7723, 0.7291, 0.7933, 0.8947, 0.8578,
        0.8108, 0.5730, 0.8386, 0.8692, 0.8174, 0.8439, 0.7129, 0.8037, 0.7604,
        0.6446, 0.7926, 0.7020, 0.7831, 0.6521, 0.8298, 0.8260, 0.5045, 0.8889,
        0.6119, 0.7678, 0.5921, 0.8160, 0.7198, 0.5734, 0.8185, 0.8009, 0.4883,
        0.7623, 0.8089, 0.8205, 0.8907, 0.7111, 0.8393, 0.8364, 0.7946, 0.6151,
        0.8371, 0.7420, 0.7471, 0.8528, 0.8068, 0.8209, 0.7203, 0.8440, 0.8297,
        0.8057, 0.5018, 0.6970, 0.6658, 0.8118, 0.7110, 0.8016, 0.7814, 0.7606,
        0.7275, 0.8059, 0.7998, 0.6481, 0.7168, 0.8648, 0.7188, 0.7118, 0.7480,
        0.6447, 0.8849, 0.7546, 0.8257, 0.8491, 0.5843, 0.7465, 0.7172, 0.4720,
        0.7040, 0.8379, 0.7227, 0.8430, 0.7191, 0.8189, 0.7958, 0.7902, 0.7897,
        0.5569, 0.7490, 0.7884, 0.5923, 0.8727, 0.8673, 0.8932, 0.8287, 0.6687,
        0.7914, 0.5369, 0.6342, 0.6351, 0.7474, 0.7545, 0.8523, 0.6209, 0.8556,
        0.9035, 0.7989, 0.8613, 0.8251, 0.5981, 0.6600, 0.8551, 0.3886, 0.5123,
        0.8865, 0.8794, 0.7802, 0.8205, 0.8259, 0.8464, 0.6412, 0.6060, 0.8361,
        0.8128, 0.7472, 0.5713, 0.8422, 0.7016, 0.8266, 0.6642, 0.8338, 0.8176,
        0.6570, 0.9014, 0.5219, 0.8251, 0.8480, 0.8577, 0.7760, 0.8650, 0.8525,
        0.8047, 0.8498, 0.8095, 0.8428, 0.7441, 0.8411, 0.7734, 0.8011, 0.7969,
        0.6399, 0.7530, 0.6389, 0.8062, 0.7903, 0.7130, 0.8280, 0.7154, 0.5846,
        0.8249, 0.5423, 0.5482, 0.6016, 0.8303, 0.7829, 0.6436, 0.7095, 0.7559,
        0.6712, 0.8025, 0.7799, 0.6730, 0.7433, 0.7813, 0.8392, 0.8644, 0.7441,
        0.8082, 0.7401, 0.5681, 0.5453, 0.6542, 0.7982, 0.8675, 0.7504, 0.7730,
        0.7108, 0.9091, 0.6949, 0.8526, 0.6269, 0.6329, 0.7164, 0.8439, 0.7973,
        0.8336, 0.6706, 0.7218, 0.7816, 0.6496, 0.6052, 0.5843, 0.7418, 0.8645,
        0.8097, 0.7243, 0.4864, 0.7813, 0.8438, 0.8858, 0.8148, 0.8276, 0.7243,
        0.7504, 0.7594, 0.7842, 0.7600, 0.7862, 0.6620, 0.7082, 0.7165, 0.8404,
        0.6071, 0.6892, 0.6528, 0.7949, 0.8301, 0.8160, 0.7107, 0.7121, 0.8272,
        0.7708, 0.6926, 0.8076, 0.8170, 0.7339, 0.7620, 0.8253, 0.6269],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(624.6478, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([836, 1])
Inertia: tensor([332.1090], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([836, 1280])
Centroid_list: tensor([[-0.0193, -0.0422, -0.0795,  ..., -0.0451,  0.0514, -0.2388],
        [-0.0193, -0.0422, -0.0795,  ..., -0.0451,  0.0514, -0.2388],
        [-0.0352, -0.0756, -0.0712,  ..., -0.0475,  0.0746, -0.3779],
        ...,
        [-0.0219, -0.0372, -0.0650,  ..., -0.0719,  0.0363, -0.1884],
        [-0.0219, -0.0372, -0.0650,  ..., -0.0719,  0.0363, -0.1884],
        [-0.0193, -0.0422, -0.0795,  ..., -0.0451,  0.0514, -0.2388]],
       device='cuda:0')
Computed C_score: tensor([0.5398, 0.7811, 0.4286, 0.8603, 0.7971, 0.7663, 0.8353, 0.8767, 0.8021,
        0.7688, 0.8500, 0.8362, 0.4947, 0.5444, 0.8291, 0.8507, 0.7825, 0.8209,
        0.8862, 0.7044, 0.8512, 0.8115, 0.7953, 0.8758, 0.9299, 0.8276, 0.6375,
        0.8003, 0.7529, 0.8489, 0.8691, 0.8158, 0.7493, 0.8906, 0.7347, 0.7764,
        0.8259, 0.6652, 0.8476, 0.6843, 0.7551, 0.6023, 0.7871, 0.7524, 0.8331,
        0.8558, 0.7697, 0.7415, 0.7889, 0.6152, 0.8369, 0.5485, 0.8347, 0.7733,
        0.8115, 0.7666, 0.4887, 0.6840, 0.6575, 0.7975, 0.8199, 0.7847, 0.8223,
        0.6648, 0.8787, 0.8092, 0.9004, 0.7917, 0.6950, 0.7221, 0.7632, 0.5072,
        0.8400, 0.6788, 0.7720, 0.8262, 0.6852, 0.6930, 0.8297, 0.8188, 0.4905,
        0.8693, 0.7280, 0.8559, 0.4783, 0.8196, 0.5028, 0.7773, 0.7974, 0.7926,
        0.9023, 0.8047, 0.7690, 0.7493, 0.7792, 0.7954, 0.7233, 0.8439, 0.6704,
        0.5318, 0.9115, 0.6299, 0.6702, 0.7690, 0.7832, 0.7342, 0.8017, 0.7975,
        0.8524, 0.6160, 0.8013, 0.7422, 0.8393, 0.8212, 0.6966, 0.6317, 0.8735,
        0.5988, 0.8001, 0.8632, 0.8554, 0.8113, 0.7838, 0.6527, 0.8802, 0.7660,
        0.7128, 0.6092, 0.8550, 0.5547, 0.7979, 0.6300, 0.8765, 0.7103, 0.7691,
        0.8180, 0.8092, 0.8027, 0.6017, 0.6736, 0.7761, 0.8035, 0.7938, 0.7480,
        0.7340, 0.7802, 0.8159, 0.7855, 0.8390, 0.6231, 0.9090, 0.8414, 0.8515,
        0.6984, 0.8957, 0.6977, 0.7745, 0.5041, 0.7280, 0.7976, 0.7095, 0.7323,
        0.7903, 0.6255, 0.7269, 0.8831, 0.7783, 0.6520, 0.7917, 0.7328, 0.8625,
        0.8713, 0.7694, 0.7935, 0.6740, 0.6835, 0.8799, 0.4636, 0.6092, 0.8720,
        0.7895, 0.8197, 0.8657, 0.8543, 0.5277, 0.8449, 0.8360, 0.7138, 0.8400,
        0.8157, 0.8182, 0.8963, 0.8040, 0.7322, 0.7737, 0.5898, 0.7723, 0.7551,
        0.6990, 0.7780, 0.7452, 0.7255, 0.7419, 0.8424, 0.8769, 0.7490, 0.7863,
        0.6370, 0.7674, 0.6791, 0.7200, 0.7275, 0.7314, 0.8414, 0.7020, 0.6639,
        0.7926, 0.5673, 0.8254, 0.8508, 0.7883, 0.8043, 0.8177, 0.8657, 0.7951,
        0.7623, 0.6670, 0.7072, 0.8209, 0.7966, 0.5930, 0.7743, 0.9155, 0.8766,
        0.8761, 0.6825, 0.8280, 0.8435, 0.7603, 0.5711, 0.7609, 0.7390, 0.7741,
        0.7119, 0.8129, 0.8209, 0.5057, 0.8255, 0.6957, 0.7194, 0.6488, 0.8564,
        0.7811, 0.8218, 0.8478, 0.8371, 0.8367, 0.5588, 0.7931, 0.7545, 0.6386,
        0.6098, 0.8421, 0.8177, 0.6145, 0.7466, 0.8723, 0.8714, 0.7637, 0.7945,
        0.7121, 0.8860, 0.8512, 0.5892, 0.8800, 0.8022, 0.8564, 0.8672, 0.6526,
        0.8759, 0.5195, 0.8071, 0.7839, 0.5231, 0.8203, 0.8049, 0.8337, 0.7679,
        0.7221, 0.8340, 0.6830, 0.6354, 0.7221, 0.7799, 0.7435, 0.5674, 0.8949,
        0.8167, 0.8002, 0.8248, 0.8662, 0.8324, 0.7980, 0.7244, 0.7741, 0.7878,
        0.5773, 0.8510, 0.7618, 0.6722, 0.8909, 0.6448, 0.8726, 0.7392, 0.8730,
        0.7520, 0.6773, 0.7439, 0.4993, 0.7760, 0.8662, 0.8592, 0.7329, 0.6596,
        0.7847, 0.6276, 0.8530, 0.7268, 0.7860, 0.7238, 0.7468, 0.6317, 0.8399,
        0.8360, 0.9044, 0.5229, 0.7767, 0.6778, 0.7906, 0.7844, 0.8598, 0.6330,
        0.7411, 0.8396, 0.7468, 0.6667, 0.7986, 0.6983, 0.7175, 0.6998, 0.8670,
        0.8515, 0.8652, 0.7261, 0.7434, 0.6563, 0.8075, 0.8740, 0.7250, 0.6364,
        0.7426, 0.7336, 0.8632, 0.8049, 0.7727, 0.7203, 0.7867, 0.6970, 0.8024,
        0.7019, 0.8647, 0.7792, 0.8529, 0.6388, 0.7519, 0.6871, 0.7058, 0.9155,
        0.8372, 0.5940, 0.5949, 0.7420, 0.9003, 0.6398, 0.8131, 0.8811, 0.8151,
        0.8028, 0.7559, 0.7564, 0.7385, 0.6418, 0.5344, 0.7783, 0.7533, 0.7690,
        0.8036, 0.7813, 0.6761, 0.7285, 0.4048, 0.7001, 0.6443, 0.7529, 0.7662,
        0.6813, 0.7865, 0.8218, 0.8003, 0.6162, 0.7408, 0.7664, 0.8042, 0.8170,
        0.8985, 0.8553, 0.8579, 0.7966, 0.6620, 0.6597, 0.8474, 0.8541, 0.7197,
        0.8197, 0.7610, 0.8358, 0.8136, 0.7649, 0.7740, 0.6821, 0.7167, 0.7088,
        0.8661, 0.5899, 0.8505, 0.8506, 0.6709, 0.6982, 0.7284, 0.6187, 0.6618,
        0.8198, 0.7484, 0.8690, 0.7907, 0.7289, 0.8131, 0.6912, 0.8435, 0.8575,
        0.8210, 0.7859, 0.6035, 0.6286, 0.7646, 0.8505, 0.6878, 0.8149, 0.7411,
        0.7599, 0.8920, 0.8033, 0.7680, 0.8341, 0.9136, 0.6161, 0.6873, 0.9050,
        0.8596, 0.7842, 0.8546, 0.7475, 0.7247, 0.7844, 0.7177, 0.8279, 0.6259,
        0.8587, 0.6155, 0.7384, 0.5385, 0.6464, 0.8668, 0.8298, 0.7784, 0.6216,
        0.8734, 0.5403, 0.8607, 0.7975, 0.8585, 0.7503, 0.7997, 0.7542, 0.8631,
        0.8766, 0.7629, 0.9029, 0.7284, 0.7785, 0.7857, 0.7346, 0.6825, 0.8317,
        0.8905, 0.8519, 0.8589, 0.6600, 0.5660, 0.4947, 0.8002, 0.6774, 0.8045,
        0.6618, 0.7476, 0.8072, 0.8124, 0.7402, 0.9262, 0.8324, 0.6065, 0.7528,
        0.8245, 0.6326, 0.8218, 0.6593, 0.8652, 0.8648, 0.7344, 0.8781, 0.7889,
        0.8748, 0.7534, 0.7665, 0.8344, 0.7901, 0.7874, 0.8619, 0.5270, 0.9001,
        0.7062, 0.7781, 0.8131, 0.8752, 0.7372, 0.7094, 0.7877, 0.8841, 0.8779,
        0.8175, 0.7773, 0.8760, 0.7869, 0.5890, 0.4953, 0.7172, 0.5847, 0.7503,
        0.6602, 0.7960, 0.7869, 0.8293, 0.8340, 0.6198, 0.6830, 0.8471, 0.7651,
        0.6563, 0.8261, 0.8513, 0.5591, 0.6550, 0.8387, 0.8028, 0.5988, 0.7601,
        0.6301, 0.7495, 0.8548, 0.7862, 0.7956, 0.8668, 0.7521, 0.8226, 0.6852,
        0.7969, 0.6988, 0.6660, 0.7759, 0.8708, 0.9176, 0.5054, 0.8761, 0.8010,
        0.7989, 0.6474, 0.7060, 0.7782, 0.7454, 0.7750, 0.8035, 0.8765, 0.8404,
        0.8045, 0.6283, 0.8649, 0.8962, 0.8596, 0.8656, 0.7250, 0.7723, 0.7687,
        0.6345, 0.8166, 0.6580, 0.8157, 0.6784, 0.8934, 0.8845, 0.6357, 0.9100,
        0.6539, 0.7577, 0.6050, 0.8135, 0.7067, 0.5681, 0.8122, 0.7672, 0.4993,
        0.7697, 0.8407, 0.8083, 0.8835, 0.6812, 0.8298, 0.8741, 0.8178, 0.6195,
        0.8095, 0.7905, 0.7822, 0.9076, 0.8156, 0.8159, 0.7786, 0.8492, 0.8104,
        0.8670, 0.5746, 0.6567, 0.7091, 0.8081, 0.7388, 0.8092, 0.7888, 0.7594,
        0.7262, 0.8001, 0.8287, 0.6112, 0.7611, 0.8858, 0.7341, 0.6640, 0.7449,
        0.7063, 0.8611, 0.7481, 0.8293, 0.8301, 0.6611, 0.7566, 0.6920, 0.5499,
        0.6972, 0.8391, 0.7526, 0.8178, 0.7580, 0.8483, 0.8447, 0.8213, 0.7644,
        0.6134, 0.7050, 0.7738, 0.6212, 0.8647, 0.8992, 0.9293, 0.8429, 0.7004,
        0.7300, 0.5457, 0.6932, 0.6843, 0.8024, 0.8106, 0.8691, 0.6885, 0.8450,
        0.8994, 0.8238, 0.8444, 0.8222, 0.5715, 0.7000, 0.8562, 0.5515, 0.5567,
        0.9220, 0.8864, 0.8521, 0.8134, 0.8426, 0.8576, 0.6545, 0.5858, 0.8794,
        0.8223, 0.7706, 0.6443, 0.8638, 0.7525, 0.8297, 0.6550, 0.8094, 0.8039,
        0.6743, 0.9365, 0.6006, 0.8179, 0.8603, 0.8347, 0.7261, 0.8586, 0.8810,
        0.7796, 0.8402, 0.7959, 0.8779, 0.7434, 0.8407, 0.7847, 0.8066, 0.8200,
        0.6495, 0.7579, 0.6766, 0.7801, 0.8255, 0.6806, 0.8254, 0.7248, 0.5223,
        0.8796, 0.6628, 0.6995, 0.7568, 0.8815, 0.7989, 0.6498, 0.7260, 0.7498,
        0.6546, 0.8308, 0.7604, 0.6075, 0.7110, 0.8323, 0.8632, 0.9108, 0.7834,
        0.8267, 0.7250, 0.5661, 0.6328, 0.7372, 0.7740, 0.9054, 0.7915, 0.7583,
        0.7302, 0.9028, 0.7286, 0.8227, 0.5695, 0.7146, 0.7782, 0.8793, 0.8173,
        0.7954, 0.7198, 0.7371, 0.8508, 0.7447, 0.6708, 0.6591, 0.7112, 0.8658,
        0.8379, 0.7049, 0.4947, 0.8015, 0.8981, 0.9264, 0.7851, 0.8685, 0.7151,
        0.7126, 0.7570, 0.7475, 0.7852, 0.7821, 0.6247, 0.7062, 0.6955, 0.8210,
        0.6186, 0.6981, 0.6791, 0.7926, 0.8217, 0.7918, 0.7736, 0.7075, 0.8051,
        0.8051, 0.6847, 0.8402, 0.7883, 0.7181, 0.8037, 0.8500, 0.6056],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(636.1396, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([836, 1])
Inertia: tensor([355.6585], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([836, 1280])
Centroid_list: tensor([[ 0.0068, -0.0375, -0.0481,  ..., -0.0899,  0.0371, -0.1195],
        [-0.0245, -0.0268, -0.0852,  ..., -0.0368,  0.0373, -0.2302],
        [-0.0365, -0.0766, -0.0718,  ..., -0.0421,  0.0778, -0.3977],
        ...,
        [-0.0437, -0.0585, -0.0742,  ..., -0.0654,  0.0543, -0.2739],
        [ 0.0068, -0.0375, -0.0481,  ..., -0.0899,  0.0371, -0.1195],
        [-0.0245, -0.0268, -0.0852,  ..., -0.0368,  0.0373, -0.2302]],
       device='cuda:0')
Computed C_score: tensor([0.5251, 0.8264, 0.4419, 0.8344, 0.7777, 0.7930, 0.8197, 0.8832, 0.8144,
        0.8222, 0.8328, 0.8324, 0.4941, 0.5433, 0.8868, 0.8263, 0.8278, 0.8414,
        0.9082, 0.7981, 0.8783, 0.8347, 0.8052, 0.8816, 0.9427, 0.8331, 0.6767,
        0.8630, 0.8203, 0.8668, 0.8630, 0.8293, 0.7650, 0.8995, 0.7221, 0.8565,
        0.8255, 0.7081, 0.8403, 0.7009, 0.7386, 0.6970, 0.7508, 0.7910, 0.8581,
        0.8788, 0.8007, 0.7261, 0.8013, 0.5458, 0.8886, 0.5913, 0.7994, 0.7856,
        0.8188, 0.7604, 0.5347, 0.7233, 0.6702, 0.8046, 0.8735, 0.7754, 0.8586,
        0.6982, 0.8642, 0.7892, 0.9241, 0.8194, 0.7218, 0.8040, 0.8011, 0.5154,
        0.8619, 0.6611, 0.7566, 0.8186, 0.7386, 0.7442, 0.9021, 0.8989, 0.5832,
        0.8942, 0.8048, 0.9094, 0.4610, 0.7679, 0.5384, 0.7540, 0.7959, 0.7998,
        0.8625, 0.7644, 0.7575, 0.8065, 0.8075, 0.7719, 0.8083, 0.8246, 0.6770,
        0.5807, 0.8883, 0.6333, 0.6664, 0.7917, 0.8387, 0.6850, 0.7934, 0.7810,
        0.8774, 0.7389, 0.7809, 0.7481, 0.8810, 0.8358, 0.7337, 0.6052, 0.8993,
        0.6771, 0.7849, 0.9089, 0.8339, 0.7804, 0.7783, 0.7012, 0.9319, 0.7519,
        0.7464, 0.5832, 0.8477, 0.6102, 0.8055, 0.6237, 0.9011, 0.8102, 0.8202,
        0.8174, 0.8035, 0.7989, 0.6592, 0.7300, 0.8124, 0.7697, 0.8089, 0.7819,
        0.8027, 0.7721, 0.8535, 0.8121, 0.8343, 0.6632, 0.8959, 0.8644, 0.8833,
        0.6298, 0.9057, 0.6762, 0.8117, 0.5580, 0.8160, 0.8155, 0.7429, 0.7884,
        0.8327, 0.6745, 0.7300, 0.9177, 0.8021, 0.7570, 0.7858, 0.7644, 0.8943,
        0.8927, 0.7978, 0.8136, 0.6994, 0.7137, 0.8993, 0.5470, 0.7023, 0.8715,
        0.8404, 0.8433, 0.8594, 0.8695, 0.5351, 0.8461, 0.8153, 0.6946, 0.8633,
        0.8716, 0.8882, 0.9087, 0.8733, 0.7653, 0.8016, 0.5828, 0.7518, 0.8135,
        0.6058, 0.7792, 0.7379, 0.7853, 0.6903, 0.8802, 0.9148, 0.8539, 0.7625,
        0.6447, 0.7674, 0.7742, 0.7396, 0.7091, 0.8199, 0.8769, 0.7166, 0.6828,
        0.8037, 0.5653, 0.8003, 0.8793, 0.8104, 0.8172, 0.8105, 0.8696, 0.7962,
        0.7467, 0.7598, 0.7629, 0.8238, 0.8005, 0.6243, 0.8229, 0.8685, 0.8533,
        0.8351, 0.6479, 0.8571, 0.8403, 0.8301, 0.6800, 0.7544, 0.7820, 0.8376,
        0.7216, 0.8420, 0.8902, 0.5660, 0.8616, 0.6901, 0.7345, 0.6455, 0.9002,
        0.7762, 0.8089, 0.8467, 0.8698, 0.8638, 0.5079, 0.7991, 0.7634, 0.6931,
        0.6320, 0.8641, 0.7922, 0.6306, 0.8183, 0.8967, 0.8886, 0.8134, 0.7651,
        0.6954, 0.9032, 0.8955, 0.5289, 0.9066, 0.8615, 0.8940, 0.8628, 0.6699,
        0.8588, 0.5754, 0.8128, 0.7838, 0.4611, 0.8299, 0.8233, 0.8472, 0.7466,
        0.7471, 0.8782, 0.7665, 0.5913, 0.7840, 0.8048, 0.7739, 0.6278, 0.9020,
        0.8257, 0.8129, 0.8719, 0.8786, 0.9009, 0.8062, 0.7477, 0.8166, 0.7824,
        0.5876, 0.8805, 0.7357, 0.6586, 0.8614, 0.7194, 0.8381, 0.7390, 0.8422,
        0.8046, 0.6405, 0.7619, 0.4567, 0.7950, 0.9243, 0.8786, 0.7151, 0.6128,
        0.8136, 0.5366, 0.8602, 0.8387, 0.7881, 0.6850, 0.8008, 0.6152, 0.8672,
        0.8713, 0.9258, 0.6112, 0.8325, 0.7067, 0.8269, 0.7629, 0.8319, 0.6637,
        0.7295, 0.8527, 0.7593, 0.5705, 0.8557, 0.7559, 0.7189, 0.7518, 0.8916,
        0.8147, 0.8956, 0.7869, 0.8590, 0.6518, 0.8153, 0.8989, 0.7328, 0.6377,
        0.7283, 0.8000, 0.8853, 0.8668, 0.7765, 0.7235, 0.7406, 0.6763, 0.7812,
        0.7218, 0.8757, 0.8299, 0.8898, 0.6471, 0.7569, 0.7431, 0.8189, 0.8762,
        0.8101, 0.7400, 0.6460, 0.8391, 0.9083, 0.6529, 0.8250, 0.9000, 0.8508,
        0.8067, 0.7898, 0.7971, 0.7856, 0.6086, 0.4907, 0.8345, 0.7945, 0.7664,
        0.8091, 0.8081, 0.7638, 0.7298, 0.4499, 0.7221, 0.6315, 0.7403, 0.7344,
        0.5941, 0.7976, 0.8096, 0.8261, 0.6754, 0.7078, 0.7925, 0.8302, 0.8450,
        0.9136, 0.8753, 0.8442, 0.7889, 0.6740, 0.6594, 0.8592, 0.8871, 0.7717,
        0.8375, 0.7446, 0.8850, 0.8059, 0.7620, 0.7929, 0.7334, 0.6961, 0.7073,
        0.8796, 0.6252, 0.8441, 0.8383, 0.6465, 0.7466, 0.7381, 0.5947, 0.7609,
        0.8734, 0.7489, 0.8704, 0.8091, 0.7970, 0.8033, 0.7965, 0.8648, 0.8570,
        0.7884, 0.7957, 0.5703, 0.6717, 0.8366, 0.8671, 0.7102, 0.8284, 0.7369,
        0.7442, 0.8735, 0.7950, 0.7456, 0.8517, 0.9164, 0.5622, 0.6969, 0.9144,
        0.8829, 0.7491, 0.8484, 0.8039, 0.7582, 0.7584, 0.7393, 0.8582, 0.6761,
        0.8218, 0.6000, 0.7140, 0.4959, 0.7587, 0.8684, 0.8408, 0.7294, 0.6210,
        0.8885, 0.4732, 0.8702, 0.8090, 0.8481, 0.7560, 0.8048, 0.7344, 0.8869,
        0.9126, 0.7493, 0.9041, 0.8518, 0.8216, 0.8329, 0.7478, 0.7055, 0.8303,
        0.8929, 0.8513, 0.8924, 0.6827, 0.7179, 0.4941, 0.8467, 0.6665, 0.8219,
        0.6112, 0.7559, 0.7938, 0.9027, 0.7704, 0.9338, 0.8148, 0.5327, 0.7244,
        0.8044, 0.6713, 0.8371, 0.6813, 0.8735, 0.8407, 0.7269, 0.9239, 0.8060,
        0.8345, 0.7902, 0.7490, 0.8628, 0.8050, 0.7564, 0.8764, 0.5281, 0.8697,
        0.7854, 0.7554, 0.8498, 0.8697, 0.7186, 0.6897, 0.7977, 0.8585, 0.9029,
        0.7860, 0.7764, 0.9076, 0.8662, 0.6589, 0.4358, 0.7302, 0.5949, 0.8174,
        0.7163, 0.8271, 0.7571, 0.9013, 0.8032, 0.6557, 0.6644, 0.9055, 0.7245,
        0.7808, 0.8332, 0.8243, 0.5849, 0.6503, 0.8608, 0.7559, 0.6570, 0.7772,
        0.6336, 0.7914, 0.8697, 0.8406, 0.8364, 0.8938, 0.7885, 0.8593, 0.6315,
        0.7989, 0.7704, 0.6852, 0.8682, 0.8647, 0.8829, 0.4951, 0.9031, 0.8194,
        0.8078, 0.6100, 0.7734, 0.7939, 0.8032, 0.8589, 0.8460, 0.8576, 0.8455,
        0.8397, 0.5729, 0.8486, 0.8598, 0.8663, 0.8535, 0.7345, 0.7405, 0.7615,
        0.7701, 0.8240, 0.6270, 0.8158, 0.7182, 0.9167, 0.9065, 0.5596, 0.8965,
        0.6546, 0.7984, 0.6715, 0.8027, 0.7974, 0.5378, 0.8358, 0.8058, 0.5227,
        0.8209, 0.8504, 0.7957, 0.8524, 0.7227, 0.8273, 0.8564, 0.8836, 0.7160,
        0.8547, 0.8024, 0.8140, 0.9267, 0.8149, 0.8405, 0.7931, 0.8430, 0.7914,
        0.8922, 0.5811, 0.7057, 0.7502, 0.8881, 0.7502, 0.8276, 0.8011, 0.7787,
        0.7667, 0.7847, 0.8357, 0.7351, 0.7845, 0.8438, 0.7709, 0.8035, 0.7588,
        0.8192, 0.8839, 0.7268, 0.8643, 0.9104, 0.6384, 0.7328, 0.8014, 0.4807,
        0.7062, 0.8067, 0.7717, 0.8665, 0.7580, 0.7946, 0.8612, 0.7908, 0.8016,
        0.6090, 0.7373, 0.7910, 0.6545, 0.8708, 0.8714, 0.9001, 0.8349, 0.7242,
        0.8177, 0.5467, 0.6864, 0.6370, 0.7752, 0.7731, 0.8466, 0.6364, 0.8520,
        0.8665, 0.8042, 0.8946, 0.8058, 0.5729, 0.6670, 0.9095, 0.4960, 0.6063,
        0.9096, 0.8620, 0.8628, 0.8203, 0.8673, 0.8399, 0.8009, 0.5669, 0.8946,
        0.7961, 0.7612, 0.5862, 0.8175, 0.7381, 0.8302, 0.6437, 0.8637, 0.8413,
        0.6739, 0.8854, 0.5501, 0.7971, 0.8209, 0.8740, 0.7770, 0.8435, 0.9032,
        0.8167, 0.8293, 0.8281, 0.8718, 0.7289, 0.8445, 0.7814, 0.8062, 0.8742,
        0.6428, 0.8414, 0.6212, 0.7936, 0.8779, 0.7275, 0.8085, 0.7661, 0.6285,
        0.8990, 0.5767, 0.5970, 0.6973, 0.8973, 0.8354, 0.6488, 0.8353, 0.7765,
        0.7912, 0.8646, 0.8303, 0.6529, 0.7010, 0.8246, 0.8605, 0.9006, 0.8086,
        0.8036, 0.7695, 0.6709, 0.6360, 0.7483, 0.8396, 0.8853, 0.7663, 0.7956,
        0.7109, 0.9034, 0.8138, 0.8614, 0.6037, 0.7096, 0.7834, 0.8872, 0.7809,
        0.8270, 0.8020, 0.7481, 0.8806, 0.6989, 0.6703, 0.5987, 0.6899, 0.9141,
        0.8618, 0.7256, 0.4941, 0.8658, 0.9211, 0.8863, 0.8412, 0.8802, 0.7022,
        0.6959, 0.7388, 0.7117, 0.8249, 0.8032, 0.6193, 0.7102, 0.6753, 0.8583,
        0.6050, 0.7049, 0.7694, 0.8883, 0.8749, 0.8117, 0.8424, 0.6993, 0.8352,
        0.8960, 0.7119, 0.8314, 0.7731, 0.7799, 0.8807, 0.8551, 0.5533],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(648.9911, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([836, 1])
Inertia: tensor([360.3859], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([836, 1280])
Centroid_list: tensor([[ 0.0055, -0.0365, -0.0504,  ..., -0.0904,  0.0333, -0.1163],
        [-0.0270, -0.0255, -0.0885,  ..., -0.0364,  0.0334, -0.1882],
        [-0.0088, -0.0528, -0.0499,  ..., -0.0634,  0.0729, -0.2960],
        ...,
        [-0.0478, -0.0595, -0.0784,  ..., -0.0643,  0.0522, -0.2825],
        [ 0.0055, -0.0365, -0.0504,  ..., -0.0904,  0.0333, -0.1163],
        [-0.0088, -0.0528, -0.0499,  ..., -0.0634,  0.0729, -0.2960]],
       device='cuda:0')
Computed C_score: tensor([0.5234, 0.8314, 0.4300, 0.8259, 0.8042, 0.8069, 0.8297, 0.8941, 0.8298,
        0.8186, 0.8423, 0.8265, 0.5541, 0.5383, 0.8941, 0.8276, 0.8331, 0.8442,
        0.9675, 0.7938, 0.8817, 0.8434, 0.8059, 0.8606, 0.9472, 0.8352, 0.7510,
        0.8661, 0.8262, 0.8744, 0.8032, 0.8313, 0.7739, 0.9346, 0.6416, 0.8580,
        0.8234, 0.7004, 0.8525, 0.7175, 0.8379, 0.7058, 0.7537, 0.7976, 0.9272,
        0.9437, 0.8111, 0.7164, 0.8103, 0.5229, 0.8808, 0.5845, 0.7958, 0.7830,
        0.8837, 0.7659, 0.5098, 0.7248, 0.6644, 0.8059, 0.8809, 0.7869, 0.8567,
        0.6947, 0.8680, 0.7680, 0.9527, 0.8131, 0.7140, 0.7959, 0.8054, 0.4653,
        0.8629, 0.7628, 0.8382, 0.8281, 0.7353, 0.7489, 0.8969, 0.9052, 0.5767,
        0.9070, 0.8234, 0.9113, 0.4475, 0.7566, 0.5495, 0.7583, 0.8022, 0.7973,
        0.8663, 0.7772, 0.8495, 0.8058, 0.8029, 0.8115, 0.8067, 0.8350, 0.6815,
        0.5763, 0.8899, 0.6331, 0.6544, 0.7811, 0.8455, 0.6840, 0.7665, 0.7717,
        0.9242, 0.7559, 0.7880, 0.7678, 0.8833, 0.8351, 0.7381, 0.7740, 0.9580,
        0.6725, 0.8004, 0.9098, 0.8357, 0.7871, 0.7774, 0.6877, 0.9385, 0.7424,
        0.7624, 0.5854, 0.8463, 0.6103, 0.8638, 0.6146, 0.9179, 0.8155, 0.8204,
        0.7706, 0.8162, 0.8019, 0.6647, 0.7167, 0.7999, 0.7589, 0.8043, 0.7826,
        0.8146, 0.7731, 0.8463, 0.8223, 0.8382, 0.6536, 0.8966, 0.8724, 0.9403,
        0.6169, 0.8939, 0.8371, 0.8159, 0.5675, 0.8136, 0.8274, 0.7778, 0.7744,
        0.8158, 0.6772, 0.7560, 0.9269, 0.7899, 0.7643, 0.7953, 0.7523, 0.8981,
        0.9417, 0.7872, 0.8167, 0.7161, 0.7083, 0.9651, 0.5338, 0.6876, 0.8721,
        0.8436, 0.8446, 0.8642, 0.8855, 0.5354, 0.8580, 0.8107, 0.8545, 0.8181,
        0.8772, 0.8937, 0.9156, 0.8707, 0.7640, 0.8131, 0.5415, 0.7523, 0.8206,
        0.5936, 0.7727, 0.7380, 0.7681, 0.6783, 0.8841, 0.9202, 0.8492, 0.7522,
        0.6374, 0.7780, 0.7811, 0.7498, 0.7037, 0.8088, 0.8941, 0.8741, 0.6844,
        0.8153, 0.6583, 0.8020, 0.8905, 0.8014, 0.8223, 0.8648, 0.8697, 0.8007,
        0.7956, 0.7748, 0.7676, 0.8152, 0.8050, 0.7383, 0.8351, 0.8759, 0.8192,
        0.8455, 0.7774, 0.8554, 0.8476, 0.8338, 0.6913, 0.7542, 0.7906, 0.8451,
        0.7235, 0.8438, 0.8931, 0.5822, 0.8775, 0.7618, 0.7343, 0.6459, 0.9051,
        0.7836, 0.8161, 0.8574, 0.8721, 0.8647, 0.4713, 0.8008, 0.7779, 0.7677,
        0.6370, 0.8701, 0.8063, 0.6243, 0.8230, 0.9598, 0.9405, 0.8059, 0.7513,
        0.6879, 0.9181, 0.8983, 0.5222, 0.9260, 0.8592, 0.8956, 0.8735, 0.7169,
        0.8678, 0.5710, 0.8101, 0.7748, 0.4984, 0.8309, 0.8346, 0.8556, 0.7527,
        0.7753, 0.8873, 0.7578, 0.5896, 0.7878, 0.8928, 0.7744, 0.6246, 0.9054,
        0.8287, 0.8191, 0.8799, 0.8818, 0.8975, 0.8123, 0.7496, 0.8221, 0.8272,
        0.5864, 0.8778, 0.7986, 0.6251, 0.8569, 0.7122, 0.8446, 0.7431, 0.8454,
        0.8077, 0.6373, 0.7622, 0.6830, 0.8103, 0.9323, 0.9147, 0.7000, 0.8250,
        0.8108, 0.5171, 0.8617, 0.8373, 0.7774, 0.6787, 0.8071, 0.7260, 0.9441,
        0.8723, 0.9314, 0.6092, 0.8419, 0.7148, 0.8298, 0.7623, 0.8311, 0.7285,
        0.7344, 0.8515, 0.7611, 0.5510, 0.8578, 0.7509, 0.7272, 0.7403, 0.8988,
        0.8189, 0.9105, 0.7804, 0.8596, 0.7149, 0.8275, 0.8988, 0.7346, 0.6439,
        0.8319, 0.8074, 0.8880, 0.8734, 0.7670, 0.7380, 0.7525, 0.7879, 0.7748,
        0.7087, 0.8844, 0.8435, 0.8909, 0.6323, 0.7677, 0.7285, 0.8158, 0.8837,
        0.7960, 0.7507, 0.6569, 0.8373, 0.8917, 0.6863, 0.8286, 0.9214, 0.8533,
        0.8185, 0.7902, 0.7975, 0.7768, 0.6051, 0.6241, 0.8385, 0.7904, 0.7685,
        0.8023, 0.8146, 0.7560, 0.7343, 0.4884, 0.7132, 0.7066, 0.7694, 0.7450,
        0.5860, 0.8050, 0.8056, 0.8239, 0.6572, 0.7128, 0.7942, 0.8265, 0.8404,
        0.9521, 0.8856, 0.8548, 0.7895, 0.7181, 0.6837, 0.8610, 0.8893, 0.7633,
        0.8407, 0.8588, 0.8891, 0.8454, 0.7719, 0.7967, 0.7242, 0.6817, 0.6942,
        0.9082, 0.6115, 0.8462, 0.8362, 0.7068, 0.7688, 0.7395, 0.5939, 0.7618,
        0.8856, 0.7530, 0.8095, 0.8167, 0.7986, 0.8007, 0.7866, 0.8730, 0.8605,
        0.7965, 0.8012, 0.5551, 0.6753, 0.8446, 0.9275, 0.7949, 0.8344, 0.7269,
        0.7444, 0.8753, 0.7995, 0.7475, 0.8635, 0.9027, 0.6672, 0.7658, 0.9468,
        0.9498, 0.7454, 0.8370, 0.8044, 0.7572, 0.7316, 0.7441, 0.8615, 0.7007,
        0.8177, 0.7133, 0.7045, 0.5002, 0.7535, 0.8795, 0.8505, 0.7316, 0.6789,
        0.8960, 0.6931, 0.8917, 0.8134, 0.8622, 0.7537, 0.7985, 0.7375, 0.8939,
        0.9218, 0.7461, 0.9222, 0.8569, 0.8359, 0.8453, 0.7465, 0.6998, 0.8433,
        0.8933, 0.8422, 0.8978, 0.6852, 0.7327, 0.5541, 0.8535, 0.6576, 0.8131,
        0.5927, 0.7513, 0.7872, 0.9062, 0.7644, 0.9654, 0.8273, 0.5249, 0.7145,
        0.8531, 0.8087, 0.8444, 0.6935, 0.8825, 0.8437, 0.7345, 0.9322, 0.8128,
        0.8380, 0.7940, 0.7434, 0.8670, 0.8126, 0.7586, 0.8843, 0.5565, 0.8799,
        0.7824, 0.7641, 0.8554, 0.8841, 0.7082, 0.6857, 0.8139, 0.8560, 0.9309,
        0.7897, 0.7716, 0.9194, 0.8668, 0.6421, 0.4577, 0.7268, 0.5919, 0.8125,
        0.7130, 0.8331, 0.7471, 0.9057, 0.8114, 0.6566, 0.6673, 0.9094, 0.7114,
        0.7855, 0.8355, 0.8243, 0.5783, 0.7095, 0.8632, 0.7609, 0.7201, 0.8009,
        0.6342, 0.7898, 0.9309, 0.8466, 0.8461, 0.8918, 0.7931, 0.8638, 0.6329,
        0.7853, 0.7672, 0.6792, 0.8701, 0.8684, 0.8886, 0.4859, 0.9628, 0.8251,
        0.8145, 0.6096, 0.7771, 0.8130, 0.8120, 0.8684, 0.8418, 0.8677, 0.8558,
        0.8438, 0.5644, 0.8554, 0.8687, 0.8789, 0.8551, 0.7282, 0.8380, 0.7614,
        0.7861, 0.7912, 0.8011, 0.8075, 0.7329, 0.9425, 0.9599, 0.5593, 0.9001,
        0.6547, 0.7922, 0.6636, 0.8113, 0.7959, 0.6282, 0.8423, 0.8165, 0.4741,
        0.8275, 0.7704, 0.8813, 0.8633, 0.7221, 0.8267, 0.8594, 0.8806, 0.7338,
        0.8661, 0.8125, 0.8303, 0.9716, 0.8214, 0.8522, 0.7991, 0.8698, 0.7832,
        0.9465, 0.5700, 0.6957, 0.7526, 0.8773, 0.7321, 0.8263, 0.8064, 0.7765,
        0.7450, 0.7657, 0.7885, 0.7463, 0.7890, 0.8416, 0.7688, 0.8022, 0.7648,
        0.8331, 0.8920, 0.6585, 0.8589, 0.9153, 0.6143, 0.8205, 0.8049, 0.4690,
        0.7015, 0.8087, 0.7775, 0.8773, 0.7646, 0.7888, 0.9301, 0.7877, 0.8036,
        0.5986, 0.7437, 0.7985, 0.6434, 0.8770, 0.8743, 0.9044, 0.8334, 0.7170,
        0.8050, 0.5720, 0.6919, 0.6315, 0.7801, 0.7747, 0.8530, 0.6252, 0.8537,
        0.8648, 0.8102, 0.9002, 0.8152, 0.6143, 0.6498, 0.9183, 0.4617, 0.6142,
        0.9182, 0.8668, 0.8644, 0.8138, 0.8690, 0.8449, 0.8118, 0.7425, 0.9288,
        0.8003, 0.7650, 0.5698, 0.8138, 0.7348, 0.8332, 0.7020, 0.8698, 0.8441,
        0.6349, 0.8912, 0.5946, 0.8078, 0.8162, 0.8769, 0.7729, 0.8513, 0.9053,
        0.8334, 0.8456, 0.8344, 0.8664, 0.7040, 0.8469, 0.7827, 0.8150, 0.8770,
        0.8173, 0.8503, 0.6909, 0.8023, 0.8941, 0.7201, 0.8043, 0.7663, 0.6322,
        0.9611, 0.5612, 0.5837, 0.6866, 0.9497, 0.8278, 0.7847, 0.8325, 0.7645,
        0.8041, 0.8721, 0.8401, 0.6948, 0.7607, 0.8225, 0.8624, 0.9122, 0.7997,
        0.8073, 0.7684, 0.6563, 0.6291, 0.7561, 0.8496, 0.8852, 0.8028, 0.7973,
        0.7156, 0.9121, 0.8099, 0.8702, 0.7157, 0.7108, 0.7879, 0.9346, 0.7838,
        0.8394, 0.8065, 0.7394, 0.8896, 0.7007, 0.6822, 0.5816, 0.7325, 0.9208,
        0.8636, 0.7274, 0.5541, 0.8668, 0.9439, 0.8929, 0.8463, 0.9264, 0.7189,
        0.8409, 0.7428, 0.8652, 0.8363, 0.8010, 0.8283, 0.7098, 0.7753, 0.8569,
        0.7133, 0.7245, 0.7548, 0.8905, 0.8755, 0.8170, 0.8360, 0.8048, 0.8475,
        0.8991, 0.7031, 0.8304, 0.7721, 0.7865, 0.8950, 0.8538, 0.7567],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(658.3606, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0011, 0.0032, 0.0064, 0.0100], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([11, 1280])
S-Scores: tensor([0.5785, 1.3134, 2.6406, 4.4920], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([226.7842], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0532, -0.0402, -0.1017,  ..., -0.0428,  0.0689, -0.3453],
        [-0.0290, -0.0731, -0.1128,  ..., -0.1127,  0.0352,  0.0864],
        [-0.0532, -0.0402, -0.1017,  ..., -0.0428,  0.0689, -0.3453],
        ...,
        [-0.0532, -0.0402, -0.1017,  ..., -0.0428,  0.0689, -0.3453],
        [-0.0532, -0.0402, -0.1017,  ..., -0.0428,  0.0689, -0.3453],
        [-0.0532, -0.0402, -0.1017,  ..., -0.0428,  0.0689, -0.3453]],
       device='cuda:0')
Computed C_score: tensor([0.6696, 0.9071, 0.7846, 0.8864, 0.6940, 0.4163, 0.6768, 0.6792, 0.6132,
        0.6991, 0.6090], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(7.6354, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([255.8344], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0533, -0.0301, -0.1306,  ..., -0.0453,  0.0542, -0.3730],
        [-0.0290, -0.0731, -0.1128,  ..., -0.1127,  0.0352,  0.0864],
        [-0.0533, -0.0301, -0.1306,  ..., -0.0453,  0.0542, -0.3730],
        ...,
        [-0.0530, -0.0570, -0.0536,  ..., -0.0387,  0.0933, -0.2992],
        [-0.0533, -0.0301, -0.1306,  ..., -0.0453,  0.0542, -0.3730],
        [-0.0530, -0.0570, -0.0536,  ..., -0.0387,  0.0933, -0.2992]],
       device='cuda:0')
Computed C_score: tensor([0.6226, 0.9071, 0.8217, 0.8864, 0.8526, 0.5628, 0.8770, 0.8234, 0.8185,
        0.8230, 0.7074], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(8.7025, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([77.3935], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0381, -0.0509, -0.0849,  ..., -0.0304,  0.0563, -0.4739],
        [-0.0290, -0.0731, -0.1128,  ..., -0.1127,  0.0352,  0.0864],
        [-0.0381, -0.0509, -0.0849,  ..., -0.0304,  0.0563, -0.4739],
        ...,
        [-0.0530, -0.0570, -0.0536,  ..., -0.0387,  0.0933, -0.2992],
        [-0.0634, -0.0163, -0.1611,  ..., -0.0553,  0.0528, -0.3058],
        [-0.0530, -0.0570, -0.0536,  ..., -0.0387,  0.0933, -0.2992]],
       device='cuda:0')
Computed C_score: tensor([0.9028, 0.9071, 0.8779, 0.8864, 0.8526, 0.6959, 0.8770, 0.8697, 0.8185,
        0.8535, 0.7074], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(9.2487, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([6.1035e-05], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0221, -0.0729, -0.0846,  ..., -0.0364,  0.0782, -0.6766],
        [-0.0290, -0.0731, -0.1128,  ..., -0.1127,  0.0352,  0.0864],
        [-0.0541, -0.0288, -0.0852,  ..., -0.0243,  0.0345, -0.2712],
        ...,
        [-0.0530, -0.0570, -0.0536,  ..., -0.0387,  0.0933, -0.2992],
        [-0.0634, -0.0163, -0.1611,  ..., -0.0553,  0.0528, -0.3058],
        [-0.0530, -0.0570, -0.0536,  ..., -0.0387,  0.0933, -0.2992]],
       device='cuda:0')
Computed C_score: tensor([1.0000, 0.9071, 1.0000, 0.8864, 0.8526, 0.6959, 0.8770, 0.8697, 0.8185,
        0.8535, 0.7074], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(9.4681, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0704, 0.1311, 0.2221, 0.3218], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1763, 1280])
S-Scores: tensor([0.6338, 1.8401, 3.6120, 6.2258], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1763, 1])
Inertia: tensor([244.3278], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1763, 1280])
Centroid_list: tensor([[-0.0414, -0.0686, -0.0823,  ..., -0.0609,  0.0788, -0.3797],
        [-0.0414, -0.0686, -0.0823,  ..., -0.0609,  0.0788, -0.3797],
        [-0.0275, -0.0405, -0.0656,  ..., -0.0208,  0.0443, -0.6443],
        ...,
        [-0.0414, -0.0686, -0.0823,  ..., -0.0609,  0.0788, -0.3797],
        [-0.0275, -0.0405, -0.0656,  ..., -0.0208,  0.0443, -0.6443],
        [-0.0275, -0.0405, -0.0656,  ..., -0.0208,  0.0443, -0.6443]],
       device='cuda:0')
Computed C_score: tensor([0.5937, 0.6367, 0.7824,  ..., 0.5729, 0.4150, 0.5872], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1324.6862, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1763, 1])
Inertia: tensor([189.0591], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1763, 1280])
Centroid_list: tensor([[-0.0290, -0.0520, -0.0827,  ..., -0.0576,  0.0747, -0.3420],
        [-0.0512, -0.0822, -0.0816,  ..., -0.0588,  0.0809, -0.4016],
        [-0.0301, -0.0403, -0.0594,  ..., -0.0100,  0.0347, -0.7673],
        ...,
        [-0.0290, -0.0520, -0.0827,  ..., -0.0576,  0.0747, -0.3420],
        [-0.0290, -0.0520, -0.0827,  ..., -0.0576,  0.0747, -0.3420],
        [-0.0290, -0.0520, -0.0827,  ..., -0.0576,  0.0747, -0.3420]],
       device='cuda:0')
Computed C_score: tensor([0.6886, 0.6593, 0.7816,  ..., 0.6410, 0.5283, 0.6867], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1366.3826, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1763, 1])
Inertia: tensor([193.6014], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1763, 1280])
Centroid_list: tensor([[-0.0294, -0.0504, -0.0848,  ..., -0.0527,  0.0747, -0.3298],
        [-0.0332, -0.0662, -0.0752,  ..., -0.0721,  0.0771, -0.3685],
        [-0.0301, -0.0404, -0.0593,  ..., -0.0103,  0.0347, -0.7650],
        ...,
        [-0.0294, -0.0504, -0.0848,  ..., -0.0527,  0.0747, -0.3298],
        [-0.0294, -0.0504, -0.0848,  ..., -0.0527,  0.0747, -0.3298],
        [-0.0294, -0.0504, -0.0848,  ..., -0.0527,  0.0747, -0.3298]],
       device='cuda:0')
Computed C_score: tensor([0.6794, 0.5979, 0.7801,  ..., 0.6453, 0.5363, 0.6979], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1384.4148, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1763, 1])
Inertia: tensor([185.6603], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1763, 1280])
Centroid_list: tensor([[-0.0146, -0.0420, -0.0879,  ..., -0.0584,  0.0801, -0.2102],
        [-0.0380, -0.0684, -0.0790,  ..., -0.0682,  0.0779, -0.3718],
        [-0.0286, -0.0372, -0.0601,  ..., -0.0071,  0.0308, -0.7678],
        ...,
        [-0.0146, -0.0420, -0.0879,  ..., -0.0584,  0.0801, -0.2102],
        [-0.0146, -0.0420, -0.0879,  ..., -0.0584,  0.0801, -0.2102],
        [-0.0146, -0.0420, -0.0879,  ..., -0.0584,  0.0801, -0.2102]],
       device='cuda:0')
Computed C_score: tensor([0.6955, 0.6202, 0.7715,  ..., 0.6087, 0.5531, 0.6896], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1401.3351, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0005, 0.0013, 0.0026, 0.0044], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([2331, 1280])
S-Scores: tensor([0.6848, 2.0616, 4.1758, 7.0535], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([2331, 1])
Inertia: tensor([172.5052], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([2331, 1280])
Centroid_list: tensor([[-0.0162, -0.0685, -0.0712,  ..., -0.0384,  0.0538,  0.1845],
        [-0.0162, -0.0685, -0.0712,  ..., -0.0384,  0.0538,  0.1845],
        [-0.0162, -0.0685, -0.0712,  ..., -0.0384,  0.0538,  0.1845],
        ...,
        [-0.0162, -0.0685, -0.0712,  ..., -0.0384,  0.0538,  0.1845],
        [-0.0362, -0.0694, -0.0660,  ..., -0.0545,  0.0750, -0.3412],
        [-0.0162, -0.0685, -0.0712,  ..., -0.0384,  0.0538,  0.1845]],
       device='cuda:0')
Computed C_score: tensor([0.7402, 0.6292, 0.6429,  ..., 0.8723, 0.7734, 0.7967], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1674.1399, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2331, 1])
Inertia: tensor([129.4712], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([2331, 1280])
Centroid_list: tensor([[-0.0047, -0.0679, -0.0758,  ..., -0.0264,  0.0499,  0.3754],
        [-0.0308, -0.0691, -0.0659,  ..., -0.0549,  0.0604, -0.1193],
        [-0.0308, -0.0691, -0.0659,  ..., -0.0549,  0.0604, -0.1193],
        ...,
        [-0.0047, -0.0679, -0.0758,  ..., -0.0264,  0.0499,  0.3754],
        [-0.0370, -0.0697, -0.0658,  ..., -0.0508,  0.0781, -0.3099],
        [-0.0047, -0.0679, -0.0758,  ..., -0.0264,  0.0499,  0.3754]],
       device='cuda:0')
Computed C_score: tensor([0.8150, 0.7105, 0.6885,  ..., 0.8716, 0.7599, 0.8544], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1726.7762, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2331, 1])
Inertia: tensor([133.9756], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([2331, 1280])
Centroid_list: tensor([[ 0.0066, -0.0615, -0.0863,  ..., -0.0258,  0.0587,  0.2129],
        [-0.0314, -0.0668, -0.0664,  ..., -0.0591,  0.0662, -0.2501],
        [-0.0314, -0.0668, -0.0664,  ..., -0.0591,  0.0662, -0.2501],
        ...,
        [-0.0224, -0.0757, -0.0627,  ..., -0.0316,  0.0406,  0.4658],
        [-0.0394, -0.0710, -0.0657,  ..., -0.0517,  0.0783, -0.3002],
        [ 0.0066, -0.0615, -0.0863,  ..., -0.0258,  0.0587,  0.2129]],
       device='cuda:0')
Computed C_score: tensor([0.8067, 0.7078, 0.6911,  ..., 0.8630, 0.7503, 0.8117], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1754.3440, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2331, 1])
Inertia: tensor([133.3791], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([2331, 1280])
Centroid_list: tensor([[ 0.0081, -0.0617, -0.0892,  ..., -0.0248,  0.0593,  0.2074],
        [-0.0120, -0.0473, -0.0584,  ..., -0.0572,  0.0677, -0.2104],
        [-0.0120, -0.0473, -0.0584,  ..., -0.0572,  0.0677, -0.2104],
        ...,
        [-0.0208, -0.0758, -0.0618,  ..., -0.0295,  0.0387,  0.5336],
        [-0.0405, -0.0717, -0.0663,  ..., -0.0514,  0.0786, -0.3001],
        [-0.0208, -0.0758, -0.0618,  ..., -0.0295,  0.0387,  0.5336]],
       device='cuda:0')
Computed C_score: tensor([0.8069, 0.7074, 0.7209,  ..., 0.8658, 0.7387, 0.8259], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1778.1045, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0004, 0.0012, 0.0024, 0.0040], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([2740, 1280])
S-Scores: tensor([0.7304, 2.1474, 4.1893, 6.8077], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([2740, 1])
Inertia: tensor([209.7998], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([2740, 1280])
Centroid_list: tensor([[-0.0421, -0.0608, -0.0544,  ..., -0.0380,  0.0811, -0.0769],
        [-0.0421, -0.0608, -0.0544,  ..., -0.0380,  0.0811, -0.0769],
        [-0.0421, -0.0608, -0.0544,  ..., -0.0380,  0.0811, -0.0769],
        ...,
        [-0.0421, -0.0608, -0.0544,  ..., -0.0380,  0.0811, -0.0769],
        [-0.0421, -0.0608, -0.0544,  ..., -0.0380,  0.0811, -0.0769],
        [-0.0421, -0.0608, -0.0544,  ..., -0.0380,  0.0811, -0.0769]],
       device='cuda:0')
Computed C_score: tensor([0.6767, 0.6731, 0.7888,  ..., 0.4578, 0.5462, 0.6826], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1889.0610, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2740, 1])
Inertia: tensor([226.8655], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([2740, 1280])
Centroid_list: tensor([[-0.0358, -0.0520, -0.0529,  ..., -0.0320,  0.0828, -0.0104],
        [-0.0629, -0.0849, -0.0607,  ..., -0.0579,  0.0768, -0.3555],
        [-0.0358, -0.0520, -0.0529,  ..., -0.0320,  0.0828, -0.0104],
        ...,
        [-0.0358, -0.0520, -0.0529,  ..., -0.0320,  0.0828, -0.0104],
        [-0.0358, -0.0520, -0.0529,  ..., -0.0320,  0.0828, -0.0104],
        [-0.0358, -0.0520, -0.0529,  ..., -0.0320,  0.0828, -0.0104]],
       device='cuda:0')
Computed C_score: tensor([0.6439, 0.8077, 0.8136,  ..., 0.4723, 0.5409, 0.6898], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1949.3763, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2740, 1])
Inertia: tensor([225.9241], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([2740, 1280])
Centroid_list: tensor([[-0.0402, -0.0630, -0.0481,  ..., -0.0459,  0.0762,  0.1663],
        [-0.0659, -0.0891, -0.0614,  ..., -0.0585,  0.0758, -0.3584],
        [-0.0334, -0.0413, -0.0586,  ..., -0.0201,  0.0904, -0.2652],
        ...,
        [-0.0402, -0.0630, -0.0481,  ..., -0.0459,  0.0762,  0.1663],
        [-0.0334, -0.0413, -0.0586,  ..., -0.0201,  0.0904, -0.2652],
        [-0.0402, -0.0630, -0.0481,  ..., -0.0459,  0.0762,  0.1663]],
       device='cuda:0')
Computed C_score: tensor([0.6451, 0.8118, 0.7857,  ..., 0.5087, 0.5474, 0.7007], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1996.8784, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2740, 1])
Inertia: tensor([180.5787], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([2740, 1280])
Centroid_list: tensor([[-0.0093, -0.0521, -0.0461,  ..., -0.0516,  0.0907, -0.0520],
        [-0.0704, -0.0908, -0.0619,  ..., -0.0580,  0.0750, -0.3773],
        [-0.0790, -0.0766, -0.0557,  ..., -0.0354,  0.0601,  0.2746],
        ...,
        [-0.0093, -0.0521, -0.0461,  ..., -0.0516,  0.0907, -0.0520],
        [-0.0093, -0.0521, -0.0461,  ..., -0.0516,  0.0907, -0.0520],
        [-0.0093, -0.0521, -0.0461,  ..., -0.0516,  0.0907, -0.0520]],
       device='cuda:0')
Computed C_score: tensor([0.7359, 0.8132, 0.8006,  ..., 0.5413, 0.5260, 0.6783], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2029.3739, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0004, 0.0011, 0.0021, 0.0033], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([733, 1280])
S-Scores: tensor([0.6581, 2.0028, 4.0853, 6.2547], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([733, 1])
Inertia: tensor([150.7061], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([733, 1280])
Centroid_list: tensor([[-0.0360, -0.0684, -0.0494,  ..., -0.0623,  0.0830, -0.3359],
        [-0.0360, -0.0684, -0.0494,  ..., -0.0623,  0.0830, -0.3359],
        [-0.0076, -0.0666, -0.0372,  ..., -0.0712,  0.0745, -0.2102],
        ...,
        [-0.0076, -0.0666, -0.0372,  ..., -0.0712,  0.0745, -0.2102],
        [-0.0360, -0.0684, -0.0494,  ..., -0.0623,  0.0830, -0.3359],
        [-0.0076, -0.0666, -0.0372,  ..., -0.0712,  0.0745, -0.2102]],
       device='cuda:0')
Computed C_score: tensor([0.7795, 0.7146, 0.7103, 0.6341, 0.7929, 0.6426, 0.6067, 0.5988, 0.7058,
        0.6444, 0.6574, 0.8220, 0.7918, 0.6102, 0.6827, 0.6338, 0.6499, 0.6092,
        0.7675, 0.5988, 0.8399, 0.8031, 0.7036, 0.5969, 0.5484, 0.8196, 0.7797,
        0.7271, 0.7556, 0.5021, 0.7314, 0.6734, 0.6807, 0.6231, 0.6968, 0.5731,
        0.5770, 0.6540, 0.5012, 0.7769, 0.6226, 0.4695, 0.8946, 0.3817, 0.7210,
        0.5956, 0.7006, 0.6808, 0.7533, 0.6319, 0.6864, 0.7465, 0.6830, 0.6514,
        0.6779, 0.6768, 0.6010, 0.6542, 0.7714, 0.7656, 0.7473, 0.8298, 0.5166,
        0.7128, 0.8063, 0.8227, 0.5398, 0.6401, 0.5332, 0.6195, 0.7293, 0.6647,
        0.7195, 0.6023, 0.8580, 0.6212, 0.5518, 0.5666, 0.7095, 0.6454, 0.7591,
        0.6117, 0.6997, 0.6431, 0.4190, 0.6508, 0.6639, 0.6072, 0.7773, 0.8739,
        0.7706, 0.6525, 0.5328, 0.8530, 0.6881, 0.5598, 0.6969, 0.6620, 0.7322,
        0.6077, 0.7881, 0.8997, 0.6624, 0.5657, 0.6571, 0.6952, 0.7635, 0.7128,
        0.8231, 0.6338, 0.6520, 0.7595, 0.6764, 0.6400, 0.5318, 0.5633, 0.5232,
        0.4844, 0.6973, 0.6134, 0.8020, 0.4477, 0.7201, 0.5916, 0.7561, 0.5680,
        0.6853, 0.6573, 0.7143, 0.7883, 0.7078, 0.6503, 0.7149, 0.6335, 0.6759,
        0.6542, 0.6112, 0.7732, 0.6972, 0.7161, 0.8426, 0.6274, 0.6070, 0.5865,
        0.7432, 0.7724, 0.6163, 0.7258, 0.6337, 0.6541, 0.6215, 0.8088, 0.5971,
        0.8246, 0.8993, 0.5638, 0.6979, 0.6836, 0.7187, 0.8151, 0.6578, 0.6235,
        0.7605, 0.7777, 0.5625, 0.8009, 0.5977, 0.5173, 0.7870, 0.7940, 0.7131,
        0.6574, 0.6726, 0.7739, 0.5298, 0.6438, 0.4916, 0.7407, 0.7412, 0.7171,
        0.7381, 0.7121, 0.8359, 0.6636, 0.7385, 0.6175, 0.7545, 0.6306, 0.8400,
        0.7390, 0.6100, 0.7963, 0.5785, 0.7037, 0.6256, 0.7441, 0.7103, 0.7489,
        0.6397, 0.6587, 0.7267, 0.7389, 0.5905, 0.5813, 0.7051, 0.5952, 0.5269,
        0.7052, 0.6541, 0.7607, 0.6575, 0.6740, 0.6652, 0.7797, 0.6555, 0.4378,
        0.5631, 0.7136, 0.7936, 0.7165, 0.6766, 0.6897, 0.7852, 0.7273, 0.5078,
        0.7496, 0.6189, 0.8182, 0.8755, 0.6068, 0.6460, 0.6424, 0.7824, 0.7440,
        0.6373, 0.7690, 0.7507, 0.5413, 0.7605, 0.4828, 0.6146, 0.6022, 0.6869,
        0.8699, 0.4679, 0.8376, 0.7732, 0.8312, 0.5514, 0.4791, 0.6949, 0.7569,
        0.6132, 0.6865, 0.6972, 0.6619, 0.6734, 0.6311, 0.6117, 0.8274, 0.5299,
        0.6128, 0.6868, 0.5971, 0.6389, 0.8529, 0.6146, 0.5500, 0.6725, 0.8687,
        0.5302, 0.7010, 0.6584, 0.8675, 0.6417, 0.8251, 0.6103, 0.6546, 0.8549,
        0.7250, 0.7865, 0.6157, 0.6703, 0.7493, 0.4724, 0.7988, 0.7415, 0.5954,
        0.6099, 0.6759, 0.7128, 0.6945, 0.5818, 0.7628, 0.7593, 0.6811, 0.5667,
        0.6736, 0.6268, 0.8116, 0.6631, 0.7084, 0.5504, 0.6728, 0.6316, 0.6803,
        0.7222, 0.5697, 0.8764, 0.7632, 0.7560, 0.5755, 0.6276, 0.7203, 0.6382,
        0.6874, 0.6951, 0.7011, 0.7224, 0.5969, 0.8456, 0.6035, 0.6387, 0.6800,
        0.6255, 0.8468, 0.5652, 0.5872, 0.5911, 0.6316, 0.7163, 0.6496, 0.7711,
        0.4655, 0.5712, 0.7324, 0.8714, 0.5151, 0.7049, 0.6573, 0.8042, 0.6699,
        0.5710, 0.8224, 0.6732, 0.7275, 0.7475, 0.7096, 0.7096, 0.5939, 0.6034,
        0.7021, 0.7497, 0.5333, 0.7206, 0.7227, 0.7421, 0.8109, 0.7652, 0.5720,
        0.6969, 0.8968, 0.7174, 0.7371, 0.7298, 0.8266, 0.6378, 0.6134, 0.5991,
        0.8269, 0.8138, 0.7109, 0.6369, 0.7663, 0.6357, 0.6722, 0.6695, 0.7083,
        0.6664, 0.8634, 0.6578, 0.6853, 0.5972, 0.7038, 0.7332, 0.6895, 0.6864,
        0.5492, 0.6821, 0.7869, 0.8568, 0.4635, 0.6948, 0.7014, 0.8456, 0.7706,
        0.7236, 0.6034, 0.6045, 0.7995, 0.5795, 0.6688, 0.6234, 0.6030, 0.8542,
        0.6240, 0.6456, 0.6494, 0.7591, 0.6735, 0.6651, 0.7339, 0.6897, 0.6405,
        0.7974, 0.5954, 0.6521, 0.7714, 0.8475, 0.6979, 0.8503, 0.7552, 0.7675,
        0.5522, 0.7303, 0.5166, 0.8084, 0.8087, 0.7152, 0.6547, 0.4430, 0.5934,
        0.6917, 0.6644, 0.7283, 0.5505, 0.6357, 0.8631, 0.6748, 0.6427, 0.8663,
        0.5363, 0.7146, 0.9059, 0.7713, 0.7333, 0.5842, 0.6806, 0.5488, 0.7010,
        0.5011, 0.6202, 0.6178, 0.6992, 0.6492, 0.7831, 0.5405, 0.6862, 0.8591,
        0.7814, 0.7396, 0.7029, 0.8753, 0.6312, 0.7379, 0.7614, 0.6641, 0.8314,
        0.6273, 0.8404, 0.8758, 0.7145, 0.6100, 0.6431, 0.7094, 0.5880, 0.8632,
        0.6111, 0.5235, 0.8428, 0.7413, 0.6659, 0.4654, 0.6114, 0.7369, 0.5476,
        0.7399, 0.7260, 0.6669, 0.7695, 0.7998, 0.8373, 0.6754, 0.6750, 0.5180,
        0.6086, 0.6586, 0.8684, 0.5905, 0.6201, 0.6182, 0.6551, 0.6884, 0.6453,
        0.7323, 0.6894, 0.8274, 0.6590, 0.5715, 0.8195, 0.7143, 0.8053, 0.7024,
        0.5684, 0.5713, 0.6483, 0.7227, 0.5728, 0.6496, 0.5687, 0.7044, 0.6836,
        0.6325, 0.7550, 0.6875, 0.5236, 0.8990, 0.7726, 0.6579, 0.5722, 0.6048,
        0.6698, 0.6168, 0.6995, 0.5440, 0.6389, 0.8368, 0.7012, 0.7297, 0.7035,
        0.7600, 0.7525, 0.5559, 0.8609, 0.8521, 0.6636, 0.7582, 0.7266, 0.8407,
        0.6699, 0.6533, 0.7033, 0.7176, 0.5348, 0.8608, 0.6663, 0.7079, 0.7459,
        0.6557, 0.7991, 0.8083, 0.6475, 0.8039, 0.6127, 0.8456, 0.6494, 0.5771,
        0.6702, 0.6486, 0.6179, 0.5536, 0.6817, 0.5287, 0.6883, 0.5940, 0.5466,
        0.4718, 0.7019, 0.4543, 0.6414, 0.5377, 0.5423, 0.7080, 0.7322, 0.5424,
        0.7302, 0.7953, 0.6705, 0.6920, 0.5649, 0.7412, 0.7644, 0.6902, 0.6150,
        0.7956, 0.8811, 0.7823, 0.7611, 0.8375, 0.7523, 0.6583, 0.8657, 0.8412,
        0.8771, 0.7398, 0.6910, 0.6150, 0.6876, 0.6230, 0.7955, 0.6465, 0.6321,
        0.7520, 0.6825, 0.7410, 0.7270, 0.7452, 0.6714, 0.7230, 0.7834, 0.7441,
        0.8373, 0.7837, 0.7728, 0.5652, 0.5606, 0.6117, 0.8852, 0.7605, 0.8585,
        0.6096, 0.3427, 0.7660, 0.5015, 0.3595, 0.7838, 0.7503, 0.6997, 0.8165,
        0.7069, 0.6477, 0.7119, 0.7313, 0.6531, 0.6277, 0.6558, 0.8177, 0.8706,
        0.6251, 0.7273, 0.6224, 0.6579, 0.9206, 0.7942, 0.5788, 0.5189, 0.5775,
        0.5745, 0.7475, 0.5527, 0.5153, 0.5955, 0.6126, 0.7085, 0.7482, 0.7818,
        0.7171, 0.8574, 0.8882, 0.6606, 0.5682, 0.6522, 0.7383, 0.7422, 0.6284,
        0.7470, 0.6673, 0.4497, 0.8463, 0.6964, 0.6135, 0.7229, 0.6002, 0.5733,
        0.5868, 0.5471, 0.6179, 0.5062, 0.6610, 0.7444, 0.7164, 0.7199, 0.7371,
        0.6398, 0.7391, 0.6066, 0.6063, 0.6776, 0.7007, 0.6688, 0.6139, 0.6214,
        0.6496, 0.7872, 0.5405, 0.8234, 0.6288, 0.7160, 0.7696, 0.7974, 0.6598,
        0.7776, 0.7626, 0.6680, 0.6977, 0.7270, 0.6876, 0.7121, 0.5859, 0.7162,
        0.6778, 0.4203, 0.6332, 0.8251, 0.7366, 0.6024, 0.6515, 0.4217, 0.6000,
        0.6018, 0.7305, 0.8379, 0.5888], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(501.4580, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([733, 1])
Inertia: tensor([156.8887], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([733, 1280])
Centroid_list: tensor([[-0.0384, -0.0663, -0.0501,  ..., -0.0612,  0.0848, -0.2870],
        [-0.0384, -0.0663, -0.0501,  ..., -0.0612,  0.0848, -0.2870],
        [ 0.0083, -0.0551, -0.0328,  ..., -0.0708,  0.0750, -0.1005],
        ...,
        [ 0.0083, -0.0551, -0.0328,  ..., -0.0708,  0.0750, -0.1005],
        [-0.0384, -0.0663, -0.0501,  ..., -0.0612,  0.0848, -0.2870],
        [ 0.0083, -0.0551, -0.0328,  ..., -0.0708,  0.0750, -0.1005]],
       device='cuda:0')
Computed C_score: tensor([0.7758, 0.7079, 0.7212, 0.8056, 0.8039, 0.6422, 0.6415, 0.6523, 0.7217,
        0.6871, 0.6841, 0.8261, 0.8454, 0.6235, 0.8316, 0.7118, 0.6692, 0.6034,
        0.8709, 0.6561, 0.8452, 0.8718, 0.6828, 0.6528, 0.6522, 0.8172, 0.8775,
        0.6952, 0.8751, 0.5140, 0.8268, 0.6886, 0.7050, 0.6580, 0.8205, 0.6191,
        0.5831, 0.6744, 0.5257, 0.7555, 0.6431, 0.5316, 0.8991, 0.3740, 0.8239,
        0.6508, 0.7570, 0.7866, 0.8396, 0.6351, 0.7244, 0.8735, 0.6598, 0.6946,
        0.7947, 0.8070, 0.5907, 0.8026, 0.8774, 0.8835, 0.8828, 0.8458, 0.5456,
        0.7023, 0.8280, 0.8261, 0.6059, 0.6629, 0.5608, 0.6230, 0.6953, 0.6839,
        0.7267, 0.6200, 0.8604, 0.6602, 0.5991, 0.5930, 0.7050, 0.7198, 0.7907,
        0.6325, 0.6654, 0.6811, 0.4491, 0.6149, 0.7183, 0.6397, 0.8279, 0.8941,
        0.7820, 0.6772, 0.5934, 0.8671, 0.7901, 0.5914, 0.6856, 0.6520, 0.8392,
        0.7373, 0.8064, 0.9135, 0.6532, 0.5743, 0.7804, 0.8008, 0.7707, 0.7234,
        0.8231, 0.6749, 0.6390, 0.8457, 0.7363, 0.7216, 0.5504, 0.6408, 0.5238,
        0.5453, 0.7869, 0.5882, 0.7863, 0.4723, 0.7268, 0.6003, 0.7256, 0.6091,
        0.8270, 0.6737, 0.6928, 0.8009, 0.8356, 0.6561, 0.8423, 0.6347, 0.6594,
        0.6617, 0.6529, 0.7934, 0.7062, 0.7180, 0.8475, 0.5924, 0.5837, 0.6414,
        0.7229, 0.8343, 0.6272, 0.7994, 0.6197, 0.6825, 0.5830, 0.8169, 0.6291,
        0.7989, 0.9089, 0.6035, 0.6824, 0.7173, 0.6775, 0.8165, 0.7054, 0.6285,
        0.8006, 0.8816, 0.6083, 0.8171, 0.6479, 0.5389, 0.7431, 0.7944, 0.7327,
        0.7370, 0.7555, 0.7878, 0.5614, 0.7166, 0.5248, 0.7157, 0.7559, 0.7671,
        0.8877, 0.7454, 0.8220, 0.6552, 0.7797, 0.7025, 0.7447, 0.6488, 0.8468,
        0.8831, 0.6986, 0.8086, 0.6382, 0.6969, 0.6297, 0.7025, 0.7496, 0.7869,
        0.6915, 0.6392, 0.7898, 0.7480, 0.5773, 0.5858, 0.7130, 0.6362, 0.5065,
        0.7184, 0.6654, 0.7232, 0.6188, 0.7145, 0.6608, 0.8418, 0.6920, 0.4925,
        0.5613, 0.7331, 0.7760, 0.7586, 0.6587, 0.6874, 0.7885, 0.8528, 0.5426,
        0.7829, 0.6201, 0.8217, 0.8844, 0.5556, 0.6965, 0.6310, 0.7652, 0.8240,
        0.6150, 0.8372, 0.7351, 0.6122, 0.8268, 0.5353, 0.6812, 0.6160, 0.7053,
        0.8613, 0.5355, 0.8437, 0.7914, 0.8222, 0.5767, 0.5019, 0.7324, 0.8697,
        0.6499, 0.7255, 0.7051, 0.7455, 0.7043, 0.6424, 0.5910, 0.8205, 0.5715,
        0.6733, 0.7904, 0.6742, 0.8335, 0.8664, 0.6475, 0.5699, 0.7499, 0.8733,
        0.5617, 0.7927, 0.6627, 0.8722, 0.6847, 0.8102, 0.6042, 0.6493, 0.8632,
        0.7087, 0.8286, 0.6014, 0.7464, 0.7803, 0.5171, 0.8116, 0.7372, 0.6254,
        0.6287, 0.6572, 0.7085, 0.6863, 0.6167, 0.7579, 0.8294, 0.6972, 0.5383,
        0.7307, 0.6932, 0.8264, 0.6495, 0.6685, 0.6032, 0.6643, 0.6498, 0.6639,
        0.8485, 0.6066, 0.8773, 0.8543, 0.7534, 0.5666, 0.6095, 0.7448, 0.6708,
        0.6874, 0.7481, 0.6995, 0.8178, 0.6879, 0.8595, 0.6653, 0.6447, 0.6865,
        0.6183, 0.8572, 0.5360, 0.6275, 0.5934, 0.6465, 0.8400, 0.7005, 0.7536,
        0.5287, 0.6416, 0.7408, 0.8843, 0.5486, 0.7031, 0.6536, 0.8046, 0.7628,
        0.6148, 0.8353, 0.6913, 0.7322, 0.7561, 0.8385, 0.6749, 0.6181, 0.6196,
        0.7405, 0.7288, 0.6091, 0.7233, 0.7211, 0.8417, 0.8238, 0.8793, 0.5771,
        0.7954, 0.9062, 0.6909, 0.8304, 0.7101, 0.8260, 0.6606, 0.6348, 0.6059,
        0.8394, 0.8028, 0.6953, 0.7255, 0.8307, 0.7139, 0.6745, 0.7263, 0.6695,
        0.6944, 0.8803, 0.6861, 0.7070, 0.6232, 0.7271, 0.7514, 0.6661, 0.6853,
        0.5770, 0.6621, 0.7441, 0.8599, 0.4775, 0.7287, 0.7773, 0.8509, 0.8806,
        0.7988, 0.6397, 0.5924, 0.8572, 0.5868, 0.6565, 0.6882, 0.6056, 0.8494,
        0.6726, 0.6458, 0.6525, 0.8317, 0.7401, 0.7872, 0.8518, 0.7089, 0.6905,
        0.8030, 0.6103, 0.7164, 0.7787, 0.8569, 0.6821, 0.8572, 0.7483, 0.8057,
        0.6379, 0.8035, 0.5053, 0.8133, 0.8121, 0.7658, 0.6447, 0.5101, 0.6239,
        0.7070, 0.7182, 0.7165, 0.6272, 0.6142, 0.8694, 0.7132, 0.7749, 0.8766,
        0.5847, 0.8485, 0.9182, 0.7734, 0.7400, 0.6510, 0.7803, 0.5760, 0.7452,
        0.4570, 0.7136, 0.6094, 0.6855, 0.6249, 0.7783, 0.6164, 0.8323, 0.8614,
        0.8364, 0.8696, 0.7078, 0.8856, 0.7105, 0.7438, 0.7586, 0.7579, 0.8517,
        0.6030, 0.8532, 0.8774, 0.6684, 0.6431, 0.6717, 0.7183, 0.6916, 0.8504,
        0.6013, 0.5927, 0.8519, 0.7725, 0.6473, 0.5220, 0.6927, 0.7305, 0.5955,
        0.7288, 0.7333, 0.6463, 0.7938, 0.8018, 0.8452, 0.7116, 0.6878, 0.4905,
        0.6698, 0.7006, 0.8549, 0.6065, 0.5977, 0.6416, 0.6469, 0.6817, 0.6550,
        0.7181, 0.6479, 0.8401, 0.6418, 0.5459, 0.8572, 0.8619, 0.8186, 0.7176,
        0.6565, 0.6230, 0.6366, 0.7275, 0.5681, 0.6676, 0.6346, 0.7589, 0.6865,
        0.6981, 0.8595, 0.7037, 0.5529, 0.9084, 0.8790, 0.7021, 0.6277, 0.6602,
        0.6443, 0.6690, 0.6931, 0.6386, 0.7614, 0.8588, 0.7184, 0.8237, 0.7665,
        0.7562, 0.7754, 0.5778, 0.8685, 0.8518, 0.6594, 0.7479, 0.8866, 0.8254,
        0.7202, 0.6873, 0.7234, 0.7226, 0.6148, 0.8716, 0.6879, 0.6925, 0.7109,
        0.6810, 0.8829, 0.8168, 0.6134, 0.9050, 0.6022, 0.8591, 0.6545, 0.6242,
        0.6760, 0.6829, 0.6312, 0.6392, 0.6683, 0.5837, 0.6879, 0.5819, 0.5953,
        0.5478, 0.6935, 0.5664, 0.6565, 0.5913, 0.6338, 0.7093, 0.7238, 0.5762,
        0.8340, 0.8486, 0.8257, 0.7146, 0.6507, 0.7187, 0.7472, 0.6562, 0.6133,
        0.7709, 0.8898, 0.7846, 0.8582, 0.8548, 0.8740, 0.6622, 0.8860, 0.8525,
        0.8830, 0.8166, 0.6872, 0.6715, 0.7244, 0.7027, 0.7788, 0.6658, 0.6731,
        0.7426, 0.6990, 0.8604, 0.8660, 0.7455, 0.6997, 0.8195, 0.7992, 0.7340,
        0.8379, 0.7820, 0.7731, 0.5599, 0.5997, 0.6771, 0.8848, 0.8358, 0.8630,
        0.6970, 0.4695, 0.7577, 0.5334, 0.4043, 0.8409, 0.7180, 0.8435, 0.8096,
        0.7460, 0.6302, 0.7676, 0.8841, 0.7177, 0.6262, 0.6862, 0.7979, 0.8676,
        0.6753, 0.6991, 0.7839, 0.6637, 0.9258, 0.8024, 0.5720, 0.5507, 0.5780,
        0.5795, 0.7362, 0.6038, 0.5897, 0.5698, 0.7031, 0.7110, 0.7457, 0.8934,
        0.7296, 0.8720, 0.8874, 0.7218, 0.5623, 0.6768, 0.7265, 0.7326, 0.6565,
        0.7381, 0.8275, 0.4927, 0.8334, 0.7740, 0.6435, 0.7109, 0.6684, 0.5366,
        0.6263, 0.5242, 0.5910, 0.5254, 0.8130, 0.7489, 0.8774, 0.7503, 0.8586,
        0.7070, 0.8942, 0.6207, 0.6346, 0.7287, 0.8150, 0.6934, 0.6263, 0.6897,
        0.6987, 0.7883, 0.5815, 0.8291, 0.6269, 0.6762, 0.7331, 0.8033, 0.6295,
        0.8906, 0.8471, 0.7049, 0.6974, 0.8131, 0.6769, 0.6832, 0.5869, 0.7603,
        0.7111, 0.4890, 0.6365, 0.8125, 0.7293, 0.5818, 0.6832, 0.4663, 0.7666,
        0.6045, 0.7081, 0.8460, 0.6514], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(523.4949, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([733, 1])
Inertia: tensor([177.7285], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([733, 1280])
Centroid_list: tensor([[-0.0189, -0.0550, -0.0445,  ..., -0.0896,  0.0815, -0.0688],
        [-0.0425, -0.0663, -0.0500,  ..., -0.0548,  0.0853, -0.2859],
        [ 0.0153, -0.0561, -0.0297,  ..., -0.0652,  0.0732, -0.1493],
        ...,
        [ 0.0153, -0.0561, -0.0297,  ..., -0.0652,  0.0732, -0.1493],
        [-0.0425, -0.0663, -0.0500,  ..., -0.0548,  0.0853, -0.2859],
        [ 0.0153, -0.0561, -0.0297,  ..., -0.0652,  0.0732, -0.1493]],
       device='cuda:0')
Computed C_score: tensor([0.7170, 0.7103, 0.7366, 0.8094, 0.7822, 0.6675, 0.6634, 0.6479, 0.7284,
        0.7112, 0.7069, 0.8429, 0.8493, 0.6537, 0.8360, 0.7096, 0.6885, 0.5832,
        0.8746, 0.6412, 0.8383, 0.8802, 0.6815, 0.6627, 0.6376, 0.7998, 0.8840,
        0.7092, 0.8712, 0.5290, 0.8297, 0.7122, 0.6966, 0.6663, 0.8330, 0.6415,
        0.7462, 0.7676, 0.5519, 0.7504, 0.6773, 0.5363, 0.9140, 0.3928, 0.8238,
        0.6742, 0.7585, 0.7824, 0.8430, 0.6614, 0.7184, 0.8835, 0.6874, 0.6977,
        0.7986, 0.8064, 0.7169, 0.8145, 0.8833, 0.8926, 0.8890, 0.8295, 0.5824,
        0.7006, 0.8321, 0.8345, 0.6293, 0.6536, 0.6285, 0.6044, 0.7103, 0.7244,
        0.7424, 0.6247, 0.8562, 0.6519, 0.5858, 0.5901, 0.7049, 0.7036, 0.7843,
        0.6493, 0.6727, 0.6716, 0.4382, 0.7266, 0.7047, 0.6618, 0.8271, 0.9020,
        0.7668, 0.6928, 0.6458, 0.8847, 0.7973, 0.6882, 0.6829, 0.6862, 0.8480,
        0.7363, 0.8046, 0.9146, 0.7077, 0.6362, 0.7779, 0.8071, 0.8132, 0.7144,
        0.8394, 0.7472, 0.6400, 0.8492, 0.7386, 0.7068, 0.5724, 0.6322, 0.5504,
        0.5184, 0.7902, 0.6090, 0.7918, 0.4527, 0.7286, 0.6227, 0.7517, 0.6002,
        0.8335, 0.6701, 0.6912, 0.7797, 0.8340, 0.6803, 0.8439, 0.7413, 0.6959,
        0.7274, 0.6667, 0.7961, 0.7333, 0.7159, 0.8649, 0.6098, 0.5995, 0.6464,
        0.7153, 0.8299, 0.6218, 0.8038, 0.6435, 0.6725, 0.5859, 0.8204, 0.6117,
        0.8022, 0.9168, 0.5942, 0.6965, 0.7083, 0.6786, 0.8221, 0.7222, 0.6586,
        0.7982, 0.8789, 0.6268, 0.7958, 0.6456, 0.5425, 0.7372, 0.8100, 0.7328,
        0.7581, 0.7591, 0.7851, 0.5549, 0.7026, 0.5251, 0.7103, 0.7382, 0.7584,
        0.8899, 0.7533, 0.8121, 0.6608, 0.7853, 0.6839, 0.7095, 0.6794, 0.8668,
        0.8952, 0.6861, 0.7945, 0.6416, 0.6772, 0.6157, 0.7118, 0.7594, 0.7808,
        0.6768, 0.6497, 0.7830, 0.7902, 0.5915, 0.5956, 0.7205, 0.6517, 0.5321,
        0.7289, 0.6615, 0.7228, 0.6104, 0.7379, 0.6881, 0.8460, 0.7095, 0.4818,
        0.5447, 0.7296, 0.7464, 0.7666, 0.6490, 0.7040, 0.7897, 0.8602, 0.5613,
        0.7871, 0.6377, 0.8097, 0.9007, 0.5477, 0.6938, 0.6572, 0.7480, 0.8226,
        0.6214, 0.8315, 0.7270, 0.5905, 0.8225, 0.6206, 0.6844, 0.6143, 0.7090,
        0.8496, 0.5371, 0.8593, 0.7928, 0.8029, 0.5958, 0.5110, 0.7611, 0.8749,
        0.6547, 0.7418, 0.7129, 0.7384, 0.7155, 0.8385, 0.5798, 0.8224, 0.6949,
        0.6743, 0.7937, 0.7009, 0.8427, 0.8834, 0.6399, 0.5541, 0.7583, 0.8886,
        0.5714, 0.7877, 0.6747, 0.8929, 0.6853, 0.7965, 0.7439, 0.5877, 0.8730,
        0.6998, 0.8290, 0.6745, 0.7373, 0.7667, 0.5180, 0.7957, 0.7999, 0.6163,
        0.6894, 0.6338, 0.7013, 0.7053, 0.6228, 0.7712, 0.8345, 0.6871, 0.5749,
        0.7149, 0.6805, 0.8325, 0.6353, 0.6857, 0.5905, 0.7450, 0.6558, 0.6685,
        0.8547, 0.5792, 0.8876, 0.8593, 0.7427, 0.5914, 0.6486, 0.7402, 0.6758,
        0.6878, 0.7494, 0.6911, 0.8099, 0.6831, 0.8757, 0.6523, 0.6341, 0.6873,
        0.6323, 0.8655, 0.7524, 0.6388, 0.6017, 0.6791, 0.8426, 0.7041, 0.7383,
        0.5215, 0.6473, 0.7359, 0.9001, 0.5635, 0.6989, 0.6439, 0.8238, 0.7686,
        0.6091, 0.8153, 0.7258, 0.7170, 0.7584, 0.8517, 0.7739, 0.6423, 0.8092,
        0.8139, 0.7389, 0.6263, 0.7486, 0.7638, 0.8423, 0.8414, 0.8830, 0.5971,
        0.8004, 0.8987, 0.6856, 0.8329, 0.7074, 0.8468, 0.6577, 0.6185, 0.7587,
        0.8210, 0.7995, 0.7000, 0.7281, 0.8278, 0.6904, 0.7083, 0.7537, 0.6894,
        0.7261, 0.8942, 0.6948, 0.6959, 0.6347, 0.7166, 0.7561, 0.7805, 0.6816,
        0.7259, 0.7972, 0.7206, 0.8778, 0.4733, 0.7443, 0.7787, 0.8666, 0.8862,
        0.8091, 0.6244, 0.5965, 0.8541, 0.5972, 0.6541, 0.6915, 0.7806, 0.8469,
        0.6860, 0.6990, 0.6618, 0.8344, 0.7360, 0.7954, 0.8608, 0.7568, 0.6987,
        0.7830, 0.6091, 0.7312, 0.7537, 0.8454, 0.6809, 0.8533, 0.7688, 0.8039,
        0.6488, 0.7963, 0.5031, 0.8037, 0.8270, 0.7605, 0.6364, 0.4892, 0.6517,
        0.7065, 0.7310, 0.7134, 0.6143, 0.8187, 0.8635, 0.6944, 0.7883, 0.8629,
        0.5622, 0.8591, 0.9177, 0.7589, 0.7246, 0.6411, 0.7788, 0.5703, 0.7310,
        0.5446, 0.7139, 0.6377, 0.7079, 0.7896, 0.7099, 0.6100, 0.8248, 0.8763,
        0.8407, 0.8800, 0.7015, 0.9033, 0.6964, 0.7900, 0.7472, 0.7683, 0.8570,
        0.6081, 0.8693, 0.8647, 0.6834, 0.6581, 0.6800, 0.7721, 0.6921, 0.8579,
        0.6062, 0.5853, 0.8514, 0.7782, 0.7041, 0.5131, 0.6641, 0.7647, 0.6674,
        0.7453, 0.7368, 0.6643, 0.7993, 0.7798, 0.8378, 0.7092, 0.6888, 0.6729,
        0.6930, 0.6809, 0.8463, 0.6142, 0.5946, 0.6664, 0.6727, 0.6754, 0.6506,
        0.7058, 0.6454, 0.8260, 0.6437, 0.5554, 0.8609, 0.8652, 0.8185, 0.7448,
        0.6484, 0.6299, 0.6636, 0.7326, 0.5619, 0.6913, 0.6354, 0.7602, 0.8175,
        0.6761, 0.8634, 0.7057, 0.5442, 0.9206, 0.8883, 0.6773, 0.6366, 0.6404,
        0.6741, 0.6654, 0.8060, 0.6197, 0.7603, 0.8662, 0.7077, 0.8168, 0.7641,
        0.7579, 0.7737, 0.5660, 0.8876, 0.8514, 0.6618, 0.7502, 0.8932, 0.8188,
        0.7191, 0.6819, 0.7231, 0.7358, 0.6091, 0.8918, 0.6855, 0.6910, 0.8091,
        0.7066, 0.8833, 0.7908, 0.6426, 0.9106, 0.5853, 0.8741, 0.6747, 0.6462,
        0.6809, 0.6918, 0.6264, 0.6374, 0.6768, 0.5543, 0.7149, 0.5815, 0.6155,
        0.5289, 0.6945, 0.5628, 0.6771, 0.5636, 0.6272, 0.7034, 0.6953, 0.5926,
        0.8285, 0.8456, 0.8278, 0.7161, 0.6539, 0.7204, 0.7532, 0.6646, 0.7688,
        0.7769, 0.8849, 0.7724, 0.8624, 0.8370, 0.8789, 0.6974, 0.8849, 0.8432,
        0.8983, 0.8077, 0.6963, 0.6759, 0.7482, 0.6878, 0.7737, 0.6708, 0.6398,
        0.7492, 0.7091, 0.8651, 0.8751, 0.7447, 0.7133, 0.8149, 0.7798, 0.7318,
        0.8526, 0.7405, 0.7707, 0.7838, 0.6008, 0.6757, 0.8908, 0.8305, 0.8802,
        0.6863, 0.4759, 0.7714, 0.5488, 0.3919, 0.8488, 0.7597, 0.8450, 0.8221,
        0.7800, 0.6370, 0.7641, 0.8905, 0.7163, 0.6951, 0.6773, 0.8005, 0.8526,
        0.6732, 0.7218, 0.7795, 0.6485, 0.9307, 0.8014, 0.6030, 0.6753, 0.6023,
        0.5729, 0.7485, 0.6475, 0.5934, 0.5874, 0.6812, 0.7353, 0.7464, 0.8992,
        0.7371, 0.8868, 0.8990, 0.7018, 0.5705, 0.6998, 0.7276, 0.7261, 0.6570,
        0.7360, 0.8363, 0.6040, 0.8347, 0.7804, 0.6589, 0.7642, 0.6823, 0.5397,
        0.6024, 0.5335, 0.7832, 0.5207, 0.8129, 0.8038, 0.8820, 0.7703, 0.8622,
        0.7019, 0.8982, 0.7926, 0.6774, 0.7346, 0.8258, 0.7555, 0.6936, 0.6936,
        0.7815, 0.7871, 0.5621, 0.8129, 0.6301, 0.6711, 0.7451, 0.7853, 0.6467,
        0.8915, 0.8553, 0.7074, 0.7197, 0.8118, 0.7128, 0.7074, 0.6214, 0.7541,
        0.7098, 0.4801, 0.6688, 0.8190, 0.7137, 0.5920, 0.7004, 0.4851, 0.7689,
        0.6208, 0.7287, 0.8201, 0.6679], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(531.4658, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([733, 1])
Inertia: tensor([103.6263], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([733, 1280])
Centroid_list: tensor([[-0.0250, -0.0573, -0.0437,  ..., -0.0767,  0.0837, -0.2406],
        [-0.0558, -0.0811, -0.0670,  ..., -0.0382,  0.0862, -0.4009],
        [-0.0103, -0.0650, -0.0417,  ..., -0.0730,  0.0755, -0.0088],
        ...,
        [ 0.0274, -0.0468, -0.0214,  ..., -0.0648,  0.0736, -0.2079],
        [-0.0250, -0.0573, -0.0437,  ..., -0.0767,  0.0837, -0.2406],
        [-0.0103, -0.0650, -0.0417,  ..., -0.0730,  0.0755, -0.0088]],
       device='cuda:0')
Computed C_score: tensor([0.8466, 0.7253, 0.7483, 0.8075, 0.8434, 0.6158, 0.6218, 0.7212, 0.7222,
        0.7115, 0.7163, 0.9297, 0.8446, 0.6643, 0.8331, 0.7093, 0.6800, 0.6709,
        0.8746, 0.7178, 0.8534, 0.8761, 0.7214, 0.6816, 0.7332, 0.8405, 0.8845,
        0.7323, 0.8729, 0.5101, 0.8312, 0.7140, 0.6945, 0.7231, 0.8303, 0.6463,
        0.6198, 0.6361, 0.5178, 0.7480, 0.7145, 0.6002, 0.9170, 0.3674, 0.8189,
        0.7101, 0.7742, 0.7790, 0.8433, 0.6201, 0.7197, 0.8832, 0.6386, 0.6996,
        0.8010, 0.8083, 0.5819, 0.8117, 0.8848, 0.8913, 0.8905, 0.8666, 0.5447,
        0.7323, 0.8029, 0.9032, 0.6148, 0.6622, 0.5644, 0.6424, 0.7164, 0.7411,
        0.7606, 0.6208, 0.8296, 0.7074, 0.5877, 0.6654, 0.7097, 0.7641, 0.7871,
        0.7115, 0.6534, 0.7186, 0.4981, 0.5877, 0.7264, 0.6925, 0.8294, 0.8488,
        0.8286, 0.7452, 0.6917, 0.9532, 0.8014, 0.6024, 0.7240, 0.7154, 0.8498,
        0.7410, 0.8136, 0.8854, 0.7093, 0.5567, 0.7814, 0.8074, 0.8761, 0.7772,
        0.9293, 0.7357, 0.6216, 0.8475, 0.7387, 0.7539, 0.5333, 0.7092, 0.5848,
        0.6016, 0.7875, 0.5876, 0.8048, 0.4950, 0.7731, 0.6111, 0.7058, 0.6106,
        0.8351, 0.7137, 0.6894, 0.8622, 0.8352, 0.6873, 0.8441, 0.6488, 0.7355,
        0.6867, 0.7094, 0.7994, 0.7488, 0.7072, 0.9087, 0.6728, 0.5743, 0.6947,
        0.7519, 0.8312, 0.6727, 0.8025, 0.6722, 0.6765, 0.5876, 0.8188, 0.6154,
        0.7841, 0.8929, 0.6023, 0.7107, 0.7397, 0.6717, 0.8796, 0.7206, 0.7299,
        0.8008, 0.8778, 0.6282, 0.8288, 0.6411, 0.5393, 0.7552, 0.8930, 0.7421,
        0.7407, 0.7630, 0.8122, 0.5498, 0.7604, 0.5675, 0.7138, 0.7922, 0.7603,
        0.8886, 0.7929, 0.8235, 0.6532, 0.7845, 0.7303, 0.7556, 0.6985, 0.9611,
        0.8927, 0.7496, 0.8458, 0.6691, 0.7346, 0.6126, 0.7861, 0.7715, 0.8302,
        0.7778, 0.6307, 0.7894, 0.8130, 0.6056, 0.5391, 0.7731, 0.7232, 0.5223,
        0.7418, 0.6543, 0.7230, 0.6466, 0.6909, 0.7327, 0.8429, 0.6917, 0.5002,
        0.6359, 0.7300, 0.7977, 0.7664, 0.6839, 0.7544, 0.7980, 0.8609, 0.5171,
        0.7846, 0.6748, 0.8142, 0.9503, 0.6136, 0.7440, 0.6592, 0.7402, 0.8237,
        0.6632, 0.8337, 0.7559, 0.6646, 0.8261, 0.5641, 0.6784, 0.6081, 0.7678,
        0.8435, 0.6035, 0.9434, 0.8284, 0.8437, 0.6095, 0.4909, 0.7586, 0.8748,
        0.7054, 0.7646, 0.7027, 0.7411, 0.7497, 0.6800, 0.6096, 0.8092, 0.5780,
        0.6901, 0.7963, 0.7107, 0.8384, 0.9533, 0.7046, 0.6059, 0.7528, 0.9609,
        0.5396, 0.7913, 0.6599, 0.9270, 0.6780, 0.8255, 0.5919, 0.6781, 0.9370,
        0.7438, 0.8270, 0.6220, 0.7417, 0.8074, 0.5262, 0.8676, 0.8455, 0.6104,
        0.6770, 0.6885, 0.7054, 0.6836, 0.6666, 0.8029, 0.8361, 0.7106, 0.5252,
        0.7757, 0.7614, 0.8161, 0.6777, 0.6979, 0.6718, 0.7072, 0.6997, 0.6462,
        0.8562, 0.7000, 0.9259, 0.8560, 0.7479, 0.6310, 0.5966, 0.7363, 0.6760,
        0.6895, 0.7462, 0.6856, 0.8132, 0.7629, 0.9483, 0.6461, 0.6324, 0.6905,
        0.6347, 0.9053, 0.7035, 0.6531, 0.6277, 0.6802, 0.8404, 0.7657, 0.7958,
        0.6033, 0.7290, 0.7384, 0.9329, 0.5398, 0.7045, 0.6748, 0.8453, 0.7682,
        0.5900, 0.8847, 0.7681, 0.6982, 0.7540, 0.8493, 0.7161, 0.6638, 0.7315,
        0.7929, 0.8130, 0.6275, 0.8105, 0.7992, 0.8455, 0.9281, 0.8827, 0.6317,
        0.8012, 0.8963, 0.7165, 0.8334, 0.7215, 0.9469, 0.6901, 0.6671, 0.7059,
        0.8893, 0.8072, 0.7230, 0.7307, 0.8310, 0.7970, 0.7506, 0.7757, 0.7105,
        0.7237, 0.9452, 0.6816, 0.7294, 0.6256, 0.7854, 0.8194, 0.7656, 0.7141,
        0.5800, 0.6642, 0.7607, 0.9525, 0.4991, 0.7548, 0.7800, 0.9494, 0.8846,
        0.8084, 0.6477, 0.6266, 0.8573, 0.6489, 0.6681, 0.7052, 0.6500, 0.8215,
        0.7101, 0.6382, 0.7262, 0.8360, 0.7396, 0.7943, 0.8561, 0.7391, 0.6999,
        0.8094, 0.6129, 0.7276, 0.8240, 0.8811, 0.7242, 0.8523, 0.7504, 0.8061,
        0.6599, 0.7973, 0.5396, 0.8044, 0.9047, 0.7584, 0.6481, 0.5533, 0.6569,
        0.7279, 0.7809, 0.7186, 0.6244, 0.7238, 0.8765, 0.7043, 0.7830, 0.9101,
        0.5781, 0.8571, 0.9030, 0.8187, 0.7733, 0.6841, 0.7789, 0.5526, 0.8259,
        0.4598, 0.7178, 0.6675, 0.7719, 0.7286, 0.8277, 0.6744, 0.8311, 0.9311,
        0.8368, 0.8768, 0.7756, 0.9779, 0.7750, 0.8220, 0.8122, 0.7621, 0.8215,
        0.5920, 0.9471, 0.9063, 0.6757, 0.6838, 0.7074, 0.8011, 0.6885, 0.8868,
        0.6039, 0.6955, 0.8155, 0.7739, 0.6376, 0.5175, 0.7655, 0.8134, 0.5680,
        0.7243, 0.7999, 0.6727, 0.7502, 0.8895, 0.8591, 0.7091, 0.6881, 0.4988,
        0.6512, 0.7084, 0.8497, 0.6587, 0.6369, 0.7020, 0.6576, 0.6845, 0.6592,
        0.7450, 0.6439, 0.8808, 0.7197, 0.5998, 0.8589, 0.8649, 0.8261, 0.7163,
        0.7392, 0.6264, 0.6411, 0.7628, 0.5472, 0.7195, 0.6782, 0.7625, 0.7620,
        0.7572, 0.8631, 0.6836, 0.5921, 0.9055, 0.8859, 0.7283, 0.6472, 0.6968,
        0.6900, 0.6993, 0.7448, 0.7071, 0.7609, 0.8061, 0.7231, 0.8159, 0.8058,
        0.7224, 0.7725, 0.6100, 0.9428, 0.8146, 0.7078, 0.7472, 0.8913, 0.8324,
        0.7243, 0.7451, 0.7765, 0.8134, 0.7025, 0.9681, 0.6972, 0.7046, 0.7464,
        0.7165, 0.8839, 0.8750, 0.6171, 0.9088, 0.6146, 0.8364, 0.6434, 0.6265,
        0.6950, 0.7444, 0.6240, 0.7307, 0.6527, 0.6242, 0.7617, 0.5904, 0.5798,
        0.6044, 0.6891, 0.5647, 0.7489, 0.5702, 0.7089, 0.7353, 0.7766, 0.6030,
        0.8333, 0.8508, 0.8282, 0.7635, 0.6581, 0.7195, 0.7273, 0.7062, 0.6772,
        0.7385, 0.8421, 0.8178, 0.8617, 0.8496, 0.8760, 0.6532, 0.8805, 0.8663,
        0.9409, 0.8113, 0.7337, 0.7476, 0.7186, 0.7789, 0.7739, 0.7480, 0.6642,
        0.7337, 0.6904, 0.8620, 0.8737, 0.7655, 0.7518, 0.8177, 0.8522, 0.7480,
        0.9291, 0.8386, 0.7732, 0.6385, 0.6781, 0.7525, 0.8591, 0.8327, 0.9632,
        0.6945, 0.4776, 0.8022, 0.5176, 0.4283, 0.8484, 0.7286, 0.8445, 0.8706,
        0.8122, 0.6316, 0.7699, 0.8925, 0.7140, 0.6584, 0.6944, 0.7494, 0.9181,
        0.7119, 0.7592, 0.7802, 0.6510, 0.9308, 0.8016, 0.5828, 0.5735, 0.5602,
        0.5908, 0.7709, 0.6665, 0.6923, 0.6326, 0.7709, 0.7631, 0.7406, 0.9000,
        0.7197, 0.9039, 0.9458, 0.7522, 0.5556, 0.7172, 0.7232, 0.7281, 0.6310,
        0.7341, 0.8326, 0.5122, 0.8202, 0.7791, 0.6977, 0.7776, 0.6749, 0.5600,
        0.6087, 0.5375, 0.7445, 0.5183, 0.8108, 0.8310, 0.8811, 0.7739, 0.8617,
        0.7426, 0.8952, 0.6662, 0.6228, 0.7452, 0.8202, 0.7607, 0.6015, 0.6951,
        0.7029, 0.7907, 0.5817, 0.8527, 0.6318, 0.6581, 0.7796, 0.8577, 0.6940,
        0.8900, 0.8554, 0.7803, 0.7662, 0.8175, 0.6906, 0.7022, 0.5835, 0.8054,
        0.7772, 0.5249, 0.6542, 0.7685, 0.7308, 0.6408, 0.7080, 0.5007, 0.7698,
        0.6119, 0.7852, 0.9043, 0.6732], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(541.3123, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0013, 0.0038, 0.0076, 0.0114], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([623, 1280])
S-Scores: tensor([0.6867, 2.0791, 4.0977, 6.6509], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([623, 1])
Inertia: tensor([185.0768], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([623, 1280])
Centroid_list: tensor([[-0.0384, -0.0521, -0.0412,  ..., -0.0554,  0.0845, -0.2370],
        [ 0.0153, -0.0521, -0.0230,  ..., -0.0754,  0.0741, -0.2486],
        [ 0.0153, -0.0521, -0.0230,  ..., -0.0754,  0.0741, -0.2486],
        ...,
        [-0.0384, -0.0521, -0.0412,  ..., -0.0554,  0.0845, -0.2370],
        [ 0.0153, -0.0521, -0.0230,  ..., -0.0754,  0.0741, -0.2486],
        [ 0.0153, -0.0521, -0.0230,  ..., -0.0754,  0.0741, -0.2486]],
       device='cuda:0')
Computed C_score: tensor([0.8338, 0.5312, 0.7576, 0.7256, 0.8177, 0.7645, 0.5344, 0.6305, 0.7904,
        0.8272, 0.6346, 0.7321, 0.8388, 0.8518, 0.6093, 0.8312, 0.6811, 0.8277,
        0.8174, 0.7072, 0.5341, 0.6188, 0.6711, 0.7137, 0.8261, 0.5547, 0.8013,
        0.5399, 0.5737, 0.6325, 0.6275, 0.7514, 0.7553, 0.5929, 0.8532, 0.7154,
        0.6748, 0.5417, 0.7354, 0.8483, 0.6153, 0.6981, 0.8461, 0.8336, 0.6498,
        0.8904, 0.6897, 0.8312, 0.7884, 0.6826, 0.5990, 0.5368, 0.7291, 0.6810,
        0.7545, 0.7076, 0.8419, 0.6733, 0.7431, 0.4996, 0.6982, 0.7936, 0.7277,
        0.7686, 0.7919, 0.7108, 0.7057, 0.6971, 0.4724, 0.6819, 0.7663, 0.8547,
        0.6549, 0.8044, 0.6302, 0.5120, 0.7877, 0.6346, 0.7615, 0.4581, 0.6766,
        0.6603, 0.6575, 0.6636, 0.7367, 0.8168, 0.5036, 0.7026, 0.6922, 0.7104,
        0.5617, 0.6973, 0.6371, 0.7770, 0.6940, 0.7720, 0.8278, 0.6215, 0.7620,
        0.6552, 0.7367, 0.6853, 0.6575, 0.6587, 0.5624, 0.4575, 0.7522, 0.6000,
        0.8816, 0.6701, 0.6216, 0.7220, 0.7221, 0.6828, 0.5618, 0.7414, 0.7183,
        0.5505, 0.5594, 0.6471, 0.6979, 0.6081, 0.8464, 0.4284, 0.6126, 0.7910,
        0.7787, 0.7673, 0.8516, 0.7780, 0.8746, 0.6551, 0.5793, 0.8531, 0.8107,
        0.7264, 0.7778, 0.6410, 0.8115, 0.8067, 0.5858, 0.7884, 0.8170, 0.8658,
        0.8068, 0.8170, 0.7335, 0.8506, 0.6254, 0.8904, 0.8291, 0.7923, 0.7880,
        0.6590, 0.7274, 0.6820, 0.7683, 0.6429, 0.3811, 0.7448, 0.7548, 0.8369,
        0.7648, 0.6517, 0.7382, 0.5934, 0.5976, 0.8314, 0.7964, 0.7195, 0.6621,
        0.6695, 0.5094, 0.8085, 0.5778, 0.7782, 0.8333, 0.7208, 0.8301, 0.7283,
        0.7080, 0.7586, 0.7489, 0.5583, 0.6891, 0.6062, 0.8485, 0.7250, 0.7759,
        0.6276, 0.7491, 0.7867, 0.7526, 0.7944, 0.6262, 0.7331, 0.8128, 0.7602,
        0.8700, 0.8660, 0.7901, 0.5225, 0.7384, 0.5942, 0.7616, 0.6835, 0.8016,
        0.6744, 0.5318, 0.7531, 0.7929, 0.5706, 0.7911, 0.4611, 0.6684, 0.7661,
        0.8151, 0.7831, 0.6817, 0.7851, 0.7376, 0.7029, 0.8332, 0.8514, 0.7095,
        0.6455, 0.6563, 0.4289, 0.5358, 0.8575, 0.7585, 0.8415, 0.8173, 0.7567,
        0.8533, 0.7273, 0.5598, 0.7045, 0.6974, 0.7472, 0.7701, 0.8451, 0.3123,
        0.6818, 0.7034, 0.7727, 0.6000, 0.5721, 0.8272, 0.8132, 0.5723, 0.5285,
        0.5946, 0.8593, 0.7282, 0.7921, 0.7732, 0.8226, 0.8311, 0.6304, 0.7743,
        0.7943, 0.7082, 0.6602, 0.6896, 0.7612, 0.7948, 0.7791, 0.8283, 0.5339,
        0.8805, 0.6747, 0.6172, 0.6785, 0.7957, 0.5323, 0.7206, 0.6906, 0.7409,
        0.6206, 0.6801, 0.7110, 0.5671, 0.7639, 0.7733, 0.7516, 0.6988, 0.4363,
        0.6232, 0.6345, 0.6651, 0.6330, 0.7709, 0.8294, 0.6780, 0.7745, 0.3942,
        0.6959, 0.6842, 0.6242, 0.6583, 0.5899, 0.5848, 0.8574, 0.8481, 0.5161,
        0.8746, 0.6942, 0.6611, 0.7521, 0.7272, 0.6939, 0.6144, 0.8226, 0.7769,
        0.6711, 0.5674, 0.8084, 0.6963, 0.5615, 0.6427, 0.7194, 0.7078, 0.6698,
        0.5655, 0.7935, 0.7265, 0.8065, 0.7049, 0.6469, 0.6915, 0.6608, 0.7696,
        0.6587, 0.6049, 0.8480, 0.7711, 0.6200, 0.7303, 0.8339, 0.7642, 0.8886,
        0.7571, 0.8441, 0.7169, 0.7901, 0.6046, 0.8865, 0.5344, 0.6523, 0.8215,
        0.7993, 0.7104, 0.6730, 0.6646, 0.7257, 0.8715, 0.6245, 0.6537, 0.7439,
        0.6756, 0.8622, 0.7654, 0.4442, 0.7045, 0.5781, 0.6490, 0.7848, 0.7903,
        0.6788, 0.6104, 0.6805, 0.7947, 0.7689, 0.7578, 0.8057, 0.7908, 0.7100,
        0.7294, 0.7418, 0.6199, 0.7887, 0.5373, 0.7791, 0.7472, 0.7982, 0.7603,
        0.7148, 0.4637, 0.6145, 0.6224, 0.7789, 0.7448, 0.3293, 0.7113, 0.3748,
        0.5799, 0.7751, 0.8003, 0.5563, 0.7333, 0.6292, 0.6928, 0.8333, 0.5477,
        0.8015, 0.7919, 0.7679, 0.8869, 0.6348, 0.8116, 0.6596, 0.7057, 0.7578,
        0.5140, 0.7297, 0.8619, 0.8711, 0.8407, 0.6810, 0.6982, 0.7025, 0.6664,
        0.4751, 0.6419, 0.7023, 0.6519, 0.7745, 0.7834, 0.6693, 0.8991, 0.8139,
        0.6893, 0.6755, 0.8477, 0.7704, 0.7317, 0.6347, 0.8572, 0.7292, 0.8474,
        0.6924, 0.8156, 0.7585, 0.4775, 0.7109, 0.4604, 0.8058, 0.7502, 0.8502,
        0.8348, 0.8253, 0.7732, 0.8816, 0.7443, 0.7468, 0.6997, 0.7143, 0.7396,
        0.6366, 0.6076, 0.7921, 0.4996, 0.7313, 0.7673, 0.8011, 0.8889, 0.8360,
        0.6469, 0.8270, 0.7468, 0.5487, 0.7716, 0.7091, 0.8007, 0.6667, 0.4882,
        0.7793, 0.7842, 0.6785, 0.8238, 0.7511, 0.5283, 0.8026, 0.6156, 0.7197,
        0.8012, 0.5211, 0.6670, 0.8178, 0.8249, 0.8653, 0.8286, 0.8081, 0.7153,
        0.6659, 0.6961, 0.6529, 0.7838, 0.5382, 0.8153, 0.5503, 0.7016, 0.6087,
        0.8252, 0.7131, 0.8710, 0.6126, 0.5055, 0.7972, 0.6451, 0.6728, 0.7266,
        0.6108, 0.8374, 0.7603, 0.7384, 0.7011, 0.8184, 0.8211, 0.7342, 0.7598,
        0.6836, 0.6002, 0.8330, 0.6249, 0.7635, 0.8617, 0.8312, 0.8035, 0.8215,
        0.8341, 0.7312, 0.7065, 0.6091, 0.6975, 0.7347, 0.7678, 0.7388, 0.7767,
        0.7793, 0.6075, 0.7626, 0.8103, 0.6875, 0.6688, 0.8059, 0.7000, 0.7642,
        0.7282, 0.7263, 0.7663, 0.7799, 0.7700, 0.6541, 0.8307, 0.7281, 0.7752,
        0.7016, 0.5708, 0.7558, 0.6297, 0.7423, 0.5454, 0.8233, 0.7587, 0.6852,
        0.8198, 0.5577, 0.8424, 0.5578, 0.6917, 0.7832, 0.4298, 0.8200, 0.5694,
        0.6023, 0.7725, 0.5922, 0.6339, 0.7930, 0.8099, 0.8419, 0.7241, 0.8386,
        0.5886, 0.7177, 0.6652, 0.6242, 0.6762, 0.7186, 0.5752, 0.7845, 0.8751,
        0.6589, 0.6081, 0.8132, 0.6422, 0.7196, 0.6980, 0.5692, 0.6434, 0.5730,
        0.6779, 0.7452, 0.5793, 0.8500, 0.7326, 0.5904, 0.6412, 0.7424, 0.7841,
        0.8339, 0.8145, 0.7672, 0.6392, 0.8925, 0.7768, 0.7659, 0.8139, 0.8015,
        0.7825, 0.8225], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(444.0139, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([623, 1])
Inertia: tensor([177.5769], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([623, 1280])
Centroid_list: tensor([[-0.0334, -0.0458, -0.0343,  ..., -0.0503,  0.0882, -0.1746],
        [ 0.0295, -0.0379, -0.0142,  ..., -0.0743,  0.0767, -0.1658],
        [-0.0261, -0.0764, -0.0464,  ..., -0.0740,  0.0712, -0.4053],
        ...,
        [-0.0261, -0.0764, -0.0464,  ..., -0.0740,  0.0712, -0.4053],
        [ 0.0295, -0.0379, -0.0142,  ..., -0.0743,  0.0767, -0.1658],
        [-0.0261, -0.0764, -0.0464,  ..., -0.0740,  0.0712, -0.4053]],
       device='cuda:0')
Computed C_score: tensor([0.8348, 0.5787, 0.8791, 0.7512, 0.8217, 0.8228, 0.5739, 0.6696, 0.7761,
        0.8936, 0.6686, 0.7113, 0.8809, 0.8244, 0.6224, 0.8412, 0.6379, 0.8234,
        0.8178, 0.7115, 0.5001, 0.7174, 0.6856, 0.8428, 0.8014, 0.6771, 0.7690,
        0.5631, 0.5649, 0.6942, 0.6225, 0.7879, 0.7694, 0.5925, 0.8748, 0.6825,
        0.6378, 0.5635, 0.7644, 0.8247, 0.6591, 0.7156, 0.8128, 0.8645, 0.7974,
        0.9119, 0.6604, 0.8261, 0.7951, 0.6591, 0.6172, 0.5705, 0.7080, 0.7414,
        0.7938, 0.7835, 0.8643, 0.6553, 0.7000, 0.5293, 0.7577, 0.7710, 0.8110,
        0.7789, 0.7756, 0.8157, 0.7566, 0.7234, 0.4741, 0.6926, 0.8574, 0.8822,
        0.6520, 0.7590, 0.6475, 0.5574, 0.8088, 0.6870, 0.7855, 0.4878, 0.7049,
        0.6619, 0.6850, 0.7020, 0.7821, 0.8575, 0.5220, 0.6704, 0.7168, 0.7075,
        0.5651, 0.7326, 0.6056, 0.8429, 0.6909, 0.8600, 0.8532, 0.6403, 0.7613,
        0.6818, 0.8026, 0.6853, 0.6758, 0.6348, 0.5768, 0.4519, 0.8309, 0.6013,
        0.8898, 0.6858, 0.6690, 0.6805, 0.8227, 0.7102, 0.5529, 0.7561, 0.8408,
        0.6232, 0.5870, 0.6931, 0.7231, 0.6222, 0.8284, 0.4552, 0.6170, 0.7578,
        0.7836, 0.7498, 0.8286, 0.7544, 0.8680, 0.6865, 0.6366, 0.8764, 0.8428,
        0.7657, 0.7888, 0.7443, 0.7737, 0.7776, 0.5798, 0.8111, 0.7912, 0.8957,
        0.8423, 0.8394, 0.7655, 0.8096, 0.5666, 0.9173, 0.9243, 0.7845, 0.8311,
        0.6706, 0.8135, 0.7243, 0.7963, 0.7428, 0.3891, 0.7693, 0.8048, 0.8173,
        0.7789, 0.6396, 0.7416, 0.6816, 0.6375, 0.8739, 0.8026, 0.7659, 0.6766,
        0.7123, 0.5365, 0.8541, 0.5734, 0.8445, 0.8000, 0.8530, 0.8585, 0.7479,
        0.6855, 0.7831, 0.7508, 0.5765, 0.7298, 0.6175, 0.9015, 0.8238, 0.8129,
        0.6368, 0.8107, 0.8321, 0.8289, 0.7700, 0.6675, 0.7429, 0.8575, 0.8541,
        0.8969, 0.8614, 0.8615, 0.5324, 0.7467, 0.5692, 0.7718, 0.7210, 0.8501,
        0.6751, 0.6575, 0.7664, 0.8979, 0.6030, 0.8416, 0.4605, 0.6529, 0.8013,
        0.8390, 0.8132, 0.6953, 0.8240, 0.7063, 0.7440, 0.8045, 0.8929, 0.7209,
        0.6570, 0.6846, 0.3896, 0.5113, 0.8740, 0.7980, 0.8092, 0.8373, 0.8153,
        0.8637, 0.7614, 0.5655, 0.7097, 0.7456, 0.7751, 0.8039, 0.8849, 0.3489,
        0.6629, 0.7438, 0.7778, 0.6074, 0.6299, 0.9106, 0.7884, 0.6609, 0.5334,
        0.6353, 0.8848, 0.7327, 0.8274, 0.8215, 0.8577, 0.8570, 0.6582, 0.7554,
        0.7976, 0.7011, 0.6704, 0.7035, 0.7804, 0.8070, 0.7969, 0.8812, 0.5693,
        0.9051, 0.7015, 0.6606, 0.6502, 0.8207, 0.5438, 0.8223, 0.7273, 0.7676,
        0.6572, 0.8156, 0.7195, 0.5703, 0.7927, 0.7763, 0.7109, 0.7048, 0.4494,
        0.6316, 0.6465, 0.6965, 0.6321, 0.8915, 0.7885, 0.6894, 0.7912, 0.4249,
        0.6789, 0.7952, 0.6166, 0.6518, 0.6863, 0.6095, 0.8744, 0.9012, 0.5553,
        0.8512, 0.7239, 0.7036, 0.8199, 0.8365, 0.6966, 0.5930, 0.8622, 0.8298,
        0.7534, 0.5960, 0.8355, 0.7013, 0.5726, 0.6720, 0.7482, 0.7291, 0.6911,
        0.5654, 0.8296, 0.7629, 0.7589, 0.7197, 0.6520, 0.7678, 0.6784, 0.7975,
        0.6840, 0.6227, 0.8179, 0.7968, 0.6284, 0.8905, 0.8752, 0.7990, 0.9209,
        0.8297, 0.8925, 0.7774, 0.8070, 0.5994, 0.9175, 0.5220, 0.6489, 0.8598,
        0.8246, 0.7177, 0.7108, 0.6723, 0.7323, 0.9103, 0.6651, 0.6674, 0.7009,
        0.6885, 0.8597, 0.7403, 0.4866, 0.7420, 0.6012, 0.6555, 0.7540, 0.8586,
        0.7238, 0.6576, 0.6134, 0.8613, 0.8577, 0.8190, 0.8887, 0.7748, 0.7324,
        0.7547, 0.7598, 0.6411, 0.8168, 0.5174, 0.7949, 0.7769, 0.8325, 0.7746,
        0.7061, 0.4579, 0.6309, 0.6095, 0.7486, 0.8222, 0.4306, 0.7357, 0.3974,
        0.6053, 0.7923, 0.7691, 0.5862, 0.7550, 0.6616, 0.6934, 0.8531, 0.5309,
        0.8550, 0.8478, 0.7948, 0.9075, 0.6763, 0.8391, 0.6148, 0.7628, 0.7653,
        0.5045, 0.7598, 0.8764, 0.8899, 0.8367, 0.7187, 0.6781, 0.6882, 0.6684,
        0.4717, 0.6448, 0.7362, 0.6871, 0.7558, 0.8843, 0.8243, 0.9223, 0.8266,
        0.7158, 0.6878, 0.8651, 0.8724, 0.8223, 0.6119, 0.8828, 0.7513, 0.8745,
        0.6731, 0.8518, 0.7681, 0.5122, 0.6974, 0.4667, 0.8283, 0.7647, 0.8364,
        0.8444, 0.7828, 0.8354, 0.9183, 0.7557, 0.7521, 0.7191, 0.7043, 0.7626,
        0.6902, 0.6390, 0.8722, 0.4792, 0.8140, 0.7789, 0.8242, 0.8894, 0.8824,
        0.6446, 0.7982, 0.7635, 0.5720, 0.8249, 0.6918, 0.9033, 0.6952, 0.4795,
        0.8181, 0.7747, 0.6945, 0.8755, 0.7439, 0.5724, 0.8459, 0.7524, 0.6799,
        0.8051, 0.5454, 0.6352, 0.7992, 0.8550, 0.8985, 0.7965, 0.7826, 0.6733,
        0.7045, 0.6693, 0.6525, 0.7857, 0.5212, 0.8431, 0.5758, 0.7752, 0.6004,
        0.8016, 0.7527, 0.9169, 0.6354, 0.5618, 0.7986, 0.6498, 0.6658, 0.7436,
        0.7193, 0.8768, 0.7878, 0.7331, 0.7380, 0.8105, 0.8466, 0.7130, 0.7671,
        0.7164, 0.6336, 0.8099, 0.6008, 0.8126, 0.8254, 0.8636, 0.8450, 0.8452,
        0.7850, 0.7527, 0.7419, 0.6407, 0.7318, 0.7563, 0.9148, 0.7627, 0.7865,
        0.7924, 0.6589, 0.8078, 0.8805, 0.7000, 0.6840, 0.7740, 0.7198, 0.7681,
        0.7381, 0.7386, 0.7611, 0.8043, 0.7899, 0.6854, 0.8109, 0.7606, 0.7398,
        0.8235, 0.5465, 0.7341, 0.6530, 0.7873, 0.5699, 0.8362, 0.7495, 0.7040,
        0.8227, 0.5638, 0.8443, 0.5625, 0.6715, 0.7547, 0.4596, 0.8036, 0.5242,
        0.5790, 0.8262, 0.6203, 0.7351, 0.8223, 0.8341, 0.8549, 0.6714, 0.8792,
        0.5911, 0.8285, 0.7065, 0.6358, 0.8020, 0.7448, 0.5938, 0.7778, 0.8417,
        0.6366, 0.6425, 0.8895, 0.7746, 0.7290, 0.7186, 0.5642, 0.7088, 0.5533,
        0.8083, 0.7834, 0.6018, 0.8610, 0.8523, 0.5556, 0.6834, 0.7531, 0.8380,
        0.8853, 0.8315, 0.8028, 0.6479, 0.9276, 0.7482, 0.7740, 0.8017, 0.8758,
        0.8263, 0.8964], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(458.1233, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([623, 1])
Inertia: tensor([171.8120], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([623, 1280])
Centroid_list: tensor([[-0.0359, -0.0489, -0.0360,  ..., -0.0513,  0.0872, -0.1843],
        [ 0.0283, -0.0539, -0.0169,  ..., -0.0774,  0.0689, -0.1275],
        [-0.0268, -0.0782, -0.0457,  ..., -0.0752,  0.0702, -0.3889],
        ...,
        [-0.0268, -0.0782, -0.0457,  ..., -0.0752,  0.0702, -0.3889],
        [ 0.0283, -0.0539, -0.0169,  ..., -0.0774,  0.0689, -0.1275],
        [-0.0268, -0.0782, -0.0457,  ..., -0.0752,  0.0702, -0.3889]],
       device='cuda:0')
Computed C_score: tensor([0.8411, 0.5695, 0.8856, 0.7393, 0.8200, 0.8312, 0.6570, 0.7590, 0.8864,
        0.9010, 0.8175, 0.7412, 0.8750, 0.8258, 0.6409, 0.8410, 0.6649, 0.8253,
        0.8229, 0.8118, 0.5464, 0.7234, 0.6770, 0.8515, 0.8053, 0.6745, 0.8540,
        0.5597, 0.6417, 0.6910, 0.6522, 0.7830, 0.8209, 0.7149, 0.8691, 0.6788,
        0.7220, 0.6326, 0.7728, 0.8188, 0.6912, 0.7392, 0.8207, 0.8717, 0.8057,
        0.9116, 0.6797, 0.8355, 0.7878, 0.6956, 0.6342, 0.5245, 0.7772, 0.7503,
        0.8907, 0.7871, 0.8636, 0.6722, 0.7702, 0.5148, 0.7557, 0.7722, 0.8055,
        0.7873, 0.7781, 0.8143, 0.7794, 0.7105, 0.4986, 0.7349, 0.8537, 0.8865,
        0.6312, 0.7677, 0.7362, 0.6026, 0.8087, 0.6733, 0.8187, 0.5319, 0.7378,
        0.7913, 0.6930, 0.6911, 0.8056, 0.8603, 0.5466, 0.6662, 0.8104, 0.7576,
        0.5334, 0.7866, 0.5974, 0.8513, 0.7089, 0.8624, 0.8517, 0.6808, 0.7554,
        0.6964, 0.8032, 0.7280, 0.6715, 0.6720, 0.6711, 0.4604, 0.8334, 0.6274,
        0.8862, 0.7281, 0.7372, 0.7290, 0.8338, 0.6829, 0.5272, 0.8270, 0.8481,
        0.6242, 0.7487, 0.7919, 0.7930, 0.6765, 0.8346, 0.4908, 0.6764, 0.7623,
        0.7540, 0.7507, 0.8290, 0.7554, 0.8740, 0.7984, 0.6362, 0.8752, 0.8460,
        0.7756, 0.8645, 0.7428, 0.7630, 0.7548, 0.5995, 0.7874, 0.7942, 0.8918,
        0.8497, 0.8235, 0.7625, 0.8330, 0.6024, 0.9168, 0.9321, 0.7935, 0.8017,
        0.7207, 0.8200, 0.7968, 0.7867, 0.7543, 0.4342, 0.7749, 0.7895, 0.7980,
        0.8143, 0.7021, 0.7372, 0.6861, 0.6331, 0.8718, 0.8120, 0.8205, 0.7129,
        0.7163, 0.5676, 0.8465, 0.6994, 0.8457, 0.8063, 0.8604, 0.8498, 0.7233,
        0.7254, 0.8528, 0.7429, 0.6041, 0.7985, 0.6066, 0.9063, 0.8209, 0.9098,
        0.7949, 0.8108, 0.8396, 0.8282, 0.8222, 0.6716, 0.7395, 0.8527, 0.8547,
        0.8954, 0.8631, 0.8632, 0.5102, 0.7428, 0.6154, 0.8996, 0.7176, 0.8505,
        0.6774, 0.6573, 0.7723, 0.8981, 0.6669, 0.8360, 0.5250, 0.6418, 0.8166,
        0.7865, 0.8616, 0.7802, 0.8135, 0.7014, 0.7357, 0.8069, 0.8944, 0.7390,
        0.8125, 0.6913, 0.3856, 0.5329, 0.8729, 0.7741, 0.7734, 0.8419, 0.8176,
        0.8653, 0.7705, 0.6383, 0.7083, 0.7402, 0.7725, 0.7994, 0.8845, 0.3222,
        0.6616, 0.7448, 0.8195, 0.6360, 0.6253, 0.9131, 0.8005, 0.6710, 0.5756,
        0.7026, 0.8848, 0.7332, 0.8489, 0.8248, 0.8507, 0.8835, 0.7649, 0.7544,
        0.8043, 0.6906, 0.7541, 0.7159, 0.8102, 0.7897, 0.8014, 0.8748, 0.6060,
        0.9036, 0.8641, 0.6668, 0.6496, 0.8239, 0.6762, 0.8267, 0.7281, 0.8311,
        0.6245, 0.8184, 0.7499, 0.6789, 0.7836, 0.7817, 0.7099, 0.7015, 0.4336,
        0.6194, 0.8045, 0.7372, 0.6216, 0.8932, 0.7825, 0.6860, 0.8847, 0.4830,
        0.6817, 0.7970, 0.6493, 0.6500, 0.6851, 0.6339, 0.8771, 0.8954, 0.5581,
        0.8555, 0.7108, 0.7058, 0.8263, 0.8446, 0.7633, 0.7099, 0.8462, 0.8212,
        0.7487, 0.5838, 0.7975, 0.7126, 0.7436, 0.6637, 0.7642, 0.8421, 0.8012,
        0.5588, 0.8323, 0.8148, 0.7924, 0.7818, 0.6630, 0.7678, 0.7253, 0.7954,
        0.6829, 0.6598, 0.8232, 0.7955, 0.8006, 0.8919, 0.8691, 0.8411, 0.9208,
        0.8325, 0.8931, 0.7773, 0.7834, 0.5977, 0.9138, 0.5709, 0.6246, 0.8574,
        0.8299, 0.7688, 0.7061, 0.6671, 0.7449, 0.9083, 0.7327, 0.6581, 0.7076,
        0.6662, 0.8692, 0.7488, 0.5292, 0.7853, 0.6173, 0.6588, 0.7353, 0.8606,
        0.7238, 0.7299, 0.6378, 0.8588, 0.8579, 0.8157, 0.8961, 0.7733, 0.7156,
        0.7412, 0.8144, 0.6424, 0.7892, 0.5918, 0.7802, 0.8518, 0.8356, 0.7724,
        0.6741, 0.4980, 0.8186, 0.7851, 0.8230, 0.8359, 0.4228, 0.7844, 0.4512,
        0.6681, 0.7614, 0.7624, 0.6358, 0.7335, 0.6610, 0.6817, 0.8528, 0.5191,
        0.8521, 0.8475, 0.8338, 0.9093, 0.7468, 0.8348, 0.6723, 0.7579, 0.7769,
        0.5526, 0.7586, 0.8767, 0.8933, 0.8367, 0.7451, 0.6874, 0.6833, 0.6671,
        0.4615, 0.6597, 0.7090, 0.7124, 0.7500, 0.8866, 0.8255, 0.9212, 0.8233,
        0.8331, 0.6801, 0.8734, 0.8800, 0.8270, 0.6059, 0.8879, 0.7133, 0.8558,
        0.6657, 0.8589, 0.7598, 0.5151, 0.7741, 0.5050, 0.8221, 0.7753, 0.8469,
        0.8438, 0.7844, 0.8358, 0.9124, 0.7525, 0.7400, 0.7958, 0.6973, 0.7290,
        0.6881, 0.6246, 0.8748, 0.5308, 0.8211, 0.7760, 0.8284, 0.8943, 0.8804,
        0.6157, 0.8027, 0.7327, 0.6753, 0.8294, 0.7769, 0.9040, 0.7619, 0.5164,
        0.8153, 0.7738, 0.6769, 0.8727, 0.7364, 0.5546, 0.8293, 0.7589, 0.6765,
        0.8011, 0.7216, 0.6339, 0.7991, 0.8354, 0.9053, 0.7914, 0.7931, 0.6840,
        0.7459, 0.7012, 0.6659, 0.8010, 0.5292, 0.8673, 0.6358, 0.7716, 0.6482,
        0.8050, 0.7811, 0.9131, 0.6274, 0.6063, 0.8107, 0.6425, 0.6588, 0.7387,
        0.7178, 0.8728, 0.8288, 0.7306, 0.7230, 0.8227, 0.8362, 0.7107, 0.7878,
        0.7062, 0.6400, 0.8144, 0.6040, 0.8078, 0.8325, 0.8296, 0.8478, 0.8218,
        0.8065, 0.7693, 0.7448, 0.6176, 0.7767, 0.7461, 0.9205, 0.8502, 0.7876,
        0.8216, 0.7235, 0.8523, 0.8851, 0.7601, 0.7179, 0.7706, 0.7366, 0.7964,
        0.7401, 0.7375, 0.7562, 0.8276, 0.7979, 0.6774, 0.8045, 0.7588, 0.7458,
        0.8332, 0.5660, 0.7418, 0.6850, 0.7534, 0.7343, 0.8427, 0.7865, 0.7704,
        0.8700, 0.5917, 0.8493, 0.7415, 0.6983, 0.7679, 0.5233, 0.8083, 0.5191,
        0.6050, 0.8157, 0.6130, 0.7347, 0.8228, 0.8379, 0.8612, 0.6698, 0.8732,
        0.6760, 0.8348, 0.6869, 0.6238, 0.8024, 0.7409, 0.5873, 0.7765, 0.8483,
        0.7329, 0.7117, 0.8953, 0.7869, 0.7396, 0.6918, 0.6261, 0.7094, 0.6035,
        0.8105, 0.7653, 0.6617, 0.8646, 0.8580, 0.6210, 0.8258, 0.7818, 0.8302,
        0.8915, 0.8275, 0.7990, 0.6600, 0.9293, 0.7502, 0.7782, 0.8108, 0.8809,
        0.8021, 0.8967], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(469.1321, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([623, 1])
Inertia: tensor([120.1208], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([623, 1280])
Centroid_list: tensor([[-0.0514, -0.0592, -0.0531,  ..., -0.0460,  0.0854, -0.3767],
        [ 0.0282, -0.0538, -0.0163,  ..., -0.0769,  0.0687, -0.1232],
        [-0.0249, -0.0801, -0.0449,  ..., -0.0764,  0.0698, -0.3929],
        ...,
        [-0.0249, -0.0801, -0.0449,  ..., -0.0764,  0.0698, -0.3929],
        [ 0.0282, -0.0538, -0.0163,  ..., -0.0769,  0.0687, -0.1232],
        [-0.0249, -0.0801, -0.0449,  ..., -0.0764,  0.0698, -0.3929]],
       device='cuda:0')
Computed C_score: tensor([0.8982, 0.5685, 0.8859, 0.8463, 0.8224, 0.8378, 0.6594, 0.7622, 0.8841,
        0.9058, 0.8144, 0.7402, 0.8868, 0.8172, 0.6401, 0.8478, 0.6656, 0.8086,
        0.7993, 0.8060, 0.5439, 0.7265, 0.7585, 0.8570, 0.8079, 0.6661, 0.8526,
        0.5566, 0.6463, 0.6817, 0.6502, 0.7741, 0.8214, 0.7088, 0.8707, 0.6768,
        0.7229, 0.6317, 0.7729, 0.8400, 0.6918, 0.7390, 0.8007, 0.8964, 0.8072,
        0.9324, 0.6849, 0.9141, 0.7920, 0.6948, 0.6356, 0.5616, 0.7785, 0.7595,
        0.8941, 0.7932, 0.8386, 0.6717, 0.7692, 0.5141, 0.7524, 0.7514, 0.7997,
        0.8723, 0.7578, 0.8128, 0.7751, 0.7113, 0.4990, 0.7280, 0.8519, 0.8934,
        0.6283, 0.7481, 0.7392, 0.6039, 0.8079, 0.6715, 0.8192, 0.5309, 0.7394,
        0.7878, 0.6952, 0.6948, 0.8076, 0.8634, 0.5469, 0.6594, 0.8105, 0.7587,
        0.5330, 0.7877, 0.5918, 0.8595, 0.7101, 0.8609, 0.8952, 0.6824, 0.7506,
        0.7024, 0.8021, 0.7293, 0.6726, 0.6705, 0.6731, 0.4615, 0.8371, 0.6250,
        0.8714, 0.7177, 0.7381, 0.7291, 0.8406, 0.6832, 0.5259, 0.8306, 0.8504,
        0.6234, 0.7488, 0.7906, 0.7943, 0.6808, 0.8543, 0.4912, 0.6773, 0.7803,
        0.7538, 0.7813, 0.8482, 0.7919, 0.8715, 0.7981, 0.6386, 0.9095, 0.8527,
        0.7746, 0.8643, 0.7397, 0.7658, 0.7545, 0.6001, 0.7866, 0.7991, 0.8821,
        0.8510, 0.8239, 0.7645, 0.8316, 0.6399, 0.9096, 0.9365, 0.8590, 0.8016,
        0.7172, 0.8259, 0.7999, 0.8831, 0.7614, 0.4353, 0.7812, 0.7905, 0.7972,
        0.8158, 0.7033, 0.7558, 0.6916, 0.6296, 0.8716, 0.8848, 0.8214, 0.7114,
        0.7147, 0.6167, 0.9246, 0.7010, 0.8401, 0.7841, 0.8649, 0.8851, 0.7236,
        0.7265, 0.8535, 0.7336, 0.6059, 0.7967, 0.6096, 0.9107, 0.8146, 0.9120,
        0.7860, 0.8081, 0.8470, 0.8211, 0.8216, 0.6747, 0.7359, 0.8919, 0.8555,
        0.9097, 0.8650, 0.8639, 0.5079, 0.7420, 0.6144, 0.8978, 0.7136, 0.8527,
        0.7027, 0.6527, 0.7734, 0.8964, 0.6683, 0.9075, 0.5247, 0.6816, 0.8182,
        0.7889, 0.8642, 0.7759, 0.8111, 0.6952, 0.7358, 0.8180, 0.9088, 0.7384,
        0.8081, 0.6899, 0.4973, 0.5325, 0.8741, 0.7776, 0.7800, 0.8449, 0.8113,
        0.9094, 0.7730, 0.6384, 0.7103, 0.7314, 0.8601, 0.8049, 0.8771, 0.3218,
        0.6656, 0.7444, 0.8152, 0.6373, 0.6260, 0.9093, 0.8471, 0.6768, 0.5767,
        0.7038, 0.9182, 0.8059, 0.8513, 0.8192, 0.8511, 0.8840, 0.7672, 0.7772,
        0.7931, 0.7236, 0.7554, 0.7275, 0.8102, 0.7889, 0.8074, 0.8982, 0.6084,
        0.9117, 0.8620, 0.6766, 0.6485, 0.8321, 0.6767, 0.8240, 0.7341, 0.8317,
        0.6237, 0.8157, 0.7422, 0.6752, 0.8941, 0.7571, 0.7592, 0.8079, 0.4324,
        0.6665, 0.8058, 0.7379, 0.7352, 0.8918, 0.7713, 0.6794, 0.8816, 0.4851,
        0.6882, 0.7995, 0.6496, 0.6481, 0.6882, 0.6322, 0.8981, 0.9271, 0.5615,
        0.8734, 0.7116, 0.7002, 0.8318, 0.8498, 0.7578, 0.7065, 0.8472, 0.8927,
        0.7422, 0.5776, 0.7962, 0.7922, 0.7431, 0.6619, 0.7648, 0.8417, 0.7878,
        0.5499, 0.8362, 0.8163, 0.7923, 0.7845, 0.6612, 0.7664, 0.7245, 0.8573,
        0.6862, 0.6610, 0.7966, 0.8588, 0.7990, 0.8885, 0.8468, 0.8427, 0.8926,
        0.8308, 0.8973, 0.7774, 0.7830, 0.5950, 0.9145, 0.5696, 0.6258, 0.8585,
        0.8881, 0.7610, 0.7050, 0.7426, 0.8504, 0.9228, 0.7361, 0.7326, 0.7378,
        0.6734, 0.9128, 0.7563, 0.5296, 0.7884, 0.6147, 0.7132, 0.7366, 0.8620,
        0.7254, 0.7326, 0.6594, 0.8526, 0.8522, 0.8155, 0.9019, 0.8147, 0.7170,
        0.7405, 0.8152, 0.6474, 0.7898, 0.5915, 0.7791, 0.8529, 0.8382, 0.8311,
        0.6748, 0.4987, 0.8161, 0.7811, 0.8255, 0.8437, 0.4188, 0.7862, 0.4520,
        0.6667, 0.7604, 0.8211, 0.6365, 0.7409, 0.6589, 0.6790, 0.8585, 0.5179,
        0.8893, 0.8410, 0.8348, 0.9405, 0.7494, 0.8228, 0.6728, 0.7636, 0.8639,
        0.5507, 0.7581, 0.9120, 0.9347, 0.8394, 0.7464, 0.6881, 0.6803, 0.6696,
        0.4610, 0.6602, 0.7095, 0.7162, 0.7501, 0.8888, 0.8270, 0.9028, 0.8231,
        0.8351, 0.8100, 0.9023, 0.8859, 0.8222, 0.5940, 0.8934, 0.7087, 0.8560,
        0.6567, 0.8617, 0.7579, 0.5170, 0.7735, 0.5016, 0.8522, 0.7875, 0.9302,
        0.8998, 0.8552, 0.8291, 0.8831, 0.7558, 0.7780, 0.7959, 0.6928, 0.7252,
        0.6827, 0.6229, 0.8739, 0.5294, 0.8263, 0.7734, 0.8561, 0.8895, 0.8806,
        0.6129, 0.8311, 0.7322, 0.6771, 0.8380, 0.7782, 0.9017, 0.7626, 0.5154,
        0.8058, 0.7773, 0.6770, 0.8787, 0.7322, 0.5280, 0.8293, 0.7593, 0.6654,
        0.8081, 0.7217, 0.6320, 0.7881, 0.8365, 0.9089, 0.8131, 0.8705, 0.6898,
        0.7465, 0.7015, 0.7682, 0.8006, 0.5278, 0.8696, 0.6362, 0.7667, 0.6473,
        0.8123, 0.7812, 0.8948, 0.6265, 0.6078, 0.8988, 0.6391, 0.6566, 0.7378,
        0.7163, 0.9173, 0.8340, 0.7782, 0.8569, 0.8632, 0.8921, 0.6983, 0.7878,
        0.7758, 0.6405, 0.8445, 0.6027, 0.8844, 0.8938, 0.8350, 0.8546, 0.8282,
        0.8052, 0.7705, 0.7505, 0.6151, 0.7788, 0.7528, 0.9204, 0.8504, 0.7952,
        0.8224, 0.7252, 0.8532, 0.8843, 0.7612, 0.7166, 0.8034, 0.7377, 0.7986,
        0.7967, 0.7389, 0.7672, 0.8291, 0.7981, 0.6649, 0.8005, 0.7555, 0.7497,
        0.8365, 0.5645, 0.8327, 0.6848, 0.7536, 0.7337, 0.8604, 0.7878, 0.7710,
        0.8705, 0.5890, 0.8575, 0.7387, 0.6987, 0.7952, 0.5247, 0.8154, 0.5874,
        0.6047, 0.8818, 0.6142, 0.7316, 0.8207, 0.8361, 0.9089, 0.7007, 0.8883,
        0.6762, 0.8416, 0.6894, 0.6453, 0.8013, 0.7058, 0.6346, 0.7844, 0.9037,
        0.7402, 0.7126, 0.9006, 0.7931, 0.7432, 0.6911, 0.6244, 0.7146, 0.6025,
        0.8120, 0.7653, 0.6630, 0.9100, 0.8604, 0.6211, 0.8262, 0.7821, 0.9004,
        0.8967, 0.8257, 0.8941, 0.7236, 0.8874, 0.7540, 0.7789, 0.8976, 0.8771,
        0.8023, 0.8993], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(474.5484, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0015, 0.0045, 0.0087, 0.0138], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([11, 1280])
S-Scores: tensor([0.6613, 1.1455, 2.2857, 3.8211], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([173.7401], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-5.5973e-04, -6.2046e-02, -3.9880e-02,  ..., -5.7190e-02,
          8.5450e-02, -7.5341e-01],
        [-5.5973e-04, -6.2046e-02, -3.9880e-02,  ..., -5.7190e-02,
          8.5450e-02, -7.5341e-01],
        [ 2.5113e-03, -4.4768e-02, -4.9994e-02,  ..., -4.8262e-02,
          6.3070e-02, -1.9310e-01],
        ...,
        [-5.5973e-04, -6.2046e-02, -3.9880e-02,  ..., -5.7190e-02,
          8.5450e-02, -7.5341e-01],
        [ 2.5113e-03, -4.4768e-02, -4.9994e-02,  ..., -4.8262e-02,
          6.3070e-02, -1.9310e-01],
        [ 2.5113e-03, -4.4768e-02, -4.9994e-02,  ..., -4.8262e-02,
          6.3070e-02, -1.9310e-01]], device='cuda:0')
Computed C_score: tensor([0.7597, 0.6467, 0.5971, 0.7391, 0.7337, 0.7539, 0.8086, 0.8413, 0.7708,
        0.7569, 0.6701], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(8.0777, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([135.3095], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[ 0.0384, -0.0465, -0.0251,  ..., -0.0711,  0.0790, -0.5547],
        [ 0.0384, -0.0465, -0.0251,  ..., -0.0711,  0.0790, -0.5547],
        [-0.0875, -0.0379, -0.0914,  ..., -0.0063,  0.0771, -0.0743],
        ...,
        [ 0.0384, -0.0465, -0.0251,  ..., -0.0711,  0.0790, -0.5547],
        [ 0.0384, -0.0465, -0.0251,  ..., -0.0711,  0.0790, -0.5547],
        [ 0.0384, -0.0465, -0.0251,  ..., -0.0711,  0.0790, -0.5547]],
       device='cuda:0')
Computed C_score: tensor([0.8180, 0.7780, 1.0000, 0.8967, 0.7617, 0.8791, 0.7898, 0.8310, 0.7982,
        0.7792, 0.7344], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(9.0662, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([98.5474], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[ 0.0309, -0.0535, -0.0331,  ..., -0.0938,  0.0847, -0.6147],
        [ 0.0534, -0.0327, -0.0092,  ..., -0.0258,  0.0677, -0.4347],
        [-0.0875, -0.0379, -0.0914,  ..., -0.0063,  0.0771, -0.0743],
        ...,
        [ 0.0309, -0.0535, -0.0331,  ..., -0.0938,  0.0847, -0.6147],
        [ 0.0309, -0.0535, -0.0331,  ..., -0.0938,  0.0847, -0.6147],
        [ 0.0534, -0.0327, -0.0092,  ..., -0.0258,  0.0677, -0.4347]],
       device='cuda:0')
Computed C_score: tensor([0.8730, 0.8936, 1.0000, 0.8967, 0.9108, 0.8791, 0.7898, 0.8540, 0.8708,
        0.7995, 0.7824], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(9.5496, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([119.7030], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[ 0.0141, -0.0561, -0.0254,  ..., -0.0902,  0.0820, -0.6859],
        [ 0.0534, -0.0327, -0.0092,  ..., -0.0258,  0.0677, -0.4347],
        [-0.0875, -0.0379, -0.0914,  ..., -0.0063,  0.0771, -0.0743],
        ...,
        [ 0.0141, -0.0561, -0.0254,  ..., -0.0902,  0.0820, -0.6859],
        [ 0.0435, -0.0417, -0.0534,  ..., -0.0673,  0.0930, -0.5697],
        [ 0.0534, -0.0327, -0.0092,  ..., -0.0258,  0.0677, -0.4347]],
       device='cuda:0')
Computed C_score: tensor([0.8407, 0.8936, 1.0000, 0.9238, 0.9108, 0.9253, 0.8069, 0.8669, 0.8729,
        1.0000, 0.7824], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(9.8231, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0757, 0.1122, 0.1931, 0.2801], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([3420, 1280])
S-Scores: tensor([0.6478, 1.9799, 4.0497, 6.7860], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([3420, 1])
Inertia: tensor([185.0035], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([3420, 1280])
Centroid_list: tensor([[-0.0358, -0.0574, -0.0736,  ..., -0.0640,  0.0363, -0.4210],
        [-0.0358, -0.0574, -0.0736,  ..., -0.0640,  0.0363, -0.4210],
        [-0.0358, -0.0574, -0.0736,  ..., -0.0640,  0.0363, -0.4210],
        ...,
        [-0.0358, -0.0574, -0.0736,  ..., -0.0640,  0.0363, -0.4210],
        [-0.0470, -0.0589, -0.0562,  ..., -0.0602,  0.0764, -0.3010],
        [-0.0358, -0.0574, -0.0736,  ..., -0.0640,  0.0363, -0.4210]],
       device='cuda:0')
Computed C_score: tensor([0.7309, 0.7271, 0.5291,  ..., 0.8083, 0.7482, 0.7330], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2436.5742, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3420, 1])
Inertia: tensor([172.9771], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([3420, 1280])
Centroid_list: tensor([[-0.0408, -0.0596, -0.0627,  ..., -0.0714,  0.0603, -0.3702],
        [-0.0320, -0.0563, -0.0839,  ..., -0.0572,  0.0158, -0.4791],
        [-0.0408, -0.0596, -0.0627,  ..., -0.0714,  0.0603, -0.3702],
        ...,
        [-0.0320, -0.0563, -0.0839,  ..., -0.0572,  0.0158, -0.4791],
        [-0.0408, -0.0596, -0.0627,  ..., -0.0714,  0.0603, -0.3702],
        [-0.0320, -0.0563, -0.0839,  ..., -0.0572,  0.0158, -0.4791]],
       device='cuda:0')
Computed C_score: tensor([0.7538, 0.7989, 0.5172,  ..., 0.8783, 0.7330, 0.7139], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2514.6719, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3420, 1])
Inertia: tensor([180.3205], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([3420, 1280])
Centroid_list: tensor([[-0.0653, -0.0858, -0.0775,  ..., -0.0755,  0.0463, -0.5446],
        [-0.0291, -0.0538, -0.0844,  ..., -0.0560,  0.0134, -0.4761],
        [-0.0217, -0.0402, -0.0541,  ..., -0.0667,  0.0657, -0.2510],
        ...,
        [-0.0291, -0.0538, -0.0844,  ..., -0.0560,  0.0134, -0.4761],
        [-0.0653, -0.0858, -0.0775,  ..., -0.0755,  0.0463, -0.5446],
        [-0.0217, -0.0402, -0.0541,  ..., -0.0667,  0.0657, -0.2510]],
       device='cuda:0')
Computed C_score: tensor([0.7402, 0.8082, 0.5979,  ..., 0.8838, 0.7403, 0.7163], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2575.0439, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3420, 1])
Inertia: tensor([183.6991], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([3420, 1280])
Centroid_list: tensor([[-0.0655, -0.0858, -0.0769,  ..., -0.0750,  0.0489, -0.5245],
        [-0.0146, -0.0536, -0.0886,  ..., -0.0437,  0.0245, -0.3278],
        [-0.0227, -0.0394, -0.0521,  ..., -0.0675,  0.0678, -0.2444],
        ...,
        [-0.0146, -0.0536, -0.0886,  ..., -0.0437,  0.0245, -0.3278],
        [-0.0655, -0.0858, -0.0769,  ..., -0.0750,  0.0489, -0.5245],
        [-0.0146, -0.0536, -0.0886,  ..., -0.0437,  0.0245, -0.3278]],
       device='cuda:0')
Computed C_score: tensor([0.7349, 0.7914, 0.5917,  ..., 0.8857, 0.7503, 0.7214], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2600.5491, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0003, 0.0008, 0.0016, 0.0026], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([11, 1280])
S-Scores: tensor([0.4769, 1.1708, 2.1926, 3.9711], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([152.7912], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0401, -0.0541, -0.0809,  ..., -0.0368,  0.0871, -0.4605],
        [-0.0401, -0.0541, -0.0809,  ..., -0.0368,  0.0871, -0.4605],
        [-0.0401, -0.0541, -0.0809,  ..., -0.0368,  0.0871, -0.4605],
        ...,
        [-0.0401, -0.0541, -0.0809,  ..., -0.0368,  0.0871, -0.4605],
        [-0.0401, -0.0541, -0.0809,  ..., -0.0368,  0.0871, -0.4605],
        [-0.0401, -0.0541, -0.0809,  ..., -0.0368,  0.0871, -0.4605]],
       device='cuda:0')
Computed C_score: tensor([0.8020, 0.5721, 0.8006, 1.0000, 0.4977, 0.7014, 0.7103, 0.7372, 0.6850,
        0.6184, 0.7717], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(7.8963, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([128.0745], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0491, -0.0576, -0.0892,  ..., -0.0301,  0.0952, -0.6038],
        [-0.0086, -0.0416, -0.0520,  ..., -0.0599,  0.0591,  0.0414],
        [-0.0491, -0.0576, -0.0892,  ..., -0.0301,  0.0952, -0.6038],
        ...,
        [-0.0491, -0.0576, -0.0892,  ..., -0.0301,  0.0952, -0.6038],
        [-0.0491, -0.0576, -0.0892,  ..., -0.0301,  0.0952, -0.6038],
        [-0.0491, -0.0576, -0.0892,  ..., -0.0301,  0.0952, -0.6038]],
       device='cuda:0')
Computed C_score: tensor([0.8342, 0.8133, 0.8357, 1.0000, 0.8577, 0.7484, 0.7428, 0.7458, 0.7062,
        0.5927, 0.7900], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(8.6667, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([92.3391], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0431, -0.0718, -0.1013,  ..., -0.0280,  0.1006, -0.7588],
        [-0.0622, -0.0299, -0.0727,  ..., -0.0352,  0.0752, -0.0802],
        [-0.0431, -0.0718, -0.1013,  ..., -0.0280,  0.1006, -0.7588],
        ...,
        [-0.0431, -0.0718, -0.1013,  ..., -0.0280,  0.1006, -0.7588],
        [-0.0622, -0.0299, -0.0727,  ..., -0.0352,  0.0752, -0.0802],
        [-0.0431, -0.0718, -0.1013,  ..., -0.0280,  0.1006, -0.7588]],
       device='cuda:0')
Computed C_score: tensor([0.8827, 0.7334, 0.8679, 1.0000, 1.0000, 0.7817, 0.8070, 0.7869, 0.6989,
        0.8546, 0.8124], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(9.2254, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([14.5176], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0978, -0.1075, -0.1170,  ..., -0.0155,  0.0779, -0.4467],
        [-0.0622, -0.0299, -0.0727,  ..., -0.0352,  0.0752, -0.0802],
        [-0.0978, -0.1075, -0.1170,  ..., -0.0155,  0.0779, -0.4467],
        ...,
        [-0.0066, -0.0480, -0.0908,  ..., -0.0364,  0.1157, -0.9669],
        [-0.0622, -0.0299, -0.0727,  ..., -0.0352,  0.0752, -0.0802],
        [-0.0978, -0.1075, -0.1170,  ..., -0.0155,  0.0779, -0.4467]],
       device='cuda:0')
Computed C_score: tensor([0.9819, 0.7334, 0.9809, 1.0000, 1.0000, 0.8395, 0.8070, 0.8307, 0.7687,
        0.8546, 0.8239], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(9.6203, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0570, 0.1190, 0.1920, 0.2922], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([499, 1280])
S-Scores: tensor([0.6901, 2.1522, 4.4454, 6.7194], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([499, 1])
Inertia: tensor([125.2610], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([499, 1280])
Centroid_list: tensor([[-0.0278, -0.0285, -0.0777,  ..., -0.0334,  0.0852, -0.0953],
        [-0.0278, -0.0285, -0.0777,  ..., -0.0334,  0.0852, -0.0953],
        [-0.0278, -0.0285, -0.0777,  ..., -0.0334,  0.0852, -0.0953],
        ...,
        [-0.0278, -0.0285, -0.0777,  ..., -0.0334,  0.0852, -0.0953],
        [-0.0278, -0.0285, -0.0777,  ..., -0.0334,  0.0852, -0.0953],
        [-0.0278, -0.0285, -0.0777,  ..., -0.0334,  0.0852, -0.0953]],
       device='cuda:0')
Computed C_score: tensor([0.8236, 0.6063, 0.6084, 0.7558, 0.7276, 0.6575, 0.5266, 0.7607, 0.6527,
        0.7071, 0.8442, 0.7914, 0.6971, 0.7210, 0.6720, 0.7928, 0.6156, 0.3351,
        0.8341, 0.8379, 0.7453, 0.5328, 0.8053, 0.8372, 0.7098, 0.7002, 0.6629,
        0.5965, 0.8677, 0.7374, 0.7233, 0.6827, 0.6123, 0.6844, 0.4165, 0.6401,
        0.7194, 0.6851, 0.8645, 0.7766, 0.6623, 0.5091, 0.8214, 0.7674, 0.7129,
        0.7278, 0.6061, 0.8043, 0.7618, 0.7646, 0.7535, 0.7775, 0.7569, 0.8675,
        0.7406, 0.8476, 0.8131, 0.7397, 0.7438, 0.6974, 0.6580, 0.8233, 0.5824,
        0.8383, 0.7333, 0.8013, 0.6903, 0.7962, 0.7858, 0.6954, 0.7943, 0.7938,
        0.8035, 0.6182, 0.8161, 0.7262, 0.8293, 0.7670, 0.6082, 0.7697, 0.7807,
        0.8333, 0.8100, 0.7500, 0.6535, 0.8157, 0.7501, 0.6353, 0.7132, 0.6806,
        0.8555, 0.7329, 0.6075, 0.6722, 0.7544, 0.7751, 0.6848, 0.7613, 0.6146,
        0.8267, 0.7257, 0.7012, 0.7963, 0.7792, 0.8611, 0.5559, 0.8051, 0.6821,
        0.6927, 0.4921, 0.6823, 0.7059, 0.6784, 0.8453, 0.7211, 0.7714, 0.6835,
        0.6826, 0.7177, 0.7048, 0.6662, 0.7368, 0.8329, 0.4923, 0.7146, 0.5177,
        0.7500, 0.6787, 0.7606, 0.8033, 0.7435, 0.7498, 0.8198, 0.7771, 0.7875,
        0.7964, 0.6744, 0.6690, 0.6647, 0.7269, 0.7984, 0.7648, 0.5949, 0.8536,
        0.6580, 0.8133, 0.7726, 0.7809, 0.4270, 0.7939, 0.6781, 0.7258, 0.8036,
        0.5427, 0.6411, 0.8353, 0.8392, 0.5878, 0.7285, 0.6938, 0.6697, 0.6643,
        0.6788, 0.6947, 0.6949, 0.8405, 0.6111, 0.7566, 0.5465, 0.7233, 0.7759,
        0.7456, 0.6859, 0.7660, 0.8214, 0.8402, 0.7882, 0.6699, 0.6061, 0.4622,
        0.8127, 0.7020, 0.7463, 0.6171, 0.7778, 0.8230, 0.6543, 0.7799, 0.7305,
        0.8232, 0.7923, 0.7169, 0.7131, 0.6525, 0.7222, 0.5848, 0.6489, 0.7357,
        0.7767, 0.7179, 0.8414, 0.8077, 0.3726, 0.6081, 0.6712, 0.8365, 0.8027,
        0.7288, 0.6243, 0.7580, 0.6722, 0.7138, 0.6631, 0.6769, 0.7723, 0.6702,
        0.6786, 0.7219, 0.8412, 0.6907, 0.6470, 0.7530, 0.6943, 0.8860, 0.6070,
        0.7520, 0.6254, 0.8148, 0.6933, 0.7740, 0.6188, 0.6074, 0.7713, 0.6434,
        0.6984, 0.5650, 0.7064, 0.7151, 0.7624, 0.7648, 0.7690, 0.5902, 0.6488,
        0.8270, 0.6218, 0.6016, 0.6863, 0.8230, 0.7033, 0.4433, 0.7786, 0.8378,
        0.7918, 0.7479, 0.5990, 0.7239, 0.6586, 0.6212, 0.7953, 0.7784, 0.8314,
        0.7651, 0.7519, 0.6531, 0.7322, 0.6312, 0.8067, 0.7628, 0.5025, 0.7783,
        0.5589, 0.7968, 0.7688, 0.7380, 0.6369, 0.7887, 0.6761, 0.6891, 0.7702,
        0.7404, 0.7891, 0.7984, 0.6683, 0.6950, 0.7664, 0.6746, 0.7237, 0.7280,
        0.8039, 0.7808, 0.7272, 0.7796, 0.6708, 0.6569, 0.5036, 0.7823, 0.7241,
        0.6730, 0.7567, 0.7491, 0.6715, 0.7912, 0.6219, 0.7114, 0.6338, 0.7394,
        0.9093, 0.8172, 0.7663, 0.7507, 0.7613, 0.6351, 0.7172, 0.8169, 0.7561,
        0.7040, 0.7629, 0.7163, 0.6298, 0.5973, 0.7693, 0.8701, 0.6109, 0.7462,
        0.7898, 0.7066, 0.7179, 0.7049, 0.7803, 0.7795, 0.7745, 0.5669, 0.8514,
        0.7474, 0.6108, 0.6886, 0.6743, 0.7982, 0.7429, 0.8564, 0.7686, 0.7746,
        0.7356, 0.7407, 0.7792, 0.7568, 0.8403, 0.8579, 0.8771, 0.7083, 0.6681,
        0.7554, 0.7714, 0.7267, 0.7839, 0.6737, 0.7629, 0.7463, 0.6804, 0.7699,
        0.5749, 0.8166, 0.7311, 0.6016, 0.8375, 0.7676, 0.6704, 0.6476, 0.6706,
        0.7071, 0.6992, 0.7203, 0.7570, 0.8338, 0.6650, 0.7490, 0.6462, 0.7860,
        0.7076, 0.6013, 0.7224, 0.8413, 0.7160, 0.7311, 0.6821, 0.6771, 0.7029,
        0.5630, 0.6901, 0.7770, 0.6696, 0.6201, 0.7518, 0.6306, 0.6377, 0.6547,
        0.7677, 0.7334, 0.8235, 0.5690, 0.8098, 0.5285, 0.8388, 0.7607, 0.7896,
        0.7476, 0.6615, 0.7585, 0.5692, 0.8101, 0.6421, 0.7991, 0.6381, 0.8469,
        0.7680, 0.7156, 0.6611, 0.6656, 0.7098, 0.7554, 0.7426, 0.8159, 0.6405,
        0.7929, 0.6717, 0.7161, 0.8062, 0.6891, 0.4499, 0.7199, 0.8639, 0.6581,
        0.7099, 0.6611, 0.6600, 0.6020, 0.7253, 0.4900, 0.6868, 0.5342, 0.7368,
        0.7926, 0.8670, 0.7680, 0.8032, 0.4384, 0.7562, 0.8513, 0.7585, 0.6788,
        0.8319, 0.6697, 0.6902, 0.8018, 0.7847, 0.7253, 0.6983, 0.7693, 0.7634,
        0.6313, 0.7109, 0.7507, 0.7869, 0.7538, 0.7106, 0.8735, 0.8354, 0.9141,
        0.7519, 0.7264, 0.7389, 0.6874, 0.7268, 0.7648, 0.7819, 0.7540, 0.7967,
        0.6328, 0.8096, 0.6788, 0.7910, 0.5540, 0.6776, 0.7076, 0.6314, 0.6739,
        0.8208, 0.8378, 0.7014, 0.6715, 0.6385, 0.8367, 0.8220, 0.7789, 0.5906,
        0.7308, 0.7374, 0.7826, 0.7234], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(359.6098, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([499, 1])
Inertia: tensor([103.2166], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([499, 1280])
Centroid_list: tensor([[-0.0447, -0.0573, -0.0785,  ..., -0.0401,  0.0859, -0.2856],
        [-0.0229, -0.0197, -0.0773,  ..., -0.0322,  0.0846, -0.0381],
        [-0.0229, -0.0197, -0.0773,  ..., -0.0322,  0.0846, -0.0381],
        ...,
        [-0.0229, -0.0197, -0.0773,  ..., -0.0322,  0.0846, -0.0381],
        [-0.0229, -0.0197, -0.0773,  ..., -0.0322,  0.0846, -0.0381],
        [-0.0229, -0.0197, -0.0773,  ..., -0.0322,  0.0846, -0.0381]],
       device='cuda:0')
Computed C_score: tensor([0.8536, 0.6449, 0.6249, 0.7938, 0.7386, 0.6528, 0.5320, 0.8020, 0.6494,
        0.8446, 0.8448, 0.8071, 0.7080, 0.7548, 0.7790, 0.8209, 0.6075, 0.3462,
        0.8442, 0.8639, 0.8106, 0.5431, 0.8125, 0.8155, 0.7118, 0.7093, 0.6442,
        0.6291, 0.8944, 0.7393, 0.7359, 0.6870, 0.6466, 0.6784, 0.4041, 0.6236,
        0.7266, 0.7781, 0.8875, 0.7624, 0.6594, 0.5818, 0.8289, 0.7468, 0.6993,
        0.7245, 0.6140, 0.8185, 0.8574, 0.7715, 0.7742, 0.7812, 0.7751, 0.8594,
        0.7775, 0.8598, 0.8198, 0.7558, 0.7787, 0.7389, 0.6640, 0.8461, 0.5879,
        0.8669, 0.7418, 0.8103, 0.7456, 0.8199, 0.7826, 0.7078, 0.8117, 0.7925,
        0.8257, 0.7907, 0.8421, 0.7365, 0.8479, 0.7573, 0.6236, 0.7966, 0.7944,
        0.8516, 0.8460, 0.7576, 0.6513, 0.8202, 0.7628, 0.7795, 0.7785, 0.6942,
        0.8790, 0.8086, 0.6236, 0.6724, 0.7762, 0.7734, 0.6837, 0.7855, 0.6254,
        0.8311, 0.7401, 0.7241, 0.7946, 0.7602, 0.8821, 0.5562, 0.8094, 0.6985,
        0.6712, 0.7094, 0.6935, 0.6982, 0.8100, 0.8368, 0.7462, 0.8893, 0.7421,
        0.6782, 0.7129, 0.7150, 0.6731, 0.7524, 0.8627, 0.4747, 0.7318, 0.5031,
        0.7817, 0.6703, 0.7907, 0.8514, 0.7513, 0.8141, 0.8151, 0.7565, 0.7796,
        0.7878, 0.6763, 0.6655, 0.6638, 0.7531, 0.7781, 0.7956, 0.5787, 0.8724,
        0.6724, 0.8408, 0.7541, 0.8562, 0.4789, 0.8207, 0.6989, 0.7141, 0.8210,
        0.5508, 0.6294, 0.8510, 0.8492, 0.6163, 0.7454, 0.6940, 0.7886, 0.6714,
        0.6790, 0.6931, 0.6810, 0.8601, 0.6241, 0.7809, 0.6172, 0.7560, 0.7721,
        0.7452, 0.6930, 0.7628, 0.8468, 0.8192, 0.7828, 0.6956, 0.6169, 0.5259,
        0.8288, 0.7166, 0.7627, 0.6402, 0.7678, 0.8478, 0.7561, 0.8023, 0.7443,
        0.8157, 0.7772, 0.7040, 0.7254, 0.7527, 0.7025, 0.6067, 0.6642, 0.7408,
        0.7620, 0.8344, 0.8462, 0.8003, 0.3761, 0.5925, 0.6756, 0.8803, 0.8220,
        0.7291, 0.6305, 0.8028, 0.6526, 0.7509, 0.7754, 0.6774, 0.8483, 0.8003,
        0.6971, 0.7167, 0.8672, 0.7184, 0.6436, 0.7617, 0.7109, 0.8743, 0.5928,
        0.7581, 0.6246, 0.8285, 0.7090, 0.8238, 0.6337, 0.6364, 0.7840, 0.6708,
        0.7057, 0.5838, 0.6825, 0.7197, 0.7913, 0.7876, 0.7506, 0.5714, 0.6460,
        0.8296, 0.6029, 0.6585, 0.7057, 0.8364, 0.7071, 0.6614, 0.7729, 0.8287,
        0.7774, 0.7614, 0.5909, 0.8749, 0.6453, 0.6187, 0.8136, 0.8091, 0.8162,
        0.8171, 0.7389, 0.6706, 0.8353, 0.6203, 0.8219, 0.7942, 0.5388, 0.8833,
        0.5458, 0.8086, 0.7826, 0.7305, 0.6346, 0.8533, 0.6997, 0.6937, 0.8590,
        0.7615, 0.7871, 0.8235, 0.8430, 0.7074, 0.7708, 0.6730, 0.7065, 0.7291,
        0.8164, 0.7898, 0.7412, 0.7908, 0.6822, 0.6821, 0.5118, 0.7842, 0.7215,
        0.7814, 0.7536, 0.7613, 0.7442, 0.8069, 0.6322, 0.7071, 0.6540, 0.7700,
        0.9067, 0.8394, 0.7640, 0.7757, 0.7849, 0.6206, 0.7118, 0.8803, 0.7578,
        0.7025, 0.8795, 0.7039, 0.6821, 0.7403, 0.7877, 0.8514, 0.6018, 0.7400,
        0.8097, 0.6984, 0.7071, 0.6874, 0.7916, 0.8174, 0.7496, 0.5749, 0.8579,
        0.7442, 0.6370, 0.6780, 0.6915, 0.8473, 0.7586, 0.8779, 0.8539, 0.8124,
        0.8242, 0.7424, 0.8889, 0.7928, 0.8699, 0.8737, 0.8998, 0.7042, 0.6695,
        0.8405, 0.7684, 0.7480, 0.7593, 0.7142, 0.8805, 0.7634, 0.6864, 0.7451,
        0.5694, 0.8509, 0.7358, 0.6243, 0.8678, 0.7387, 0.6617, 0.6742, 0.7078,
        0.7038, 0.6943, 0.7160, 0.7532, 0.8441, 0.6575, 0.7377, 0.6351, 0.8087,
        0.7197, 0.5946, 0.7176, 0.8646, 0.7098, 0.7441, 0.6748, 0.6816, 0.7250,
        0.5769, 0.7036, 0.7669, 0.6927, 0.5756, 0.7383, 0.6305, 0.6416, 0.6617,
        0.7969, 0.7198, 0.8327, 0.5766, 0.8373, 0.6081, 0.8274, 0.7837, 0.8082,
        0.7564, 0.6885, 0.7825, 0.7155, 0.8103, 0.6553, 0.7994, 0.6306, 0.8397,
        0.7587, 0.7262, 0.6614, 0.6487, 0.7143, 0.7285, 0.7461, 0.8340, 0.6478,
        0.7820, 0.7022, 0.7418, 0.7927, 0.6953, 0.4463, 0.7115, 0.8710, 0.6653,
        0.6985, 0.6461, 0.6579, 0.6913, 0.8397, 0.6802, 0.7154, 0.5589, 0.8635,
        0.8570, 0.8602, 0.7617, 0.8230, 0.6352, 0.7296, 0.8827, 0.7526, 0.7032,
        0.8028, 0.7233, 0.6926, 0.7867, 0.8077, 0.7445, 0.7247, 0.7521, 0.7876,
        0.6592, 0.7308, 0.7569, 0.8468, 0.7628, 0.8708, 0.8953, 0.8536, 0.9145,
        0.7850, 0.7505, 0.7328, 0.6750, 0.7421, 0.7545, 0.7912, 0.8037, 0.7973,
        0.6395, 0.8049, 0.7149, 0.8020, 0.7497, 0.6933, 0.7035, 0.6297, 0.6927,
        0.7992, 0.8132, 0.7032, 0.6905, 0.6572, 0.8632, 0.8091, 0.7558, 0.6013,
        0.7188, 0.7635, 0.8054, 0.7427], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(369.1887, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([499, 1])
Inertia: tensor([107.3968], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([499, 1280])
Centroid_list: tensor([[-0.0485, -0.0612, -0.0785,  ..., -0.0415,  0.0862, -0.2798],
        [-0.0246, -0.0060, -0.0638,  ..., -0.0334,  0.0795, -0.0559],
        [-0.0207, -0.0362, -0.0925,  ..., -0.0310,  0.0904, -0.0450],
        ...,
        [-0.0246, -0.0060, -0.0638,  ..., -0.0334,  0.0795, -0.0559],
        [-0.0246, -0.0060, -0.0638,  ..., -0.0334,  0.0795, -0.0559],
        [-0.0246, -0.0060, -0.0638,  ..., -0.0334,  0.0795, -0.0559]],
       device='cuda:0')
Computed C_score: tensor([0.8454, 0.6384, 0.6204, 0.7879, 0.7782, 0.6832, 0.5651, 0.7842, 0.6356,
        0.8492, 0.8475, 0.8236, 0.6927, 0.7652, 0.7820, 0.8179, 0.6105, 0.3389,
        0.8469, 0.8551, 0.8107, 0.5793, 0.8338, 0.8057, 0.6959, 0.7563, 0.6491,
        0.6251, 0.8929, 0.7446, 0.7406, 0.6889, 0.6399, 0.6658, 0.4994, 0.6509,
        0.7638, 0.7779, 0.8867, 0.7620, 0.6587, 0.5840, 0.8260, 0.7490, 0.7548,
        0.7282, 0.6480, 0.8648, 0.8583, 0.7895, 0.7750, 0.7908, 0.8032, 0.8590,
        0.7691, 0.8580, 0.8098, 0.8099, 0.7959, 0.7585, 0.6714, 0.8400, 0.6310,
        0.8644, 0.7307, 0.8040, 0.7576, 0.8427, 0.8117, 0.7359, 0.8135, 0.7956,
        0.8207, 0.7986, 0.8209, 0.7446, 0.8476, 0.7564, 0.6314, 0.7809, 0.7777,
        0.8463, 0.8434, 0.7533, 0.6504, 0.8210, 0.7938, 0.7836, 0.7836, 0.7102,
        0.8759, 0.8109, 0.6346, 0.6860, 0.7662, 0.8015, 0.7183, 0.7983, 0.6462,
        0.8134, 0.7328, 0.7279, 0.7859, 0.7596, 0.8819, 0.5509, 0.7971, 0.7201,
        0.6712, 0.7283, 0.7601, 0.7299, 0.8226, 0.8251, 0.7428, 0.8922, 0.7449,
        0.7079, 0.6990, 0.7036, 0.6791, 0.7454, 0.8609, 0.5034, 0.7522, 0.5356,
        0.8251, 0.6751, 0.7799, 0.8488, 0.7315, 0.8085, 0.8282, 0.7578, 0.7892,
        0.8027, 0.6785, 0.6946, 0.6944, 0.7507, 0.7789, 0.7897, 0.6386, 0.8709,
        0.6854, 0.8395, 0.7839, 0.8568, 0.4819, 0.8182, 0.7055, 0.7142, 0.8085,
        0.5847, 0.6677, 0.8600, 0.8519, 0.6131, 0.7691, 0.6993, 0.7948, 0.7018,
        0.6661, 0.7209, 0.6818, 0.8591, 0.6738, 0.7988, 0.6203, 0.7985, 0.7756,
        0.7378, 0.6958, 0.7554, 0.8436, 0.8207, 0.7835, 0.7103, 0.6140, 0.5312,
        0.8657, 0.7263, 0.7814, 0.6372, 0.7880, 0.8465, 0.7736, 0.7857, 0.7805,
        0.8185, 0.7777, 0.7620, 0.7403, 0.7602, 0.7037, 0.6468, 0.6445, 0.7412,
        0.7644, 0.8426, 0.8475, 0.7997, 0.4506, 0.5901, 0.6776, 0.8740, 0.8197,
        0.7327, 0.6989, 0.8011, 0.6525, 0.7536, 0.7798, 0.6836, 0.8479, 0.8050,
        0.6907, 0.7247, 0.8606, 0.7009, 0.6715, 0.7720, 0.6867, 0.8722, 0.5984,
        0.7508, 0.6731, 0.8277, 0.7273, 0.8155, 0.6373, 0.6663, 0.7682, 0.7411,
        0.7025, 0.6364, 0.6842, 0.7236, 0.7872, 0.8108, 0.8076, 0.5983, 0.6479,
        0.8188, 0.6449, 0.6536, 0.7088, 0.8619, 0.7392, 0.6825, 0.7908, 0.8296,
        0.7831, 0.7847, 0.5885, 0.8841, 0.6715, 0.6599, 0.8341, 0.8208, 0.8428,
        0.8098, 0.7640, 0.6622, 0.8319, 0.6689, 0.8261, 0.7880, 0.5373, 0.8846,
        0.5328, 0.8008, 0.7791, 0.7402, 0.6792, 0.8508, 0.6888, 0.7165, 0.8590,
        0.7685, 0.7909, 0.8325, 0.8493, 0.7281, 0.7623, 0.6877, 0.7006, 0.7247,
        0.8131, 0.8316, 0.7540, 0.8173, 0.7490, 0.7440, 0.5278, 0.7844, 0.7627,
        0.7899, 0.7572, 0.7928, 0.7430, 0.8230, 0.6663, 0.7264, 0.6553, 0.7538,
        0.9049, 0.8566, 0.7717, 0.7846, 0.8055, 0.6278, 0.7229, 0.8759, 0.7725,
        0.6867, 0.8845, 0.7359, 0.6841, 0.7486, 0.8369, 0.8518, 0.6208, 0.7846,
        0.8064, 0.7217, 0.7326, 0.7488, 0.8477, 0.7930, 0.7489, 0.5780, 0.8699,
        0.7448, 0.6507, 0.6796, 0.7102, 0.8425, 0.7624, 0.8762, 0.8528, 0.8076,
        0.8293, 0.7529, 0.8881, 0.8159, 0.8683, 0.8722, 0.8985, 0.7075, 0.6729,
        0.8417, 0.7729, 0.7376, 0.7602, 0.7135, 0.8821, 0.7922, 0.6893, 0.7429,
        0.5637, 0.8486, 0.7488, 0.6259, 0.8643, 0.7381, 0.7507, 0.6922, 0.7100,
        0.7541, 0.7278, 0.7424, 0.7493, 0.8329, 0.6891, 0.7304, 0.6557, 0.8378,
        0.7175, 0.6378, 0.7480, 0.8536, 0.7127, 0.7448, 0.6798, 0.6938, 0.7551,
        0.6091, 0.6901, 0.7994, 0.7139, 0.6015, 0.7638, 0.6292, 0.6410, 0.6868,
        0.7941, 0.7184, 0.8228, 0.5816, 0.8289, 0.6147, 0.8221, 0.8105, 0.8212,
        0.7508, 0.7006, 0.7772, 0.7266, 0.8504, 0.6786, 0.7979, 0.6313, 0.8423,
        0.7892, 0.7109, 0.7108, 0.6478, 0.7135, 0.7278, 0.7462, 0.8184, 0.6392,
        0.8073, 0.6990, 0.7552, 0.7959, 0.7122, 0.4894, 0.7130, 0.8602, 0.6759,
        0.7019, 0.6763, 0.6917, 0.7059, 0.8428, 0.6958, 0.7141, 0.5397, 0.8738,
        0.8505, 0.8489, 0.7622, 0.8244, 0.6489, 0.7400, 0.8808, 0.7696, 0.6958,
        0.8042, 0.7255, 0.7180, 0.7885, 0.8129, 0.7289, 0.7312, 0.7544, 0.7916,
        0.7118, 0.7229, 0.7816, 0.8387, 0.7745, 0.8790, 0.8936, 0.8476, 0.9146,
        0.8163, 0.7494, 0.7359, 0.6650, 0.8039, 0.7580, 0.7940, 0.7985, 0.7992,
        0.6847, 0.8045, 0.7081, 0.8117, 0.7684, 0.7368, 0.7589, 0.6466, 0.7229,
        0.8022, 0.8506, 0.7191, 0.6845, 0.6828, 0.8617, 0.8129, 0.7508, 0.6384,
        0.7436, 0.7568, 0.8243, 0.7668], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(374.0393, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([499, 1])
Inertia: tensor([110.4120], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([499, 1280])
Centroid_list: tensor([[-0.0528, -0.0615, -0.0793,  ..., -0.0396,  0.0868, -0.2659],
        [-0.0279, -0.0038, -0.0682,  ..., -0.0323,  0.0771,  0.0044],
        [-0.0220, -0.0380, -0.0664,  ..., -0.0458,  0.0812, -0.3579],
        ...,
        [-0.0279, -0.0038, -0.0682,  ..., -0.0323,  0.0771,  0.0044],
        [-0.0279, -0.0038, -0.0682,  ..., -0.0323,  0.0771,  0.0044],
        [-0.0279, -0.0038, -0.0682,  ..., -0.0323,  0.0771,  0.0044]],
       device='cuda:0')
Computed C_score: tensor([0.8394, 0.6546, 0.6317, 0.7818, 0.7934, 0.6845, 0.5382, 0.7897, 0.6322,
        0.8480, 0.8683, 0.8391, 0.6989, 0.7392, 0.7843, 0.8043, 0.6428, 0.3833,
        0.8485, 0.8405, 0.8205, 0.6300, 0.8321, 0.7931, 0.7019, 0.7561, 0.7308,
        0.6314, 0.9722, 0.7439, 0.7435, 0.6647, 0.6572, 0.6563, 0.5350, 0.6526,
        0.7773, 0.7751, 0.9300, 0.7161, 0.6534, 0.5783, 0.8722, 0.8182, 0.7851,
        0.7408, 0.6320, 0.8617, 0.8570, 0.7997, 0.7831, 0.7825, 0.8171, 0.7966,
        0.7895, 0.7753, 0.8119, 0.8083, 0.8019, 0.7784, 0.6956, 0.8380, 0.6231,
        0.9622, 0.7449, 0.8112, 0.7602, 0.8540, 0.8111, 0.7476, 0.7855, 0.8194,
        0.8235, 0.8051, 0.8301, 0.7116, 0.8002, 0.7884, 0.6589, 0.7837, 0.7691,
        0.8495, 0.9387, 0.8013, 0.7574, 0.8248, 0.8005, 0.7714, 0.7767, 0.7654,
        0.9416, 0.8232, 0.6446, 0.6731, 0.7664, 0.7941, 0.7165, 0.7936, 0.6390,
        0.8197, 0.7148, 0.7578, 0.7807, 0.7765, 0.9386, 0.6120, 0.7960, 0.7402,
        0.7538, 0.7490, 0.7734, 0.7562, 0.8255, 0.8297, 0.7551, 0.8877, 0.7581,
        0.6969, 0.7405, 0.7326, 0.6816, 0.7522, 0.9646, 0.4958, 0.7443, 0.5731,
        0.8377, 0.6503, 0.7828, 0.8467, 0.7468, 0.8026, 0.8308, 0.8254, 0.7752,
        0.8046, 0.6495, 0.7216, 0.6581, 0.8643, 0.7986, 0.7923, 0.6636, 0.9191,
        0.7031, 0.8483, 0.7967, 0.8565, 0.4849, 0.9376, 0.7123, 0.7084, 0.7974,
        0.6199, 0.7136, 0.8487, 0.8390, 0.6541, 0.7564, 0.6998, 0.8004, 0.7098,
        0.6822, 0.7159, 0.7536, 0.9290, 0.7304, 0.8108, 0.6152, 0.7957, 0.7785,
        0.7623, 0.6987, 0.7512, 0.9464, 0.8301, 0.7699, 0.6948, 0.6176, 0.5404,
        0.8707, 0.7680, 0.7850, 0.6265, 0.7832, 0.9360, 0.7789, 0.7972, 0.7769,
        0.8314, 0.7641, 0.7474, 0.7588, 0.7697, 0.7447, 0.6559, 0.6512, 0.7494,
        0.7749, 0.8521, 0.8013, 0.8061, 0.4727, 0.5966, 0.6798, 0.8712, 0.8310,
        0.7874, 0.6757, 0.8053, 0.6744, 0.7609, 0.7787, 0.6641, 0.8530, 0.8106,
        0.6983, 0.8275, 0.8518, 0.7382, 0.6689, 0.7537, 0.7467, 0.8715, 0.6034,
        0.7257, 0.6613, 0.8576, 0.7491, 0.8253, 0.6396, 0.6927, 0.7808, 0.7854,
        0.6907, 0.6354, 0.7172, 0.7331, 0.7773, 0.8050, 0.7950, 0.6603, 0.5994,
        0.7933, 0.6744, 0.6485, 0.7315, 0.8543, 0.7687, 0.7012, 0.7919, 0.8465,
        0.7981, 0.7974, 0.6252, 0.8862, 0.7164, 0.6728, 0.8413, 0.8338, 0.8425,
        0.7908, 0.7726, 0.6525, 0.8264, 0.6695, 0.8202, 0.7969, 0.5703, 0.8906,
        0.5432, 0.7951, 0.7871, 0.7481, 0.6702, 0.8534, 0.7381, 0.7383, 0.8592,
        0.7760, 0.7968, 0.8491, 0.8500, 0.7171, 0.7533, 0.7176, 0.7296, 0.7314,
        0.8629, 0.8251, 0.7727, 0.8087, 0.7471, 0.7394, 0.5189, 0.7553, 0.7365,
        0.8120, 0.7597, 0.7929, 0.7372, 0.8277, 0.6826, 0.8117, 0.6728, 0.7551,
        0.8721, 0.8538, 0.7610, 0.8043, 0.8017, 0.6213, 0.8039, 0.8686, 0.7690,
        0.7293, 0.8890, 0.7256, 0.6898, 0.7670, 0.8474, 0.8736, 0.6844, 0.7715,
        0.8103, 0.7598, 0.7343, 0.7650, 0.8427, 0.8112, 0.7292, 0.5951, 0.8594,
        0.7347, 0.6711, 0.6747, 0.7070, 0.8320, 0.7559, 0.9535, 0.8470, 0.8218,
        0.8274, 0.7454, 0.8874, 0.8098, 0.9661, 0.9498, 0.9434, 0.7001, 0.7177,
        0.8385, 0.7850, 0.7558, 0.7572, 0.7184, 0.8770, 0.7777, 0.6836, 0.6447,
        0.5594, 0.9247, 0.7337, 0.6260, 0.9545, 0.7522, 0.7758, 0.7247, 0.7197,
        0.7480, 0.7307, 0.7277, 0.7924, 0.8261, 0.6691, 0.7242, 0.6567, 0.8430,
        0.6904, 0.6461, 0.7374, 0.8819, 0.7279, 0.7547, 0.7517, 0.7173, 0.7605,
        0.6197, 0.7320, 0.7876, 0.7178, 0.7081, 0.7358, 0.6639, 0.7089, 0.6830,
        0.8173, 0.7640, 0.8091, 0.5750, 0.8120, 0.6302, 0.8227, 0.8226, 0.8204,
        0.7401, 0.7124, 0.7813, 0.7500, 0.8535, 0.6779, 0.7345, 0.6858, 0.8149,
        0.7792, 0.7566, 0.7364, 0.6745, 0.7459, 0.7669, 0.7440, 0.8168, 0.6140,
        0.7997, 0.7066, 0.7480, 0.8324, 0.6926, 0.5142, 0.7271, 0.8519, 0.6638,
        0.7144, 0.7152, 0.7227, 0.6937, 0.8458, 0.7195, 0.7227, 0.5631, 0.8870,
        0.8417, 0.8528, 0.7598, 0.7538, 0.6618, 0.8173, 0.9494, 0.7725, 0.7374,
        0.8280, 0.7431, 0.6878, 0.7847, 0.8010, 0.7376, 0.7253, 0.8228, 0.8272,
        0.7240, 0.7257, 0.8000, 0.8325, 0.7719, 0.8833, 0.9505, 0.8407, 0.8563,
        0.8305, 0.7562, 0.8192, 0.6827, 0.8075, 0.8076, 0.7934, 0.7895, 0.8045,
        0.6581, 0.8086, 0.7223, 0.8077, 0.7844, 0.7114, 0.7207, 0.6642, 0.7087,
        0.8034, 0.8378, 0.6948, 0.6916, 0.7320, 0.9486, 0.8187, 0.7675, 0.6157,
        0.7468, 0.7644, 0.8300, 0.7825], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(379.2749, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0019, 0.0058, 0.0117, 0.0174], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([293, 1280])
S-Scores: tensor([0.7166, 2.0766, 4.0758, 6.7718], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([293, 1])
Inertia: tensor([148.9854], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([293, 1280])
Centroid_list: tensor([[-0.0257, -0.0457, -0.0334,  ..., -0.0711,  0.0628, -0.2967],
        [-0.0257, -0.0457, -0.0334,  ..., -0.0711,  0.0628, -0.2967],
        [-0.0257, -0.0457, -0.0334,  ..., -0.0711,  0.0628, -0.2967],
        ...,
        [-0.0576, -0.0774, -0.0634,  ..., -0.0692,  0.0763, -0.3099],
        [-0.0576, -0.0774, -0.0634,  ..., -0.0692,  0.0763, -0.3099],
        [-0.0257, -0.0457, -0.0334,  ..., -0.0711,  0.0628, -0.2967]],
       device='cuda:0')
Computed C_score: tensor([0.7748, 0.7739, 0.8056, 0.6800, 0.8018, 0.5527, 0.7623, 0.6249, 0.7715,
        0.6151, 0.6895, 0.5501, 0.6739, 0.7438, 0.8480, 0.7409, 0.7144, 0.7560,
        0.7573, 0.5379, 0.6874, 0.7972, 0.6942, 0.7044, 0.8072, 0.6165, 0.7198,
        0.7080, 0.8118, 0.6221, 0.7737, 0.7038, 0.6131, 0.7179, 0.4467, 0.8330,
        0.6663, 0.5993, 0.7765, 0.7954, 0.6923, 0.7130, 0.6950, 0.7061, 0.6570,
        0.7796, 0.7041, 0.6247, 0.8078, 0.5981, 0.7738, 0.7824, 0.7336, 0.6547,
        0.6557, 0.8345, 0.5912, 0.6834, 0.7859, 0.6461, 0.6796, 0.6545, 0.6505,
        0.8260, 0.6337, 0.5903, 0.8071, 0.7517, 0.4443, 0.7172, 0.7279, 0.7500,
        0.5427, 0.8195, 0.7442, 0.6950, 0.8288, 0.6929, 0.8287, 0.7121, 0.7119,
        0.6488, 0.5745, 0.7315, 0.7842, 0.6992, 0.6321, 0.7998, 0.8025, 0.7110,
        0.6867, 0.6379, 0.7559, 0.7754, 0.5685, 0.6882, 0.7793, 0.7514, 0.5210,
        0.7588, 0.8431, 0.7284, 0.7217, 0.6608, 0.5981, 0.8581, 0.7508, 0.6543,
        0.6293, 0.7907, 0.7296, 0.7329, 0.7471, 0.6831, 0.6037, 0.7447, 0.6854,
        0.5138, 0.7154, 0.6968, 0.8116, 0.6114, 0.7015, 0.5205, 0.6503, 0.7786,
        0.7433, 0.7707, 0.8595, 0.7938, 0.6725, 0.6897, 0.5190, 0.7600, 0.8003,
        0.8014, 0.6843, 0.8355, 0.6201, 0.8074, 0.7379, 0.8057, 0.6548, 0.5850,
        0.7498, 0.7548, 0.6583, 0.7430, 0.7067, 0.5838, 0.8114, 0.7691, 0.8293,
        0.7188, 0.5858, 0.7777, 0.7904, 0.7956, 0.5082, 0.8581, 0.6942, 0.6270,
        0.8083, 0.6898, 0.6545, 0.6773, 0.7503, 0.5222, 0.5615, 0.6712, 0.6130,
        0.7522, 0.6245, 0.7265, 0.7833, 0.8156, 0.5923, 0.7591, 0.7379, 0.5587,
        0.7292, 0.5996, 0.7220, 0.6750, 0.7432, 0.5935, 0.7505, 0.6331, 0.7990,
        0.8118, 0.7560, 0.6946, 0.7013, 0.8464, 0.7103, 0.6718, 0.7502, 0.7331,
        0.8355, 0.7930, 0.3399, 0.6383, 0.7933, 0.7717, 0.7367, 0.6205, 0.7507,
        0.7311, 0.6090, 0.5761, 0.6916, 0.8900, 0.7568, 0.7547, 0.6234, 0.7293,
        0.7135, 0.5670, 0.6672, 0.5857, 0.6447, 0.8335, 0.6424, 0.7850, 0.5880,
        0.6393, 0.7045, 0.7889, 0.8679, 0.6959, 0.6736, 0.7073, 0.7787, 0.8048,
        0.6853, 0.5208, 0.6526, 0.6054, 0.8215, 0.7078, 0.5916, 0.7196, 0.7886,
        0.8226, 0.7038, 0.7577, 0.4730, 0.7818, 0.8231, 0.6459, 0.7967, 0.7237,
        0.7751, 0.6633, 0.7764, 0.6728, 0.7862, 0.4587, 0.7557, 0.4859, 0.5101,
        0.7032, 0.8122, 0.6424, 0.7414, 0.6039, 0.6338, 0.6795, 0.7178, 0.7302,
        0.5966, 0.7734, 0.8014, 0.5775, 0.5888, 0.7436, 0.5453, 0.6596, 0.7234,
        0.8998, 0.6331, 0.7980, 0.6066, 0.7419, 0.6190, 0.6653, 0.6603, 0.6671,
        0.5664, 0.7551, 0.7102, 0.7846, 0.7409], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(205.9443, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([293, 1])
Inertia: tensor([156.4771], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([293, 1280])
Centroid_list: tensor([[-0.0251, -0.0425, -0.0319,  ..., -0.0718,  0.0625, -0.2379],
        [-0.0251, -0.0425, -0.0319,  ..., -0.0718,  0.0625, -0.2379],
        [-0.0251, -0.0425, -0.0319,  ..., -0.0718,  0.0625, -0.2379],
        ...,
        [-0.0421, -0.0681, -0.0656,  ..., -0.0663,  0.0818, -0.2439],
        [-0.0421, -0.0681, -0.0656,  ..., -0.0663,  0.0818, -0.2439],
        [-0.0614, -0.0817, -0.0556,  ..., -0.0706,  0.0687, -0.4757]],
       device='cuda:0')
Computed C_score: tensor([0.7590, 0.7576, 0.8087, 0.6812, 0.8093, 0.5568, 0.7724, 0.6049, 0.8122,
        0.6307, 0.7699, 0.5569, 0.6536, 0.7598, 0.9090, 0.7334, 0.7120, 0.8696,
        0.7604, 0.5272, 0.6933, 0.8016, 0.7609, 0.7065, 0.9029, 0.5989, 0.7147,
        0.8046, 0.7729, 0.6338, 0.7670, 0.7101, 0.6095, 0.7859, 0.4456, 0.8468,
        0.6706, 0.7266, 0.7738, 0.8146, 0.6648, 0.7027, 0.7221, 0.7058, 0.6487,
        0.8610, 0.7851, 0.6984, 0.8119, 0.5863, 0.8698, 0.8231, 0.7980, 0.6393,
        0.6244, 0.8703, 0.5981, 0.6767, 0.8000, 0.6520, 0.7324, 0.6482, 0.6368,
        0.8617, 0.6321, 0.5773, 0.8054, 0.8276, 0.4527, 0.7209, 0.7147, 0.7600,
        0.6379, 0.8237, 0.8656, 0.7598, 0.8459, 0.6967, 0.8465, 0.8026, 0.7176,
        0.8215, 0.5611, 0.7228, 0.7402, 0.7288, 0.6184, 0.8644, 0.8032, 0.6986,
        0.6785, 0.6332, 0.8220, 0.7937, 0.5699, 0.6813, 0.8812, 0.7601, 0.5373,
        0.7651, 0.8299, 0.7403, 0.7546, 0.6665, 0.5967, 0.8515, 0.8189, 0.6891,
        0.7935, 0.8029, 0.7375, 0.7786, 0.7466, 0.6895, 0.6143, 0.8032, 0.8322,
        0.5011, 0.8275, 0.8021, 0.8521, 0.6683, 0.7394, 0.5422, 0.6530, 0.7875,
        0.7559, 0.8929, 0.7948, 0.8269, 0.6967, 0.6685, 0.5374, 0.7571, 0.7481,
        0.8777, 0.8515, 0.8473, 0.7214, 0.8026, 0.8480, 0.8290, 0.6704, 0.5832,
        0.7998, 0.7444, 0.6704, 0.6948, 0.7021, 0.6045, 0.8811, 0.8277, 0.8923,
        0.7262, 0.5866, 0.8705, 0.7799, 0.8924, 0.5296, 0.8302, 0.6808, 0.6283,
        0.8398, 0.6996, 0.6665, 0.8299, 0.7422, 0.5012, 0.6144, 0.6726, 0.6879,
        0.7923, 0.6341, 0.7331, 0.7817, 0.7946, 0.5845, 0.7630, 0.7516, 0.5425,
        0.7241, 0.5996, 0.7206, 0.6858, 0.7465, 0.6017, 0.7393, 0.6576, 0.8066,
        0.9026, 0.7491, 0.6713, 0.7190, 0.7920, 0.7286, 0.6655, 0.8635, 0.7907,
        0.9049, 0.7941, 0.4055, 0.6386, 0.8021, 0.8683, 0.7332, 0.6152, 0.7535,
        0.7501, 0.6056, 0.5849, 0.6806, 0.8252, 0.7559, 0.7735, 0.6305, 0.7254,
        0.8027, 0.5591, 0.8043, 0.6181, 0.6264, 0.9067, 0.6475, 0.7704, 0.5859,
        0.6522, 0.7559, 0.8066, 0.8553, 0.7020, 0.7041, 0.6883, 0.7895, 0.8006,
        0.7673, 0.5353, 0.8144, 0.5857, 0.8209, 0.7265, 0.6086, 0.7338, 0.8713,
        0.8385, 0.8202, 0.7728, 0.4583, 0.7617, 0.8310, 0.7064, 0.8175, 0.7294,
        0.8996, 0.7306, 0.8884, 0.6808, 0.8421, 0.4224, 0.7500, 0.5084, 0.4977,
        0.7077, 0.8227, 0.6599, 0.6895, 0.6130, 0.6325, 0.6734, 0.7698, 0.7613,
        0.5975, 0.9018, 0.8463, 0.5637, 0.5789, 0.7482, 0.6480, 0.6704, 0.7306,
        0.8915, 0.6479, 0.8781, 0.6091, 0.7466, 0.6080, 0.6739, 0.6601, 0.6577,
        0.5795, 0.7649, 0.7785, 0.7652, 0.7399], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(212.4954, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([293, 1])
Inertia: tensor([159.6247], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([293, 1280])
Centroid_list: tensor([[-0.0320, -0.0355, -0.0166,  ..., -0.0832,  0.0614, -0.2503],
        [-0.0320, -0.0355, -0.0166,  ..., -0.0832,  0.0614, -0.2503],
        [-0.0320, -0.0355, -0.0166,  ..., -0.0832,  0.0614, -0.2503],
        ...,
        [-0.0417, -0.0669, -0.0658,  ..., -0.0618,  0.0834, -0.2003],
        [-0.0417, -0.0669, -0.0658,  ..., -0.0618,  0.0834, -0.2003],
        [-0.0320, -0.0355, -0.0166,  ..., -0.0832,  0.0614, -0.2503]],
       device='cuda:0')
Computed C_score: tensor([0.7496, 0.7395, 0.8265, 0.6965, 0.8275, 0.6346, 0.8233, 0.7139, 0.8086,
        0.6257, 0.7919, 0.5390, 0.6786, 0.7369, 0.9151, 0.7089, 0.7633, 0.8903,
        0.7486, 0.5855, 0.6711, 0.8455, 0.7487, 0.7159, 0.9134, 0.6943, 0.7671,
        0.8183, 0.7799, 0.6210, 0.7746, 0.6957, 0.6294, 0.7581, 0.4798, 0.8699,
        0.7435, 0.7256, 0.7557, 0.8171, 0.6758, 0.6969, 0.7124, 0.7448, 0.6885,
        0.8628, 0.7999, 0.6698, 0.8549, 0.6655, 0.8830, 0.8460, 0.7800, 0.7173,
        0.6222, 0.8968, 0.5934, 0.7031, 0.7785, 0.6808, 0.7139, 0.7026, 0.6718,
        0.8861, 0.6256, 0.6908, 0.8291, 0.8324, 0.4755, 0.6831, 0.7386, 0.7522,
        0.6543, 0.8543, 0.8885, 0.7765, 0.8707, 0.7429, 0.8313, 0.7875, 0.7035,
        0.8169, 0.6164, 0.7998, 0.7413, 0.7430, 0.6974, 0.8852, 0.7856, 0.7278,
        0.7149, 0.6272, 0.8076, 0.8131, 0.5768, 0.7055, 0.8983, 0.8182, 0.5350,
        0.7638, 0.8388, 0.7676, 0.7255, 0.6558, 0.5831, 0.8675, 0.8281, 0.6507,
        0.7931, 0.8402, 0.7297, 0.7602, 0.7499, 0.6946, 0.6267, 0.8265, 0.8370,
        0.5506, 0.8385, 0.8228, 0.8720, 0.6559, 0.7533, 0.5351, 0.7369, 0.8086,
        0.7915, 0.9166, 0.8279, 0.8396, 0.6859, 0.7081, 0.5412, 0.8020, 0.7676,
        0.8607, 0.8460, 0.8681, 0.7006, 0.7748, 0.8554, 0.8079, 0.7231, 0.6076,
        0.7986, 0.7243, 0.6785, 0.7029, 0.7651, 0.6315, 0.8935, 0.8369, 0.9080,
        0.7593, 0.5836, 0.8833, 0.7723, 0.9092, 0.4992, 0.8537, 0.7150, 0.6418,
        0.8302, 0.7191, 0.7229, 0.8340, 0.7657, 0.6074, 0.5725, 0.6844, 0.6933,
        0.8263, 0.6122, 0.7405, 0.7804, 0.8228, 0.6421, 0.7531, 0.7719, 0.6703,
        0.6674, 0.6953, 0.7380, 0.6862, 0.7778, 0.6149, 0.7792, 0.6535, 0.7823,
        0.9165, 0.7708, 0.7379, 0.7484, 0.7886, 0.7820, 0.7303, 0.8624, 0.7996,
        0.9164, 0.7959, 0.4183, 0.7176, 0.8652, 0.8847, 0.7253, 0.6582, 0.8024,
        0.8188, 0.5810, 0.5980, 0.7622, 0.8465, 0.7898, 0.8331, 0.6247, 0.7203,
        0.8149, 0.5964, 0.7841, 0.6406, 0.7098, 0.9085, 0.6387, 0.8086, 0.6692,
        0.6705, 0.7653, 0.7874, 0.8268, 0.7649, 0.7021, 0.7700, 0.7751, 0.8419,
        0.7595, 0.5285, 0.8067, 0.6186, 0.8290, 0.7700, 0.6083, 0.7128, 0.8776,
        0.8325, 0.8412, 0.7763, 0.5598, 0.7206, 0.8706, 0.6637, 0.7953, 0.7054,
        0.9043, 0.6873, 0.9044, 0.6964, 0.8412, 0.4520, 0.7466, 0.5838, 0.5701,
        0.7016, 0.8394, 0.6756, 0.7233, 0.5956, 0.6153, 0.6762, 0.7807, 0.7419,
        0.6106, 0.8968, 0.8717, 0.6536, 0.5766, 0.7713, 0.6423, 0.6379, 0.7042,
        0.8706, 0.6482, 0.8861, 0.6848, 0.7803, 0.6438, 0.7410, 0.6314, 0.7204,
        0.5366, 0.7948, 0.7645, 0.7548, 0.7144], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(217.0775, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([293, 1])
Inertia: tensor([127.6493], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([293, 1280])
Centroid_list: tensor([[-0.0181, -0.0474, -0.0380,  ..., -0.0543,  0.0648, -0.2689],
        [-0.0181, -0.0474, -0.0380,  ..., -0.0543,  0.0648, -0.2689],
        [-0.0325, -0.0331, -0.0118,  ..., -0.0879,  0.0615, -0.2430],
        ...,
        [-0.0432, -0.0672, -0.0671,  ..., -0.0616,  0.0825, -0.2035],
        [-0.0432, -0.0672, -0.0671,  ..., -0.0616,  0.0825, -0.2035],
        [-0.0325, -0.0331, -0.0118,  ..., -0.0879,  0.0615, -0.2430]],
       device='cuda:0')
Computed C_score: tensor([0.8135, 0.7789, 0.8282, 0.7932, 0.8268, 0.6889, 0.8120, 0.6980, 0.8142,
        0.6795, 0.7920, 0.6406, 0.7119, 0.7941, 0.9204, 0.7094, 0.7842, 0.8920,
        0.7722, 0.5750, 0.7339, 0.8554, 0.7466, 0.7553, 0.9161, 0.7472, 0.7806,
        0.8230, 0.7828, 0.7238, 0.7791, 0.6892, 0.6757, 0.7572, 0.4708, 0.8586,
        0.7301, 0.7343, 0.7872, 0.8045, 0.6770, 0.7079, 0.7083, 0.7607, 0.6824,
        0.8636, 0.8035, 0.6682, 0.8653, 0.6790, 0.8844, 0.8417, 0.7759, 0.7396,
        0.6245, 0.8992, 0.6678, 0.7194, 0.7707, 0.7214, 0.7145, 0.6570, 0.6855,
        0.8873, 0.6652, 0.7345, 0.8292, 0.8287, 0.4497, 0.6787, 0.7315, 0.7569,
        0.6454, 0.8611, 0.8890, 0.7741, 0.8698, 0.7538, 0.8297, 0.7846, 0.7099,
        0.8086, 0.6741, 0.8056, 0.7511, 0.7439, 0.7262, 0.8847, 0.7781, 0.7758,
        0.7275, 0.6320, 0.8035, 0.8119, 0.6923, 0.7064, 0.9005, 0.8275, 0.6488,
        0.7719, 0.8463, 0.7789, 0.7298, 0.6815, 0.6660, 0.8660, 0.8245, 0.7054,
        0.7848, 0.8419, 0.7259, 0.7561, 0.7455, 0.6857, 0.6194, 0.8296, 0.8348,
        0.5988, 0.8381, 0.8266, 0.8665, 0.6512, 0.7561, 0.6304, 0.7551, 0.8049,
        0.7850, 0.9177, 0.8354, 0.8421, 0.6858, 0.7320, 0.5442, 0.7989, 0.7738,
        0.8630, 0.8368, 0.8637, 0.7017, 0.7785, 0.8539, 0.8085, 0.7082, 0.7047,
        0.7951, 0.7235, 0.7156, 0.7159, 0.7773, 0.6433, 0.8934, 0.8331, 0.9109,
        0.7495, 0.7272, 0.8853, 0.7777, 0.9115, 0.5208, 0.8615, 0.7161, 0.6569,
        0.8273, 0.7202, 0.7377, 0.8317, 0.7716, 0.6389, 0.6125, 0.6803, 0.6904,
        0.8267, 0.6465, 0.7076, 0.8058, 0.8302, 0.6711, 0.7558, 0.7761, 0.6795,
        0.6683, 0.6566, 0.7494, 0.6783, 0.7433, 0.6204, 0.7963, 0.6575, 0.7805,
        0.9140, 0.7727, 0.7650, 0.7591, 0.7980, 0.7849, 0.7271, 0.8575, 0.8033,
        0.9202, 0.7979, 0.4645, 0.7863, 0.8726, 0.8848, 0.7352, 0.6551, 0.8098,
        0.8184, 0.7663, 0.6213, 0.7682, 0.8560, 0.7828, 0.8379, 0.7122, 0.7272,
        0.8120, 0.5996, 0.7699, 0.6452, 0.6877, 0.9103, 0.6349, 0.8124, 0.6438,
        0.6420, 0.7652, 0.7806, 0.8278, 0.7779, 0.7663, 0.8202, 0.7710, 0.8547,
        0.7558, 0.5572, 0.7938, 0.6653, 0.8381, 0.7769, 0.6424, 0.6881, 0.8761,
        0.8183, 0.8448, 0.7612, 0.5378, 0.7262, 0.8814, 0.6756, 0.7951, 0.6886,
        0.9051, 0.7243, 0.9045, 0.6855, 0.8402, 0.5187, 0.7395, 0.6175, 0.5899,
        0.6844, 0.8438, 0.6627, 0.7288, 0.5943, 0.5987, 0.6749, 0.7848, 0.7421,
        0.6118, 0.8981, 0.8690, 0.6142, 0.6060, 0.7710, 0.5979, 0.6619, 0.8000,
        0.8705, 0.6668, 0.8876, 0.7044, 0.7974, 0.6676, 0.7092, 0.6514, 0.7554,
        0.6144, 0.8038, 0.7639, 0.7534, 0.7036], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(220.2636, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0035, 0.0097, 0.0184, 0.0298], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([5335, 1280])
S-Scores: tensor([0.6846, 2.0535, 4.1085, 6.4705], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([5335, 1])
Inertia: tensor([253.0873], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([5335, 1280])
Centroid_list: tensor([[-0.0495, -0.0687, -0.0556,  ..., -0.0638,  0.0808, -0.2695],
        [-0.0495, -0.0687, -0.0556,  ..., -0.0638,  0.0808, -0.2695],
        [-0.0495, -0.0687, -0.0556,  ..., -0.0638,  0.0808, -0.2695],
        ...,
        [-0.0495, -0.0687, -0.0556,  ..., -0.0638,  0.0808, -0.2695],
        [-0.0445, -0.0616, -0.0309,  ..., -0.0796,  0.0706, -0.0891],
        [-0.0495, -0.0687, -0.0556,  ..., -0.0638,  0.0808, -0.2695]],
       device='cuda:0')
Computed C_score: tensor([0.6650, 0.8643, 0.6439,  ..., 0.8683, 0.6976, 0.7822], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3687.9844, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5335, 1])
Inertia: tensor([264.7561], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([5335, 1280])
Centroid_list: tensor([[-0.0462, -0.0653, -0.0546,  ..., -0.0592,  0.0828, -0.2308],
        [-0.0462, -0.0653, -0.0546,  ..., -0.0592,  0.0828, -0.2308],
        [-0.0462, -0.0653, -0.0546,  ..., -0.0592,  0.0828, -0.2308],
        ...,
        [-0.0462, -0.0653, -0.0546,  ..., -0.0592,  0.0828, -0.2308],
        [-0.0612, -0.0853, -0.0489,  ..., -0.0821,  0.0689, -0.3354],
        [-0.0462, -0.0653, -0.0546,  ..., -0.0592,  0.0828, -0.2308]],
       device='cuda:0')
Computed C_score: tensor([0.6593, 0.8931, 0.6230,  ..., 0.8877, 0.8417, 0.8009], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3830.8721, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5335, 1])
Inertia: tensor([215.8071], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([5335, 1280])
Centroid_list: tensor([[-0.0425, -0.0397, -0.0145,  ..., -0.1023,  0.0751,  0.0233],
        [-0.0474, -0.0662, -0.0558,  ..., -0.0588,  0.0828, -0.2394],
        [-0.0474, -0.0662, -0.0558,  ..., -0.0588,  0.0828, -0.2394],
        ...,
        [-0.0474, -0.0662, -0.0558,  ..., -0.0588,  0.0828, -0.2394],
        [-0.0636, -0.0876, -0.0498,  ..., -0.0822,  0.0682, -0.3452],
        [-0.0474, -0.0662, -0.0558,  ..., -0.0588,  0.0828, -0.2394]],
       device='cuda:0')
Computed C_score: tensor([0.7137, 0.8959, 0.6266,  ..., 0.8930, 0.8463, 0.8059], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3907.3125, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5335, 1])
Inertia: tensor([235.3757], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([5335, 1280])
Centroid_list: tensor([[-0.0423, -0.0405, -0.0156,  ..., -0.1017,  0.0739,  0.0192],
        [-0.0689, -0.0817, -0.0707,  ..., -0.0409,  0.0793, -0.4325],
        [-0.0346, -0.0572, -0.0463,  ..., -0.0695,  0.0845, -0.1476],
        ...,
        [-0.0689, -0.0817, -0.0707,  ..., -0.0409,  0.0793, -0.4325],
        [-0.0644, -0.0883, -0.0496,  ..., -0.0824,  0.0679, -0.3485],
        [-0.0689, -0.0817, -0.0707,  ..., -0.0409,  0.0793, -0.4325]],
       device='cuda:0')
Computed C_score: tensor([0.6791, 0.9132, 0.6232,  ..., 0.9634, 0.8480, 0.9032], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3949.4319, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0002, 0.0005, 0.0011, 0.0016], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1571, 1280])
S-Scores: tensor([0.7005, 2.0951, 4.1002, 6.8680], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1571, 1])
Inertia: tensor([195.8581], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1571, 1280])
Centroid_list: tensor([[-0.0157, -0.0533, -0.0548,  ..., -0.0487,  0.0884, -0.1758],
        [-0.0376, -0.0635, -0.0563,  ..., -0.0498,  0.0845, -0.3933],
        [-0.0376, -0.0635, -0.0563,  ..., -0.0498,  0.0845, -0.3933],
        ...,
        [-0.0157, -0.0533, -0.0548,  ..., -0.0487,  0.0884, -0.1758],
        [-0.0376, -0.0635, -0.0563,  ..., -0.0498,  0.0845, -0.3933],
        [-0.0157, -0.0533, -0.0548,  ..., -0.0487,  0.0884, -0.1758]],
       device='cuda:0')
Computed C_score: tensor([0.6221, 0.7887, 0.8353,  ..., 0.7162, 0.8019, 0.5498], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1056.1820, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1571, 1])
Inertia: tensor([211.3986], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1571, 1280])
Centroid_list: tensor([[-0.0047, -0.0427, -0.0521,  ..., -0.0452,  0.0908, -0.0479],
        [-0.0381, -0.0594, -0.0530,  ..., -0.0454,  0.0869, -0.3235],
        [-0.0381, -0.0594, -0.0530,  ..., -0.0454,  0.0869, -0.3235],
        ...,
        [-0.0393, -0.0761, -0.0617,  ..., -0.0577,  0.0817, -0.4927],
        [-0.0381, -0.0594, -0.0530,  ..., -0.0454,  0.0869, -0.3235],
        [-0.0393, -0.0761, -0.0617,  ..., -0.0577,  0.0817, -0.4927]],
       device='cuda:0')
Computed C_score: tensor([0.5850, 0.7978, 0.8232,  ..., 0.7082, 0.8099, 0.6240], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1092.8927, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1571, 1])
Inertia: tensor([191.5812], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1571, 1280])
Centroid_list: tensor([[-0.0065, -0.0408, -0.0596,  ..., -0.0489,  0.0907,  0.0049],
        [-0.0396, -0.0597, -0.0521,  ..., -0.0457,  0.0870, -0.2988],
        [-0.0396, -0.0597, -0.0521,  ..., -0.0457,  0.0870, -0.2988],
        ...,
        [-0.0065, -0.0408, -0.0596,  ..., -0.0489,  0.0907,  0.0049],
        [-0.0396, -0.0597, -0.0521,  ..., -0.0457,  0.0870, -0.2988],
        [-0.0437, -0.0810, -0.0621,  ..., -0.0591,  0.0813, -0.4757]],
       device='cuda:0')
Computed C_score: tensor([0.6304, 0.8058, 0.8174,  ..., 0.7402, 0.8139, 0.6210], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1121.8989, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1571, 1])
Inertia: tensor([186.8085], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1571, 1280])
Centroid_list: tensor([[-0.0161, -0.0417, -0.0719,  ..., -0.0485,  0.0896, -0.1315],
        [-0.0405, -0.0598, -0.0527,  ..., -0.0452,  0.0866, -0.2920],
        [-0.0405, -0.0598, -0.0527,  ..., -0.0452,  0.0866, -0.2920],
        ...,
        [-0.0161, -0.0417, -0.0719,  ..., -0.0485,  0.0896, -0.1315],
        [-0.0405, -0.0598, -0.0527,  ..., -0.0452,  0.0866, -0.2920],
        [-0.0161, -0.0417, -0.0719,  ..., -0.0485,  0.0896, -0.1315]],
       device='cuda:0')
Computed C_score: tensor([0.6420, 0.8123, 0.8102,  ..., 0.7893, 0.8169, 0.6026], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1135.4182, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0007, 0.0019, 0.0036, 0.0060], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([6141, 1280])
S-Scores: tensor([0.6406, 1.8734, 3.6921, 6.4608], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([6141, 1])
Inertia: tensor([147.2978], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([6141, 1280])
Centroid_list: tensor([[-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        [-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        [-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        ...,
        [-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        [-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        [-0.0124, -0.0338, -0.0657,  ..., -0.0465,  0.0583, -0.9378]],
       device='cuda:0')
Computed C_score: tensor([0.8036, 0.3163, 0.7500,  ..., 0.7930, 0.7962, 0.8937], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4593.6250, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6141, 1])
Inertia: tensor([134.5267], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([6141, 1280])
Centroid_list: tensor([[-0.0505, -0.0541, -0.0530,  ..., -0.0473,  0.0869, -0.2018],
        [-0.0194, -0.0561, -0.0456,  ..., -0.0657,  0.0804, -0.2936],
        [-0.0194, -0.0561, -0.0456,  ..., -0.0657,  0.0804, -0.2936],
        ...,
        [-0.0505, -0.0541, -0.0530,  ..., -0.0473,  0.0869, -0.2018],
        [-0.0194, -0.0561, -0.0456,  ..., -0.0657,  0.0804, -0.2936],
        [-0.0122, -0.0334, -0.0661,  ..., -0.0457,  0.0578, -0.9608]],
       device='cuda:0')
Computed C_score: tensor([0.8246, 0.4468, 0.7234,  ..., 0.8710, 0.7909, 0.8944], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4741.8574, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6141, 1])
Inertia: tensor([86.9247], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([6141, 1280])
Centroid_list: tensor([[-0.0313, -0.0426, -0.0362,  ..., -0.0633,  0.0874, -0.1943],
        [-0.0216, -0.0596, -0.0499,  ..., -0.0631,  0.0790, -0.2843],
        [-0.0216, -0.0596, -0.0499,  ..., -0.0631,  0.0790, -0.2843],
        ...,
        [-0.0313, -0.0426, -0.0362,  ..., -0.0633,  0.0874, -0.1943],
        [-0.0313, -0.0426, -0.0362,  ..., -0.0633,  0.0874, -0.1943],
        [-0.0119, -0.0331, -0.0660,  ..., -0.0459,  0.0577, -0.9631]],
       device='cuda:0')
Computed C_score: tensor([0.8886, 0.4752, 0.7546,  ..., 0.8458, 0.8213, 0.8948], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4805.6328, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6141, 1])
Inertia: tensor([138.0599], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([6141, 1280])
Centroid_list: tensor([[-0.0498, -0.0538, -0.0525,  ..., -0.0461,  0.0876, -0.1751],
        [ 0.0009, -0.0439, -0.0349,  ..., -0.0631,  0.0844, -0.1929],
        [-0.0511, -0.0734, -0.0617,  ..., -0.0674,  0.0758, -0.4423],
        ...,
        [-0.0498, -0.0538, -0.0525,  ..., -0.0461,  0.0876, -0.1751],
        [ 0.0009, -0.0439, -0.0349,  ..., -0.0631,  0.0844, -0.1929],
        [-0.0238, -0.0278, -0.0569,  ..., -0.0521,  0.0551, -0.7447]],
       device='cuda:0')
Computed C_score: tensor([0.8239, 0.4753, 0.8647,  ..., 0.8639, 0.7837, 0.9037], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4891.8975, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0001, 0.0004, 0.0008, 0.0013], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([41, 1280])
S-Scores: tensor([0.7118, 1.7723, 3.4676, 5.9112], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([41, 1])
Inertia: tensor([167.7037], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([41, 1280])
Centroid_list: tensor([[-0.0420, -0.0594, -0.0526,  ..., -0.0662,  0.0627, -0.5903],
        [-0.0087, -0.0487, -0.0075,  ..., -0.0175,  0.0418, -0.0749],
        [-0.0420, -0.0594, -0.0526,  ..., -0.0662,  0.0627, -0.5903],
        ...,
        [-0.0420, -0.0594, -0.0526,  ..., -0.0662,  0.0627, -0.5903],
        [-0.0420, -0.0594, -0.0526,  ..., -0.0662,  0.0627, -0.5903],
        [-0.0420, -0.0594, -0.0526,  ..., -0.0662,  0.0627, -0.5903]],
       device='cuda:0')
Computed C_score: tensor([0.7553, 0.7827, 0.5795, 0.8912, 0.8264, 0.6475, 0.6324, 0.6845, 0.6712,
        0.7914, 0.7687, 0.6036, 0.7534, 0.5803, 0.5476, 0.6738, 0.7320, 0.7992,
        0.5676, 0.7275, 0.6680, 0.6364, 0.6830, 0.8729, 0.8003, 0.6643, 0.7452,
        0.8335, 0.6301, 0.7351, 0.7491, 0.7440, 0.7384, 0.8293, 0.6564, 0.6564,
        0.8155, 0.7385, 0.5830, 0.6553, 0.6173], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(29.0678, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([41, 1])
Inertia: tensor([164.9805], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([41, 1280])
Centroid_list: tensor([[-0.0446, -0.0606, -0.0518,  ..., -0.0684,  0.0622, -0.5748],
        [-0.0087, -0.0487, -0.0075,  ..., -0.0175,  0.0418, -0.0749],
        [-0.0446, -0.0606, -0.0518,  ..., -0.0684,  0.0622, -0.5748],
        ...,
        [-0.0446, -0.0606, -0.0518,  ..., -0.0684,  0.0622, -0.5748],
        [-0.0446, -0.0606, -0.0518,  ..., -0.0684,  0.0622, -0.5748],
        [-0.0446, -0.0606, -0.0518,  ..., -0.0684,  0.0622, -0.5748]],
       device='cuda:0')
Computed C_score: tensor([0.7601, 0.7827, 0.5813, 0.8912, 0.8264, 0.6545, 0.6334, 0.6900, 0.6712,
        0.7921, 0.7718, 0.6046, 0.7516, 0.5728, 1.0000, 0.6688, 0.7335, 0.8007,
        0.5673, 0.7345, 0.6717, 0.6438, 0.6825, 0.8729, 0.8003, 0.6618, 0.7494,
        0.8335, 0.6286, 0.7351, 0.7431, 0.7400, 0.7413, 0.8293, 0.6594, 0.6531,
        0.8155, 0.7418, 0.5764, 0.6493, 0.6215], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(29.5390, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([41, 1])
Inertia: tensor([164.0473], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([41, 1280])
Centroid_list: tensor([[-0.0456, -0.0596, -0.0522,  ..., -0.0711,  0.0604, -0.5757],
        [-0.0087, -0.0487, -0.0075,  ..., -0.0175,  0.0418, -0.0749],
        [-0.0378, -0.0671, -0.0492,  ..., -0.0507,  0.0739, -0.5684],
        ...,
        [-0.0456, -0.0596, -0.0522,  ..., -0.0711,  0.0604, -0.5757],
        [-0.0456, -0.0596, -0.0522,  ..., -0.0711,  0.0604, -0.5757],
        [-0.0456, -0.0596, -0.0522,  ..., -0.0711,  0.0604, -0.5757]],
       device='cuda:0')
Computed C_score: tensor([0.7603, 0.7827, 0.7853, 0.8912, 0.8264, 0.6660, 0.6146, 0.7065, 0.6712,
        0.7936, 0.7920, 0.6117, 0.7465, 0.7509, 1.0000, 0.6710, 0.7228, 0.8073,
        0.5615, 0.7639, 0.6656, 0.6781, 0.6945, 0.8729, 0.8003, 0.6652, 0.7644,
        0.8335, 0.8664, 0.7485, 0.7448, 0.7358, 0.7598, 0.8293, 0.6667, 0.8085,
        0.8155, 0.7340, 0.5553, 0.6362, 0.6230], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(30.4236, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([41, 1])
Inertia: tensor([146.0757], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([41, 1280])
Centroid_list: tensor([[-0.0445, -0.0551, -0.0417,  ..., -0.0814,  0.0590, -0.5992],
        [-0.0016, -0.0520, -0.0069,  ..., -0.0154,  0.0366, -0.0587],
        [-0.0415, -0.0619, -0.0493,  ..., -0.0594,  0.0723, -0.6765],
        ...,
        [-0.0478, -0.0662, -0.0669,  ..., -0.0443,  0.0671, -0.4633],
        [-0.0478, -0.0662, -0.0669,  ..., -0.0443,  0.0671, -0.4633],
        [-0.0445, -0.0551, -0.0417,  ..., -0.0814,  0.0590, -0.5992]],
       device='cuda:0')
Computed C_score: tensor([0.7895, 0.7783, 0.8233, 0.8897, 0.8320, 0.7150, 0.6195, 0.7331, 0.6994,
        0.8102, 0.8044, 0.6598, 0.7792, 0.6594, 1.0000, 0.7039, 0.7283, 0.8344,
        0.5818, 0.7609, 0.7155, 0.6755, 0.6897, 0.8854, 0.8080, 0.6896, 0.7523,
        0.8371, 0.9135, 0.7737, 0.7424, 0.7362, 0.7450, 0.8318, 0.6765, 0.7961,
        0.8203, 0.7591, 0.7047, 0.7690, 0.6151], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(31.1386, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0239, 0.0566, 0.1023, 0.1595], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([199, 1280])
S-Scores: tensor([0.6582, 1.7641, 3.6301, 6.1133], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([199, 1])
Inertia: tensor([173.1551], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([199, 1280])
Centroid_list: tensor([[-0.0177, -0.0581, -0.0386,  ..., -0.0798,  0.0706, -0.3859],
        [-0.0444, -0.0893, -0.0619,  ..., -0.0679,  0.0742, -0.4159],
        [-0.0177, -0.0581, -0.0386,  ..., -0.0798,  0.0706, -0.3859],
        ...,
        [-0.0444, -0.0893, -0.0619,  ..., -0.0679,  0.0742, -0.4159],
        [-0.0177, -0.0581, -0.0386,  ..., -0.0798,  0.0706, -0.3859],
        [-0.0177, -0.0581, -0.0386,  ..., -0.0798,  0.0706, -0.3859]],
       device='cuda:0')
Computed C_score: tensor([0.7521, 0.8190, 0.7880, 0.7046, 0.8072, 0.4012, 0.6911, 0.6470, 0.7345,
        0.7969, 0.8398, 0.6534, 0.7790, 0.6663, 0.7707, 0.7217, 0.8140, 0.6428,
        0.8155, 0.5538, 0.8172, 0.8197, 0.9067, 0.6600, 0.7524, 0.6228, 0.7356,
        0.8255, 0.7605, 0.7027, 0.8107, 0.8113, 0.7372, 0.7238, 0.7020, 0.8024,
        0.7813, 0.6631, 0.7485, 0.7281, 0.8549, 0.8744, 0.8252, 0.5420, 0.8322,
        0.8044, 0.7752, 0.7076, 0.8172, 0.7795, 0.7740, 0.8098, 0.6256, 0.7146,
        0.8024, 0.7609, 0.7475, 0.5825, 0.6635, 0.7250, 0.6441, 0.6711, 0.7160,
        0.8332, 0.7712, 0.7498, 0.7066, 0.5931, 0.7193, 0.8525, 0.8027, 0.7768,
        0.7434, 0.8446, 0.7280, 0.6458, 0.7173, 0.7168, 0.8089, 0.6280, 0.6805,
        0.8003, 0.5774, 0.6781, 0.6522, 0.6907, 0.7708, 0.7260, 0.8120, 0.7998,
        0.7774, 0.8002, 0.7225, 0.7510, 0.7158, 0.7877, 0.5147, 0.7071, 0.6662,
        0.8221, 0.4696, 0.7342, 0.7813, 0.7586, 0.6469, 0.7301, 0.7944, 0.8074,
        0.7565, 0.7858, 0.8542, 0.6581, 0.6561, 0.7092, 0.7535, 0.7405, 0.7839,
        0.7358, 0.6290, 0.7697, 0.8023, 0.5750, 0.7263, 0.7746, 0.7680, 0.7584,
        0.6967, 0.6706, 0.7502, 0.6797, 0.6185, 0.7819, 0.7532, 0.7872, 0.7671,
        0.8217, 0.8064, 0.7624, 0.8008, 0.7972, 0.6329, 0.7158, 0.5041, 0.8136,
        0.7759, 0.7634, 0.7434, 0.7116, 0.6294, 0.7906, 0.7287, 0.6156, 0.7947,
        0.7331, 0.8098, 0.6935, 0.8126, 0.7207, 0.7781, 0.6912, 0.6596, 0.7426,
        0.6592, 0.5517, 0.8100, 0.5441, 0.7650, 0.6350, 0.7266, 0.8033, 0.7263,
        0.5651, 0.6672, 0.8281, 0.8728, 0.4504, 0.7824, 0.8033, 0.5370, 0.6151,
        0.7394, 0.7747, 0.7248, 0.7413, 0.7344, 0.7222, 0.8460, 0.7894, 0.5719,
        0.7396, 0.7772, 0.8038, 0.7148, 0.7438, 0.6824, 0.7384, 0.7557, 0.6676,
        0.6183], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(145.1926, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([199, 1])
Inertia: tensor([166.4349], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([199, 1280])
Centroid_list: tensor([[-0.0162, -0.0548, -0.0380,  ..., -0.0797,  0.0693, -0.3878],
        [-0.0408, -0.0846, -0.0536,  ..., -0.0741,  0.0730, -0.3750],
        [-0.0162, -0.0548, -0.0380,  ..., -0.0797,  0.0693, -0.3878],
        ...,
        [-0.0408, -0.0846, -0.0536,  ..., -0.0741,  0.0730, -0.3750],
        [-0.0162, -0.0548, -0.0380,  ..., -0.0797,  0.0693, -0.3878],
        [-0.0162, -0.0548, -0.0380,  ..., -0.0797,  0.0693, -0.3878]],
       device='cuda:0')
Computed C_score: tensor([0.7630, 0.8388, 0.7776, 0.6936, 0.8416, 0.4273, 0.7912, 0.6090, 0.7834,
        0.8027, 0.8497, 0.6629, 0.8873, 0.6607, 0.8373, 0.8135, 0.8296, 0.6465,
        0.8190, 0.5482, 0.7468, 0.8229, 0.8833, 0.6485, 0.9267, 0.6634, 0.7310,
        0.8257, 0.7978, 0.7002, 0.8610, 0.8191, 0.7260, 0.7203, 0.7200, 0.8466,
        0.7696, 0.6778, 0.7585, 0.7406, 0.8788, 0.8785, 0.8344, 0.5420, 0.8403,
        0.8179, 0.9554, 0.6932, 0.8288, 0.7887, 0.8515, 0.8394, 0.7014, 0.8268,
        0.7744, 0.7643, 0.7683, 0.5819, 0.7124, 0.8435, 0.6503, 0.7503, 0.7131,
        0.8757, 0.7761, 0.6913, 0.8137, 0.6222, 0.7725, 0.9085, 0.7995, 0.9432,
        0.7524, 0.7999, 0.7242, 0.6396, 0.7088, 0.7088, 0.7971, 0.7446, 0.6817,
        0.8864, 0.5278, 0.6801, 0.6497, 0.8023, 0.9438, 0.6721, 0.8328, 0.8147,
        0.7380, 0.7999, 0.7292, 0.7416, 0.7652, 0.7771, 0.5212, 0.7260, 0.6619,
        0.7745, 0.5223, 0.7201, 0.7936, 0.7694, 0.6404, 0.7205, 0.8066, 0.8004,
        0.7560, 0.8402, 0.8732, 0.6667, 0.6494, 0.7124, 0.7601, 0.7504, 0.7798,
        0.7350, 0.6292, 0.6851, 0.7863, 0.5670, 0.7301, 0.7917, 0.7785, 0.8074,
        0.6982, 0.7551, 0.9476, 0.6836, 0.5571, 0.7562, 0.7487, 0.9439, 0.7747,
        0.8244, 0.8195, 0.7348, 0.8113, 0.7915, 0.6930, 0.7212, 0.4781, 0.8240,
        0.9482, 0.7696, 0.7031, 0.7578, 0.6427, 0.8596, 0.7621, 0.6471, 0.9205,
        0.7277, 0.8158, 0.7689, 0.9273, 0.7556, 0.7635, 0.6900, 0.6725, 0.9483,
        0.8022, 0.5940, 0.8169, 0.5839, 0.9477, 0.6423, 0.6555, 0.8092, 0.7253,
        0.5637, 0.6614, 0.8384, 0.8406, 0.4408, 0.7974, 0.8115, 0.5483, 0.6026,
        0.9454, 0.8084, 0.7323, 0.7423, 0.7370, 0.7055, 0.8565, 0.9415, 0.6154,
        0.7394, 0.7648, 0.8049, 0.7055, 0.7033, 0.6934, 0.7412, 0.8475, 0.6598,
        0.6258], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(149.6754, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([199, 1])
Inertia: tensor([138.5879], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([199, 1280])
Centroid_list: tensor([[-0.0143, -0.0504, -0.0336,  ..., -0.0777,  0.0669, -0.4984],
        [-0.0407, -0.0835, -0.0546,  ..., -0.0747,  0.0708, -0.3889],
        [-0.0217, -0.0702, -0.0482,  ..., -0.0806,  0.0768, -0.2165],
        ...,
        [-0.0407, -0.0835, -0.0546,  ..., -0.0747,  0.0708, -0.3889],
        [-0.0217, -0.0702, -0.0482,  ..., -0.0806,  0.0768, -0.2165],
        [-0.0143, -0.0504, -0.0336,  ..., -0.0777,  0.0669, -0.4984]],
       device='cuda:0')
Computed C_score: tensor([0.8076, 0.8465, 0.8027, 0.7473, 0.8312, 0.4926, 0.7764, 0.6217, 0.7707,
        0.7854, 0.8854, 0.7155, 0.8887, 0.6522, 0.8425, 0.8078, 0.8603, 0.6480,
        0.8002, 0.6069, 0.7761, 0.7951, 0.9066, 0.7059, 0.9259, 0.6623, 0.7161,
        0.8218, 0.7972, 0.6930, 0.8647, 0.8732, 0.8140, 0.7724, 0.7209, 0.8486,
        0.7722, 0.7252, 0.7583, 0.7795, 0.8887, 0.8777, 0.8492, 0.5431, 0.8306,
        0.8196, 0.9618, 0.8182, 0.8541, 0.7874, 0.8422, 0.8488, 0.6831, 0.8110,
        0.8034, 0.8032, 0.7716, 0.6900, 0.7133, 0.8296, 0.6692, 0.7218, 0.7075,
        0.8767, 0.7438, 0.7134, 0.8015, 0.6103, 0.7637, 0.9087, 0.8007, 0.9486,
        0.7812, 0.7802, 0.7425, 0.6545, 0.7498, 0.6899, 0.7872, 0.7208, 0.7170,
        0.8937, 0.5445, 0.7149, 0.6723, 0.7905, 0.9486, 0.7026, 0.8243, 0.8278,
        0.7578, 0.7663, 0.7405, 0.7417, 0.7641, 0.8233, 0.5487, 0.7808, 0.6590,
        0.7958, 0.4828, 0.8368, 0.8153, 0.7502, 0.6751, 0.7719, 0.8110, 0.8110,
        0.8349, 0.8345, 0.8718, 0.7049, 0.7298, 0.7922, 0.7643, 0.7444, 0.7581,
        0.7086, 0.6295, 0.7109, 0.7997, 0.6434, 0.7884, 0.7952, 0.8246, 0.8054,
        0.7497, 0.7334, 0.9502, 0.7425, 0.5625, 0.7778, 0.7764, 0.9513, 0.7469,
        0.8295, 0.8246, 0.7387, 0.8355, 0.7814, 0.7026, 0.7767, 0.4709, 0.8256,
        0.9530, 0.8227, 0.7198, 0.7357, 0.6581, 0.8647, 0.7593, 0.7118, 0.9269,
        0.7953, 0.8135, 0.7528, 0.9205, 0.7432, 0.7711, 0.6725, 0.7247, 0.9534,
        0.7798, 0.6004, 0.8258, 0.6119, 0.9525, 0.6715, 0.6829, 0.8360, 0.7360,
        0.6029, 0.6877, 0.8483, 0.8620, 0.5725, 0.8257, 0.8286, 0.5754, 0.5974,
        0.9512, 0.7889, 0.7659, 0.7166, 0.7805, 0.7224, 0.8673, 0.9448, 0.6065,
        0.6797, 0.7732, 0.8229, 0.7251, 0.7123, 0.7120, 0.7500, 0.8424, 0.6979,
        0.6760], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(152.5343, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([199, 1])
Inertia: tensor([136.4903], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([199, 1280])
Centroid_list: tensor([[-0.0139, -0.0494, -0.0327,  ..., -0.0760,  0.0673, -0.5416],
        [-0.0547, -0.0986, -0.0596,  ..., -0.0742,  0.0670, -0.4061],
        [-0.0220, -0.0650, -0.0486,  ..., -0.0827,  0.0762, -0.1835],
        ...,
        [-0.0547, -0.0986, -0.0596,  ..., -0.0742,  0.0670, -0.4061],
        [-0.0220, -0.0650, -0.0486,  ..., -0.0827,  0.0762, -0.1835],
        [-0.0139, -0.0494, -0.0327,  ..., -0.0760,  0.0673, -0.5416]],
       device='cuda:0')
Computed C_score: tensor([0.8108, 0.8287, 0.7982, 0.7258, 0.8348, 0.4789, 0.8693, 0.7708, 0.8082,
        0.8148, 0.8904, 0.7300, 0.8932, 0.6479, 0.8353, 0.8807, 0.8631, 0.7078,
        0.7938, 0.6128, 0.7942, 0.8032, 0.8706, 0.7207, 0.9242, 0.7414, 0.7167,
        0.8225, 0.8166, 0.6889, 0.8437, 0.8799, 0.8202, 0.7707, 0.7127, 0.8530,
        0.7731, 0.7281, 0.7540, 0.7881, 0.8854, 0.8754, 0.8428, 0.5434, 0.8255,
        0.7938, 0.9683, 0.8170, 0.8578, 0.8001, 0.8850, 0.8488, 0.7752, 0.8888,
        0.7680, 0.8221, 0.7709, 0.7024, 0.7895, 0.9118, 0.6734, 0.7514, 0.6812,
        0.8690, 0.7468, 0.8908, 0.8863, 0.5825, 0.7670, 0.9286, 0.7973, 0.9555,
        0.7804, 0.8326, 0.7523, 0.6870, 0.7486, 0.6913, 0.7787, 0.8198, 0.7313,
        0.8998, 0.5706, 0.7145, 0.6686, 0.8718, 0.9539, 0.7747, 0.8592, 0.8257,
        0.8798, 0.8073, 0.7308, 0.6970, 0.7698, 0.8285, 0.5487, 0.7834, 0.6791,
        0.7873, 0.4655, 0.8307, 0.8215, 0.7463, 0.6728, 0.7757, 0.8136, 0.8150,
        0.8428, 0.8879, 0.8708, 0.7072, 0.7288, 0.8102, 0.7725, 0.7550, 0.7532,
        0.7177, 0.6273, 0.8365, 0.7909, 0.6127, 0.7987, 0.7650, 0.8262, 0.8054,
        0.7468, 0.8087, 0.9543, 0.7567, 0.6917, 0.7372, 0.7824, 0.9521, 0.7460,
        0.8232, 0.8223, 0.6979, 0.8337, 0.7758, 0.7925, 0.7838, 0.5044, 0.8312,
        0.9617, 0.8206, 0.8852, 0.7953, 0.6642, 0.8870, 0.7764, 0.6967, 0.9297,
        0.7921, 0.8172, 0.7856, 0.8996, 0.7588, 0.7984, 0.6763, 0.7316, 0.9582,
        0.8789, 0.6909, 0.8289, 0.6553, 0.9620, 0.6725, 0.8301, 0.8393, 0.7327,
        0.6000, 0.6836, 0.8500, 0.8533, 0.5512, 0.8261, 0.8160, 0.5802, 0.6092,
        0.9622, 0.8521, 0.7670, 0.7297, 0.7828, 0.7056, 0.8708, 0.9470, 0.6749,
        0.8174, 0.7552, 0.8349, 0.7843, 0.7931, 0.7154, 0.7486, 0.8942, 0.6895,
        0.6827], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(155.7846, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0045, 0.0116, 0.0232, 0.0378], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([969, 1280])
S-Scores: tensor([0.6374, 2.0338, 4.0664, 6.4652], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([969, 1])
Inertia: tensor([137.7713], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([969, 1280])
Centroid_list: tensor([[-0.0593, -0.0661, -0.0695,  ..., -0.0455,  0.0933, -0.2927],
        [-0.1066, -0.0261, -0.0853,  ..., -0.0341,  0.0925,  0.0884],
        [-0.0593, -0.0661, -0.0695,  ..., -0.0455,  0.0933, -0.2927],
        ...,
        [-0.1066, -0.0261, -0.0853,  ..., -0.0341,  0.0925,  0.0884],
        [-0.1066, -0.0261, -0.0853,  ..., -0.0341,  0.0925,  0.0884],
        [-0.1066, -0.0261, -0.0853,  ..., -0.0341,  0.0925,  0.0884]],
       device='cuda:0')
Computed C_score: tensor([0.7639, 0.8227, 0.6400, 0.8837, 0.8810, 0.8657, 0.8101, 0.8263, 0.7462,
        0.7666, 0.6050, 0.7164, 0.8363, 0.5158, 0.8278, 0.8847, 0.5780, 0.4680,
        0.8098, 0.8711, 0.5930, 0.7605, 0.7456, 0.4462, 0.8287, 0.7793, 0.8843,
        0.7814, 0.7829, 0.7132, 0.7295, 0.6930, 0.7808, 0.7617, 0.7666, 0.8024,
        0.8434, 0.6869, 0.7366, 0.8790, 0.8215, 0.7880, 0.7194, 0.7625, 0.8785,
        0.6453, 0.8547, 0.7890, 0.8828, 0.6710, 0.7858, 0.7545, 0.9045, 0.8324,
        0.8064, 0.8487, 0.8168, 0.7887, 0.8146, 0.8363, 0.8208, 0.8906, 0.7820,
        0.8636, 0.8499, 0.8743, 0.8504, 0.7500, 0.8686, 0.7568, 0.7814, 0.8761,
        0.7771, 0.8164, 0.8450, 0.7066, 0.7873, 0.8754, 0.7643, 0.8327, 0.8097,
        0.7854, 0.7633, 0.9056, 0.7522, 0.6684, 0.9089, 0.8842, 0.8158, 0.4394,
        0.7437, 0.6420, 0.4295, 0.3575, 0.8180, 0.8114, 0.8677, 0.7988, 0.8567,
        0.8155, 0.7500, 0.7242, 0.6925, 0.6518, 0.7937, 0.5807, 0.8864, 0.7096,
        0.8764, 0.5525, 0.7715, 0.8093, 0.7701, 0.7779, 0.8168, 0.3569, 0.8716,
        0.6021, 0.8051, 0.6742, 0.8492, 0.7868, 0.6875, 0.8857, 0.7821, 0.7708,
        0.8473, 0.8399, 0.7352, 0.6386, 0.7858, 0.7525, 0.7886, 0.8590, 0.8439,
        0.7120, 0.7627, 0.8136, 0.8204, 0.7899, 0.5575, 0.8198, 0.8071, 0.5189,
        0.7803, 0.8689, 0.8811, 0.7694, 0.8515, 0.7402, 0.6419, 0.7160, 0.4173,
        0.9025, 0.8617, 0.5614, 0.8231, 0.7364, 0.8121, 0.7422, 0.8356, 0.7437,
        0.6679, 0.8395, 0.8317, 0.6326, 0.7785, 0.8728, 0.4481, 0.7667, 0.8450,
        0.8376, 0.7896, 0.8121, 0.6143, 0.5733, 0.4850, 0.8537, 0.8705, 0.8492,
        0.5206, 0.6546, 0.7732, 0.8881, 0.8875, 0.8721, 0.4690, 0.8900, 0.8827,
        0.8956, 0.5608, 0.7720, 0.7670, 0.8254, 0.7996, 0.7645, 0.7103, 0.4918,
        0.8491, 0.7773, 0.4601, 0.7755, 0.5608, 0.9054, 0.7829, 0.8509, 0.8704,
        0.7565, 0.8911, 0.8001, 0.9144, 0.8149, 0.8166, 0.5840, 0.7838, 0.8990,
        0.6768, 0.8508, 0.8971, 0.4570, 0.7108, 0.7631, 0.8166, 0.7444, 0.4285,
        0.6069, 0.5010, 0.7599, 0.7374, 0.8271, 0.8917, 0.8253, 0.7610, 0.8882,
        0.6193, 0.8301, 0.7029, 0.8790, 0.8716, 0.8691, 0.8255, 0.6599, 0.8218,
        0.8324, 0.7161, 0.8088, 0.8658, 0.8150, 0.8226, 0.7390, 0.7407, 0.7898,
        0.7588, 0.8409, 0.8661, 0.8476, 0.9054, 0.5858, 0.5162, 0.8283, 0.8630,
        0.8329, 0.8744, 0.8294, 0.8542, 0.8572, 0.8196, 0.8176, 0.8508, 0.6076,
        0.7004, 0.5249, 0.7122, 0.6296, 0.8747, 0.7985, 0.6388, 0.7704, 0.7966,
        0.8574, 0.8096, 0.8779, 0.7593, 0.8354, 0.7748, 0.7531, 0.5254, 0.8216,
        0.8014, 0.7968, 0.9110, 0.8729, 0.8463, 0.8264, 0.7982, 0.8656, 0.6905,
        0.7537, 0.8717, 0.7820, 0.7184, 0.7896, 0.8581, 0.6284, 0.8344, 0.7431,
        0.7266, 0.5376, 0.8273, 0.8561, 0.7007, 0.7986, 0.8277, 0.6898, 0.7985,
        0.7679, 0.8326, 0.7509, 0.8136, 0.8441, 0.8502, 0.6124, 0.8290, 0.7321,
        0.8078, 0.6482, 0.8474, 0.7868, 0.8889, 0.8370, 0.7413, 0.8206, 0.6005,
        0.7717, 0.8820, 0.8071, 0.6402, 0.8442, 0.4659, 0.6823, 0.8403, 0.8608,
        0.8347, 0.7454, 0.7007, 0.4709, 0.7403, 0.7363, 0.3526, 0.6252, 0.6356,
        0.8225, 0.8128, 0.7940, 0.7594, 0.7968, 0.7282, 0.7886, 0.8368, 0.5913,
        0.8211, 0.7110, 0.8650, 0.8226, 0.8520, 0.8556, 0.8286, 0.7140, 0.6937,
        0.8123, 0.6604, 0.6884, 0.8030, 0.7267, 0.8194, 0.7609, 0.8200, 0.8665,
        0.7673, 0.8020, 0.5824, 0.8127, 0.7681, 0.8670, 0.7986, 0.7855, 0.5986,
        0.8776, 0.7285, 0.7912, 0.6928, 0.7825, 0.8256, 0.6895, 0.8700, 0.8349,
        0.6775, 0.8582, 0.6960, 0.7186, 0.8023, 0.9292, 0.6748, 0.4581, 0.7090,
        0.8103, 0.6521, 0.8270, 0.7546, 0.8890, 0.7388, 0.7238, 0.8398, 0.8610,
        0.8540, 0.5090, 0.7189, 0.7009, 0.8858, 0.3686, 0.7068, 0.8562, 0.7567,
        0.6814, 0.7529, 0.8710, 0.5053, 0.5147, 0.7785, 0.7992, 0.8803, 0.7745,
        0.8541, 0.8606, 0.8945, 0.8701, 0.8945, 0.9034, 0.8690, 0.8047, 0.7976,
        0.7176, 0.7904, 0.8106, 0.8605, 0.8603, 0.6840, 0.7951, 0.8804, 0.8166,
        0.8695, 0.8774, 0.8876, 0.7672, 0.9129, 0.6823, 0.8346, 0.7945, 0.7371,
        0.8111, 0.7394, 0.8346, 0.8134, 0.7797, 0.8426, 0.8618, 0.8182, 0.8941,
        0.7788, 0.6681, 0.8663, 0.8463, 0.7176, 0.8739, 0.7559, 0.7866, 0.8405,
        0.7387, 0.8640, 0.7774, 0.9111, 0.7640, 0.8354, 0.7927, 0.8499, 0.8479,
        0.6417, 0.7902, 0.6527, 0.8501, 0.8276, 0.8124, 0.8579, 0.7522, 0.7780,
        0.7608, 0.7867, 0.7659, 0.8302, 0.8448, 0.7017, 0.8610, 0.8560, 0.7914,
        0.8604, 0.6948, 0.5883, 0.7965, 0.7322, 0.8012, 0.7556, 0.8039, 0.7914,
        0.7757, 0.8840, 0.6406, 0.8395, 0.8290, 0.8299, 0.7828, 0.4711, 0.6879,
        0.5963, 0.8020, 0.8675, 0.7037, 0.7906, 0.8576, 0.8434, 0.6759, 0.5870,
        0.9005, 0.7162, 0.9105, 0.8441, 0.7219, 0.7455, 0.6683, 0.8485, 0.7365,
        0.7188, 0.7785, 0.7523, 0.8751, 0.6850, 0.8020, 0.8621, 0.5520, 0.8676,
        0.8369, 0.8652, 0.9113, 0.8334, 0.8014, 0.8890, 0.7843, 0.5032, 0.7133,
        0.8442, 0.7341, 0.7972, 0.7007, 0.8807, 0.7957, 0.8122, 0.7232, 0.7247,
        0.8744, 0.8619, 0.8270, 0.3981, 0.7390, 0.7978, 0.8101, 0.7895, 0.6279,
        0.8058, 0.7652, 0.6970, 0.7886, 0.8900, 0.8258, 0.9153, 0.7405, 0.8237,
        0.4996, 0.7413, 0.8479, 0.6054, 0.7910, 0.5280, 0.7450, 0.6213, 0.8662,
        0.8471, 0.8280, 0.6977, 0.7875, 0.6962, 0.7639, 0.7410, 0.7782, 0.7451,
        0.8795, 0.8229, 0.7677, 0.8131, 0.7998, 0.8426, 0.8793, 0.8723, 0.8617,
        0.8210, 0.8579, 0.7136, 0.8634, 0.8269, 0.8587, 0.7715, 0.8967, 0.6694,
        0.7708, 0.7741, 0.8621, 0.8228, 0.7693, 0.3936, 0.7939, 0.8257, 0.7832,
        0.6958, 0.3812, 0.8016, 0.7957, 0.8336, 0.6828, 0.7642, 0.8043, 0.7781,
        0.7821, 0.8884, 0.6723, 0.7763, 0.7781, 0.7916, 0.4918, 0.8268, 0.8290,
        0.8047, 0.5576, 0.8582, 0.8083, 0.8632, 0.8670, 0.8850, 0.8484, 0.8863,
        0.7318, 0.8342, 0.6610, 0.8681, 0.8641, 0.5013, 0.8708, 0.8821, 0.4442,
        0.6988, 0.8027, 0.8289, 0.8346, 0.8271, 0.7340, 0.6669, 0.8957, 0.7028,
        0.7637, 0.7436, 0.8160, 0.8434, 0.5126, 0.6996, 0.8629, 0.7413, 0.8326,
        0.6930, 0.8636, 0.5583, 0.8099, 0.6054, 0.5503, 0.7584, 0.8615, 0.8965,
        0.8381, 0.7033, 0.7987, 0.8016, 0.8599, 0.8909, 0.8699, 0.7372, 0.6882,
        0.8626, 0.7011, 0.8423, 0.7250, 0.8340, 0.6114, 0.9143, 0.6368, 0.8792,
        0.8003, 0.7761, 0.7241, 0.5693, 0.4779, 0.7031, 0.7244, 0.8417, 0.7725,
        0.8179, 0.7760, 0.8861, 0.7582, 0.8709, 0.8904, 0.7828, 0.8393, 0.7392,
        0.7797, 0.7599, 0.7347, 0.8767, 0.5551, 0.8587, 0.8323, 0.7232, 0.7265,
        0.7982, 0.8320, 0.8642, 0.8155, 0.6094, 0.7137, 0.7893, 0.8861, 0.7896,
        0.7681, 0.6535, 0.8147, 0.8492, 0.8940, 0.8989, 0.7232, 0.6313, 0.5267,
        0.7874, 0.8657, 0.5206, 0.8502, 0.7410, 0.6388, 0.7190, 0.7966, 0.7963,
        0.7969, 0.7385, 0.7041, 0.8594, 0.6791, 0.8443, 0.8346, 0.6141, 0.8464,
        0.8510, 0.7473, 0.8334, 0.8106, 0.6918, 0.8235, 0.7528, 0.7949, 0.8409,
        0.8436, 0.9154, 0.8592, 0.7764, 0.4558, 0.6875, 0.8189, 0.7879, 0.6370,
        0.7746, 0.6242, 0.7796, 0.7518, 0.7406, 0.8733, 0.7927, 0.8690, 0.8451,
        0.5079, 0.7346, 0.9061, 0.8574, 0.6292, 0.8084, 0.8259, 0.7345, 0.8797,
        0.8220, 0.6841, 0.8264, 0.7551, 0.5916, 0.8314, 0.8590, 0.7282, 0.7810,
        0.7596, 0.8821, 0.8489, 0.7590, 0.8500, 0.6544, 0.7532, 0.8772, 0.8028,
        0.5483, 0.8423, 0.9118, 0.8268, 0.8117, 0.8301, 0.7257, 0.6506, 0.7336,
        0.8707, 0.7829, 0.8355, 0.6848, 0.8579, 0.7708, 0.8460, 0.7937, 0.8096,
        0.7567, 0.8746, 0.6687, 0.3847, 0.8047, 0.7855, 0.8635, 0.8381, 0.8611,
        0.8050, 0.7570, 0.9032, 0.8006, 0.8631, 0.8864, 0.8229, 0.8456, 0.8646,
        0.4949, 0.8172, 0.8433, 0.7612, 0.7837, 0.9274, 0.7450, 0.7161, 0.8543,
        0.7684, 0.8871, 0.8146, 0.4842, 0.7579, 0.6213, 0.7410, 0.6737, 0.8048,
        0.7839, 0.8003, 0.8514, 0.7179, 0.7127, 0.8844, 0.8890, 0.8427, 0.7191,
        0.5503, 0.8778, 0.7349, 0.7383, 0.7451, 0.7561, 0.6010, 0.7810, 0.8597,
        0.6981, 0.5765, 0.8079, 0.8978, 0.9088, 0.8495, 0.8038, 0.8028, 0.7897,
        0.8281, 0.8733, 0.8221, 0.8369, 0.8452, 0.7847, 0.8284, 0.3728, 0.5824,
        0.8437, 0.7881, 0.3682, 0.8139, 0.7778, 0.8164, 0.6788, 0.5105, 0.8311,
        0.7571, 0.8531, 0.8525, 0.9028, 0.7201, 0.7724, 0.7555, 0.9190, 0.8680,
        0.8719, 0.7647, 0.7451, 0.7648, 0.6492, 0.7567, 0.7695, 0.8535, 0.8221,
        0.3977, 0.7993, 0.7714, 0.8795, 0.8488, 0.8439, 0.7106, 0.8084, 0.6584,
        0.6829, 0.8964, 0.5025, 0.7799, 0.7127, 0.8386, 0.7794, 0.5889, 0.5602,
        0.7022, 0.8530, 0.8691, 0.8331, 0.5643, 0.7122], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(745.0449, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([969, 1])
Inertia: tensor([151.2507], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([969, 1280])
Centroid_list: tensor([[-0.0569, -0.0673, -0.0674,  ..., -0.0463,  0.0952, -0.2897],
        [-0.0562, -0.0463, -0.0928,  ..., -0.0297,  0.0895, -0.1834],
        [-0.1235, -0.0224, -0.0804,  ..., -0.0375,  0.0931,  0.1529],
        ...,
        [-0.1235, -0.0224, -0.0804,  ..., -0.0375,  0.0931,  0.1529],
        [-0.0562, -0.0463, -0.0928,  ..., -0.0297,  0.0895, -0.1834],
        [-0.0562, -0.0463, -0.0928,  ..., -0.0297,  0.0895, -0.1834]],
       device='cuda:0')
Computed C_score: tensor([0.7464, 0.8084, 0.6485, 0.8771, 0.8775, 0.8935, 0.8094, 0.8147, 0.7803,
        0.7802, 0.7468, 0.7754, 0.8597, 0.5203, 0.8401, 0.8700, 0.6085, 0.4549,
        0.8269, 0.8874, 0.7516, 0.7572, 0.8265, 0.5137, 0.8239, 0.8043, 0.9038,
        0.7987, 0.8075, 0.7438, 0.7393, 0.6626, 0.7464, 0.7880, 0.8042, 0.8166,
        0.8543, 0.6530, 0.7941, 0.8665, 0.8554, 0.8043, 0.6972, 0.7623, 0.8897,
        0.7291, 0.8529, 0.8112, 0.8654, 0.7743, 0.8218, 0.8055, 0.9281, 0.8289,
        0.8602, 0.8491, 0.8601, 0.7761, 0.8322, 0.8551, 0.8107, 0.8993, 0.8170,
        0.8713, 0.8725, 0.8784, 0.8769, 0.7888, 0.8785, 0.7838, 0.8427, 0.8777,
        0.7681, 0.8501, 0.8762, 0.6754, 0.7773, 0.8808, 0.7961, 0.8472, 0.8405,
        0.7981, 0.7698, 0.9163, 0.7865, 0.6790, 0.8858, 0.8959, 0.8292, 0.4881,
        0.7977, 0.6438, 0.5435, 0.4198, 0.8048, 0.8400, 0.8684, 0.8151, 0.8447,
        0.8151, 0.8070, 0.7413, 0.7244, 0.6562, 0.8112, 0.5943, 0.8925, 0.6647,
        0.8460, 0.6921, 0.7528, 0.8364, 0.7815, 0.7619, 0.7978, 0.4166, 0.8665,
        0.5841, 0.8425, 0.6904, 0.8689, 0.7951, 0.6841, 0.8880, 0.8151, 0.8285,
        0.8454, 0.8687, 0.7306, 0.6412, 0.8618, 0.7309, 0.8092, 0.8670, 0.8619,
        0.7224, 0.7450, 0.8359, 0.8298, 0.7915, 0.6260, 0.8233, 0.8288, 0.6104,
        0.8036, 0.8932, 0.8933, 0.7638, 0.8455, 0.7281, 0.6684, 0.7179, 0.5145,
        0.8926, 0.8677, 0.5680, 0.8433, 0.7535, 0.8069, 0.8332, 0.8407, 0.7571,
        0.7679, 0.8423, 0.8446, 0.7467, 0.7793, 0.8978, 0.6080, 0.7849, 0.8230,
        0.8178, 0.8208, 0.8378, 0.7505, 0.7521, 0.5574, 0.8634, 0.8784, 0.8445,
        0.7225, 0.7173, 0.8041, 0.9102, 0.8958, 0.8800, 0.4488, 0.9021, 0.9036,
        0.8890, 0.6569, 0.8236, 0.7828, 0.8557, 0.8280, 0.7410, 0.7319, 0.4833,
        0.8658, 0.7537, 0.6382, 0.8379, 0.7627, 0.9023, 0.8433, 0.8357, 0.8613,
        0.7881, 0.8733, 0.7861, 0.9002, 0.8306, 0.8549, 0.5421, 0.8138, 0.8964,
        0.6571, 0.8715, 0.9035, 0.5878, 0.7713, 0.7755, 0.8403, 0.7044, 0.4865,
        0.6545, 0.6131, 0.8664, 0.7725, 0.8087, 0.8997, 0.8222, 0.7799, 0.8968,
        0.6395, 0.8659, 0.7042, 0.8677, 0.8860, 0.8931, 0.8241, 0.6586, 0.8137,
        0.8291, 0.7105, 0.8760, 0.8414, 0.8453, 0.8331, 0.7602, 0.7262, 0.8015,
        0.7762, 0.8738, 0.8551, 0.8733, 0.8993, 0.5982, 0.6662, 0.8006, 0.8633,
        0.8535, 0.8851, 0.8049, 0.8527, 0.8467, 0.8060, 0.8670, 0.8415, 0.7436,
        0.7189, 0.5226, 0.7398, 0.6661, 0.8819, 0.8099, 0.6490, 0.7617, 0.8318,
        0.8480, 0.8267, 0.8835, 0.8016, 0.8194, 0.7900, 0.7883, 0.7216, 0.7936,
        0.8013, 0.8312, 0.8959, 0.8923, 0.8453, 0.8317, 0.7811, 0.8652, 0.6821,
        0.8198, 0.8547, 0.7330, 0.7228, 0.8402, 0.8774, 0.6374, 0.8418, 0.7644,
        0.7566, 0.6668, 0.8304, 0.8467, 0.7138, 0.8173, 0.8147, 0.7700, 0.7761,
        0.8060, 0.8382, 0.8099, 0.8366, 0.8489, 0.8694, 0.5568, 0.8030, 0.7608,
        0.8266, 0.6302, 0.8778, 0.8413, 0.8887, 0.8529, 0.7485, 0.8279, 0.5914,
        0.7989, 0.8925, 0.7917, 0.7129, 0.8402, 0.6203, 0.7707, 0.8637, 0.8365,
        0.8309, 0.8423, 0.8174, 0.5250, 0.7319, 0.7302, 0.4375, 0.6760, 0.6476,
        0.8176, 0.8080, 0.8308, 0.8900, 0.8363, 0.7609, 0.8144, 0.8205, 0.6787,
        0.8361, 0.7868, 0.8540, 0.8131, 0.8409, 0.8760, 0.8329, 0.7230, 0.7062,
        0.7800, 0.6706, 0.7892, 0.8044, 0.6862, 0.8397, 0.8059, 0.8122, 0.8857,
        0.7842, 0.8273, 0.5684, 0.8150, 0.7880, 0.8445, 0.8186, 0.7901, 0.6941,
        0.8956, 0.7615, 0.7726, 0.7329, 0.8171, 0.8377, 0.6848, 0.8803, 0.8402,
        0.7799, 0.8582, 0.7122, 0.7269, 0.8195, 0.9248, 0.7810, 0.4647, 0.8087,
        0.8037, 0.6035, 0.8572, 0.7639, 0.8678, 0.7747, 0.7393, 0.8520, 0.8379,
        0.8664, 0.5187, 0.7093, 0.6582, 0.8856, 0.4926, 0.7707, 0.8656, 0.8513,
        0.6703, 0.7530, 0.8873, 0.5981, 0.6303, 0.8143, 0.8191, 0.8828, 0.7954,
        0.8767, 0.8692, 0.8948, 0.8745, 0.8936, 0.9110, 0.8886, 0.8181, 0.8093,
        0.7218, 0.8176, 0.7906, 0.8803, 0.8811, 0.8063, 0.8265, 0.8851, 0.8102,
        0.8757, 0.8866, 0.9135, 0.7987, 0.9276, 0.6859, 0.8810, 0.8109, 0.7343,
        0.8459, 0.7538, 0.8229, 0.8276, 0.7712, 0.8513, 0.8844, 0.8274, 0.8698,
        0.7989, 0.7779, 0.8650, 0.8549, 0.7123, 0.8532, 0.8024, 0.8105, 0.8670,
        0.7351, 0.8630, 0.8880, 0.9178, 0.7815, 0.8155, 0.7841, 0.8295, 0.8519,
        0.6639, 0.7928, 0.5959, 0.8556, 0.8141, 0.8391, 0.8466, 0.7183, 0.8292,
        0.7795, 0.8055, 0.8306, 0.8491, 0.8684, 0.7051, 0.8864, 0.8857, 0.8402,
        0.8744, 0.6437, 0.6068, 0.7938, 0.7541, 0.8204, 0.7979, 0.8012, 0.7741,
        0.8262, 0.9000, 0.6255, 0.8452, 0.8273, 0.8523, 0.7913, 0.6364, 0.6805,
        0.6925, 0.7964, 0.8789, 0.7962, 0.7918, 0.8722, 0.8225, 0.7010, 0.6067,
        0.9152, 0.6868, 0.9000, 0.8464, 0.7416, 0.7558, 0.7587, 0.8717, 0.7714,
        0.7318, 0.7926, 0.7736, 0.8938, 0.6914, 0.7865, 0.8545, 0.7085, 0.8497,
        0.8247, 0.8703, 0.8911, 0.8294, 0.8184, 0.9062, 0.8086, 0.6611, 0.7708,
        0.8382, 0.7642, 0.7866, 0.6878, 0.8836, 0.8237, 0.8478, 0.7035, 0.6873,
        0.8621, 0.8913, 0.8578, 0.3738, 0.7568, 0.7967, 0.8007, 0.8445, 0.6146,
        0.8136, 0.7467, 0.7257, 0.8152, 0.8916, 0.8158, 0.8991, 0.7360, 0.8272,
        0.4908, 0.7244, 0.8663, 0.6031, 0.7899, 0.5484, 0.7458, 0.6290, 0.9051,
        0.8623, 0.8646, 0.7085, 0.8164, 0.6395, 0.7752, 0.7265, 0.8121, 0.7601,
        0.8764, 0.8423, 0.8042, 0.8354, 0.8150, 0.8329, 0.9012, 0.8940, 0.8844,
        0.8354, 0.8744, 0.7136, 0.8384, 0.8041, 0.8683, 0.7638, 0.8983, 0.7934,
        0.7993, 0.7887, 0.8831, 0.7923, 0.7950, 0.4851, 0.8497, 0.8415, 0.7597,
        0.6511, 0.4123, 0.8242, 0.8001, 0.8122, 0.7055, 0.7759, 0.7889, 0.8184,
        0.7697, 0.8924, 0.6649, 0.8006, 0.8266, 0.8163, 0.4833, 0.8173, 0.8342,
        0.8067, 0.5664, 0.8342, 0.8621, 0.8526, 0.8809, 0.8924, 0.8528, 0.9007,
        0.7905, 0.8337, 0.7402, 0.8582, 0.8734, 0.4665, 0.8437, 0.8833, 0.6606,
        0.7035, 0.7758, 0.8009, 0.8631, 0.8037, 0.7471, 0.7433, 0.8928, 0.6829,
        0.7744, 0.7625, 0.8422, 0.8437, 0.5384, 0.7714, 0.8918, 0.7694, 0.7977,
        0.6726, 0.8728, 0.6254, 0.8078, 0.5936, 0.5211, 0.7272, 0.8738, 0.9005,
        0.8678, 0.7938, 0.8085, 0.7840, 0.8563, 0.9024, 0.8946, 0.7096, 0.6948,
        0.8569, 0.7299, 0.8276, 0.6870, 0.8659, 0.6133, 0.9101, 0.6530, 0.9002,
        0.8344, 0.7741, 0.7454, 0.5306, 0.6835, 0.6925, 0.7202, 0.8371, 0.7975,
        0.8420, 0.8439, 0.8979, 0.7799, 0.8881, 0.8927, 0.8039, 0.8128, 0.7359,
        0.7800, 0.7753, 0.8008, 0.8797, 0.5550, 0.8809, 0.8485, 0.6832, 0.7252,
        0.8125, 0.8133, 0.8832, 0.8446, 0.5937, 0.6494, 0.8280, 0.8611, 0.7627,
        0.7803, 0.6481, 0.8303, 0.8657, 0.8895, 0.8964, 0.7763, 0.6428, 0.6365,
        0.8170, 0.8738, 0.5100, 0.8593, 0.7057, 0.6031, 0.7835, 0.8395, 0.8288,
        0.8284, 0.7874, 0.7521, 0.8520, 0.7102, 0.8435, 0.9217, 0.6001, 0.8300,
        0.8157, 0.8342, 0.8634, 0.7726, 0.6727, 0.8552, 0.7651, 0.8095, 0.8511,
        0.8770, 0.9360, 0.8878, 0.7721, 0.5233, 0.6426, 0.8360, 0.8235, 0.6460,
        0.7606, 0.6105, 0.8131, 0.7634, 0.7744, 0.8409, 0.7938, 0.8920, 0.8534,
        0.6665, 0.7377, 0.9289, 0.8332, 0.6282, 0.7944, 0.8712, 0.7356, 0.8907,
        0.7938, 0.7919, 0.8190, 0.7859, 0.7317, 0.8178, 0.8703, 0.7317, 0.8053,
        0.7645, 0.8808, 0.8735, 0.7890, 0.8362, 0.7999, 0.7697, 0.8972, 0.8064,
        0.6477, 0.8131, 0.9235, 0.8624, 0.8411, 0.8166, 0.7083, 0.6335, 0.7766,
        0.8568, 0.8293, 0.8260, 0.6948, 0.8627, 0.7996, 0.8720, 0.8143, 0.7955,
        0.7991, 0.8697, 0.6145, 0.4413, 0.8299, 0.8349, 0.8823, 0.8431, 0.8528,
        0.8028, 0.8105, 0.8968, 0.8407, 0.8604, 0.8716, 0.8187, 0.8781, 0.8798,
        0.6034, 0.8235, 0.8210, 0.7825, 0.7352, 0.9168, 0.7945, 0.7486, 0.8644,
        0.7517, 0.8664, 0.8277, 0.4477, 0.7403, 0.6019, 0.7546, 0.6924, 0.8485,
        0.7880, 0.7890, 0.8546, 0.7310, 0.7369, 0.8799, 0.9057, 0.8606, 0.7061,
        0.5540, 0.8559, 0.7044, 0.7479, 0.7664, 0.7832, 0.5701, 0.7363, 0.8992,
        0.8368, 0.5879, 0.8389, 0.9015, 0.9230, 0.8339, 0.7993, 0.7935, 0.8297,
        0.8045, 0.8949, 0.8143, 0.8458, 0.8447, 0.7955, 0.8308, 0.4393, 0.5657,
        0.8453, 0.8183, 0.5415, 0.8408, 0.8127, 0.8268, 0.6640, 0.6587, 0.8089,
        0.7547, 0.8788, 0.8697, 0.8891, 0.8281, 0.8011, 0.8480, 0.9116, 0.8570,
        0.8843, 0.7925, 0.7607, 0.7862, 0.6246, 0.7587, 0.7899, 0.8619, 0.8182,
        0.5072, 0.7982, 0.7890, 0.8607, 0.8640, 0.8726, 0.7077, 0.7646, 0.6540,
        0.7045, 0.8762, 0.5408, 0.7767, 0.7293, 0.8078, 0.7915, 0.6893, 0.5114,
        0.7294, 0.8712, 0.8973, 0.8608, 0.6875, 0.7669], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(762.1071, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([969, 1])
Inertia: tensor([159.9342], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([969, 1280])
Centroid_list: tensor([[-0.0592, -0.0638, -0.0675,  ..., -0.0423,  0.0993, -0.2772],
        [-0.0765, -0.0697, -0.0747,  ..., -0.0513,  0.0838, -0.2440],
        [-0.0765, -0.0697, -0.0747,  ..., -0.0513,  0.0838, -0.2440],
        ...,
        [-0.1288, -0.0189, -0.0791,  ..., -0.0362,  0.0936,  0.1936],
        [-0.0765, -0.0697, -0.0747,  ..., -0.0513,  0.0838, -0.2440],
        [-0.0608, -0.0297, -0.0971,  ..., -0.0253,  0.0938, -0.0803]],
       device='cuda:0')
Computed C_score: tensor([0.7459, 0.7980, 0.6684, 0.8734, 0.8735, 0.9002, 0.7981, 0.8025, 0.8375,
        0.8504, 0.7247, 0.8199, 0.8733, 0.4733, 0.8448, 0.8629, 0.7297, 0.4331,
        0.8297, 0.9143, 0.7167, 0.7558, 0.8697, 0.4923, 0.8203, 0.8062, 0.9111,
        0.8045, 0.8288, 0.8014, 0.8391, 0.6599, 0.7559, 0.7942, 0.8235, 0.8117,
        0.8458, 0.6643, 0.8454, 0.8658, 0.8717, 0.8087, 0.7325, 0.7690, 0.8937,
        0.8362, 0.8186, 0.8235, 0.8526, 0.7778, 0.8368, 0.8304, 0.9324, 0.8193,
        0.8924, 0.8513, 0.8870, 0.8844, 0.8299, 0.8587, 0.8861, 0.9007, 0.8475,
        0.8687, 0.8890, 0.8787, 0.8822, 0.8076, 0.8813, 0.7960, 0.8863, 0.8780,
        0.7861, 0.8615, 0.8869, 0.7516, 0.7943, 0.8740, 0.8032, 0.8542, 0.8472,
        0.8016, 0.7429, 0.9141, 0.8000, 0.6824, 0.8972, 0.9001, 0.8470, 0.5071,
        0.8508, 0.7336, 0.6114, 0.4089, 0.7867, 0.8475, 0.8667, 0.8225, 0.8370,
        0.8084, 0.8331, 0.7483, 0.7185, 0.6516, 0.8355, 0.5968, 0.8907, 0.8083,
        0.9036, 0.6759, 0.7501, 0.8415, 0.7839, 0.7952, 0.8081, 0.3730, 0.8638,
        0.6429, 0.8584, 0.7226, 0.8748, 0.7861, 0.6885, 0.8875, 0.8258, 0.8767,
        0.8354, 0.8854, 0.7198, 0.6429, 0.8643, 0.7021, 0.8164, 0.8848, 0.8701,
        0.6994, 0.7689, 0.8409, 0.8105, 0.8213, 0.7350, 0.8230, 0.8390, 0.5368,
        0.8284, 0.9021, 0.8980, 0.8228, 0.8724, 0.7492, 0.6894, 0.6887, 0.5719,
        0.8863, 0.8635, 0.7479, 0.8452, 0.7688, 0.8017, 0.8638, 0.8368, 0.8513,
        0.7728, 0.8658, 0.8517, 0.7409, 0.7550, 0.9078, 0.5643, 0.7899, 0.8291,
        0.8379, 0.8358, 0.8410, 0.7394, 0.6787, 0.5116, 0.8565, 0.8845, 0.8130,
        0.6835, 0.7048, 0.8069, 0.9139, 0.8934, 0.8771, 0.5172, 0.9065, 0.9138,
        0.8846, 0.5945, 0.8538, 0.8112, 0.8637, 0.8392, 0.8371, 0.7330, 0.4894,
        0.8715, 0.7901, 0.5692, 0.8979, 0.7064, 0.8997, 0.8722, 0.8346, 0.8502,
        0.7932, 0.8673, 0.7771, 0.8901, 0.8257, 0.8727, 0.6932, 0.8196, 0.8942,
        0.6185, 0.8788, 0.9077, 0.5419, 0.7772, 0.7781, 0.8424, 0.7669, 0.4883,
        0.6793, 0.6086, 0.8549, 0.8203, 0.8046, 0.8967, 0.8147, 0.7682, 0.9004,
        0.8173, 0.8872, 0.6890, 0.8578, 0.8823, 0.9025, 0.8203, 0.6663, 0.8746,
        0.8112, 0.6971, 0.8505, 0.9012, 0.8628, 0.8373, 0.8059, 0.7421, 0.8234,
        0.8065, 0.8790, 0.8491, 0.8864, 0.8950, 0.6007, 0.6686, 0.8440, 0.8597,
        0.8588, 0.8804, 0.8456, 0.8498, 0.8337, 0.8190, 0.9053, 0.8331, 0.7284,
        0.7226, 0.4651, 0.7456, 0.6959, 0.8763, 0.8673, 0.6486, 0.7678, 0.8447,
        0.8342, 0.8108, 0.8759, 0.8341, 0.8108, 0.8251, 0.8045, 0.6606, 0.8266,
        0.8540, 0.8397, 0.8896, 0.8999, 0.8603, 0.8060, 0.7836, 0.8567, 0.6960,
        0.8601, 0.8688, 0.8548, 0.7235, 0.8757, 0.8858, 0.6563, 0.8394, 0.7717,
        0.8046, 0.6302, 0.8260, 0.8331, 0.7239, 0.8428, 0.8096, 0.6978, 0.8129,
        0.8386, 0.8383, 0.8646, 0.8389, 0.8503, 0.8805, 0.7141, 0.8235, 0.7691,
        0.8294, 0.6951, 0.8927, 0.8865, 0.8855, 0.8451, 0.7649, 0.8286, 0.6163,
        0.8107, 0.8973, 0.8274, 0.6731, 0.8372, 0.5735, 0.7992, 0.8677, 0.8603,
        0.8175, 0.8774, 0.8005, 0.5568, 0.8239, 0.7208, 0.4686, 0.6259, 0.6209,
        0.8215, 0.8681, 0.8568, 0.8656, 0.8730, 0.7685, 0.8667, 0.8058, 0.7081,
        0.8358, 0.8057, 0.8488, 0.7879, 0.8221, 0.8812, 0.8203, 0.6971, 0.6735,
        0.7670, 0.7034, 0.8323, 0.7688, 0.7109, 0.9032, 0.8403, 0.8020, 0.8923,
        0.8231, 0.8306, 0.6142, 0.8119, 0.7955, 0.8592, 0.8190, 0.7861, 0.6236,
        0.8951, 0.7748, 0.7758, 0.7666, 0.8452, 0.8371, 0.7209, 0.8803, 0.8292,
        0.7834, 0.8636, 0.7191, 0.7403, 0.7957, 0.9212, 0.7462, 0.5133, 0.8223,
        0.7949, 0.7659, 0.8648, 0.7598, 0.8870, 0.7908, 0.7091, 0.8539, 0.8606,
        0.8821, 0.6800, 0.7296, 0.7324, 0.8827, 0.4600, 0.7553, 0.8651, 0.8369,
        0.6411, 0.7492, 0.8862, 0.7096, 0.5973, 0.8340, 0.8207, 0.8794, 0.8082,
        0.8871, 0.8665, 0.8921, 0.8678, 0.8887, 0.9080, 0.8937, 0.8463, 0.8316,
        0.7247, 0.8319, 0.7579, 0.8847, 0.8922, 0.8298, 0.8409, 0.8889, 0.8537,
        0.8768, 0.8820, 0.9196, 0.8496, 0.9303, 0.6828, 0.9043, 0.8182, 0.7251,
        0.8560, 0.7633, 0.8163, 0.8240, 0.8267, 0.8480, 0.8936, 0.8627, 0.8798,
        0.7947, 0.7931, 0.8636, 0.8544, 0.6886, 0.8637, 0.8364, 0.8483, 0.8778,
        0.7545, 0.8660, 0.8621, 0.9173, 0.7825, 0.8405, 0.7702, 0.8389, 0.8461,
        0.6689, 0.7901, 0.7697, 0.8189, 0.8045, 0.8384, 0.8394, 0.8102, 0.8686,
        0.8068, 0.8234, 0.8107, 0.8535, 0.8743, 0.6767, 0.8942, 0.8931, 0.8863,
        0.8782, 0.8107, 0.5936, 0.8561, 0.7916, 0.8312, 0.8297, 0.8365, 0.7796,
        0.8600, 0.9010, 0.8171, 0.8388, 0.8242, 0.8554, 0.8199, 0.5903, 0.6351,
        0.6354, 0.7903, 0.8738, 0.7898, 0.7461, 0.8780, 0.8516, 0.8703, 0.6646,
        0.9186, 0.7717, 0.8970, 0.8346, 0.7419, 0.8372, 0.7139, 0.8812, 0.8137,
        0.7312, 0.7992, 0.7756, 0.8959, 0.7254, 0.7729, 0.8437, 0.6692, 0.8418,
        0.8140, 0.8633, 0.8761, 0.7868, 0.8208, 0.9119, 0.8187, 0.6074, 0.8136,
        0.8327, 0.7563, 0.8439, 0.6642, 0.8879, 0.8371, 0.8716, 0.7091, 0.7200,
        0.8615, 0.8984, 0.8589, 0.4887, 0.7740, 0.7584, 0.7981, 0.8786, 0.6351,
        0.8153, 0.7300, 0.7457, 0.8790, 0.8881, 0.8182, 0.8915, 0.8352, 0.8216,
        0.5095, 0.7585, 0.8499, 0.8053, 0.7833, 0.7202, 0.7252, 0.6032, 0.9104,
        0.8710, 0.8799, 0.6472, 0.8287, 0.8042, 0.7759, 0.7257, 0.8231, 0.7754,
        0.8668, 0.8498, 0.8428, 0.8418, 0.8172, 0.8525, 0.9072, 0.8947, 0.8835,
        0.8441, 0.8793, 0.8306, 0.9079, 0.8306, 0.8711, 0.7582, 0.8928, 0.7736,
        0.8053, 0.8145, 0.8867, 0.8279, 0.7993, 0.4370, 0.8539, 0.8536, 0.8124,
        0.7697, 0.4248, 0.8341, 0.7471, 0.8288, 0.6951, 0.8048, 0.7784, 0.8319,
        0.7654, 0.8920, 0.6554, 0.8094, 0.8646, 0.8092, 0.4894, 0.8059, 0.8414,
        0.8445, 0.5756, 0.8401, 0.8962, 0.8454, 0.8792, 0.8871, 0.8568, 0.9047,
        0.8209, 0.8322, 0.7309, 0.8432, 0.8705, 0.6515, 0.8733, 0.8829, 0.6173,
        0.6346, 0.8207, 0.8760, 0.8723, 0.8304, 0.7371, 0.7796, 0.8875, 0.6842,
        0.7889, 0.7791, 0.8455, 0.8417, 0.6012, 0.7927, 0.9046, 0.7628, 0.8735,
        0.8484, 0.8708, 0.6776, 0.7699, 0.6006, 0.5456, 0.7711, 0.8660, 0.9008,
        0.8681, 0.8175, 0.8027, 0.7948, 0.8551, 0.8984, 0.9045, 0.7278, 0.6805,
        0.9157, 0.7193, 0.8264, 0.7857, 0.8710, 0.6140, 0.9048, 0.6727, 0.9068,
        0.8463, 0.7702, 0.7565, 0.6363, 0.6552, 0.6266, 0.7112, 0.8256, 0.8058,
        0.8500, 0.8943, 0.8955, 0.7798, 0.8889, 0.8911, 0.8467, 0.8387, 0.7580,
        0.7953, 0.7847, 0.7768, 0.8843, 0.5559, 0.8843, 0.8480, 0.7661, 0.7203,
        0.8424, 0.8169, 0.8834, 0.8479, 0.5850, 0.8270, 0.8455, 0.8790, 0.8179,
        0.7661, 0.6284, 0.8673, 0.8701, 0.8844, 0.8927, 0.8179, 0.6756, 0.6104,
        0.8237, 0.8700, 0.6742, 0.8510, 0.7824, 0.6693, 0.8218, 0.8597, 0.8552,
        0.8368, 0.8176, 0.7819, 0.8956, 0.7265, 0.8682, 0.8901, 0.7413, 0.8069,
        0.8726, 0.8745, 0.8779, 0.8492, 0.6676, 0.8633, 0.8933, 0.8475, 0.8577,
        0.8860, 0.9380, 0.8952, 0.7923, 0.5382, 0.8099, 0.8434, 0.8615, 0.6144,
        0.7595, 0.5835, 0.8508, 0.7913, 0.7915, 0.9071, 0.8394, 0.8942, 0.8416,
        0.6026, 0.7352, 0.9368, 0.8577, 0.5853, 0.8096, 0.8955, 0.7353, 0.8917,
        0.8421, 0.7592, 0.8991, 0.7905, 0.7586, 0.8092, 0.8754, 0.8409, 0.8168,
        0.8598, 0.8779, 0.8767, 0.7993, 0.8355, 0.7937, 0.8422, 0.9050, 0.8061,
        0.6297, 0.8628, 0.9265, 0.8787, 0.8547, 0.8107, 0.7780, 0.6516, 0.7970,
        0.8590, 0.8660, 0.8208, 0.6912, 0.8532, 0.8047, 0.8804, 0.8128, 0.7787,
        0.8204, 0.8613, 0.7400, 0.4534, 0.8367, 0.8668, 0.8851, 0.8548, 0.8403,
        0.7495, 0.8424, 0.8923, 0.8694, 0.8564, 0.8698, 0.8157, 0.8838, 0.8837,
        0.5596, 0.8081, 0.8502, 0.7873, 0.8702, 0.9112, 0.8336, 0.7853, 0.8710,
        0.7409, 0.8685, 0.8279, 0.6094, 0.7515, 0.5970, 0.7526, 0.7315, 0.8309,
        0.7847, 0.7972, 0.8484, 0.7245, 0.7431, 0.8701, 0.9115, 0.8560, 0.7481,
        0.6642, 0.8704, 0.8032, 0.8389, 0.7622, 0.7851, 0.7702, 0.8661, 0.9157,
        0.8390, 0.5794, 0.8544, 0.9016, 0.9267, 0.8287, 0.7567, 0.7818, 0.8599,
        0.8340, 0.9022, 0.8063, 0.8436, 0.8407, 0.7927, 0.8369, 0.4733, 0.6010,
        0.8335, 0.8480, 0.5211, 0.8453, 0.8219, 0.8561, 0.6606, 0.6009, 0.8107,
        0.8098, 0.8870, 0.8808, 0.8828, 0.8021, 0.8088, 0.8007, 0.9076, 0.8465,
        0.8898, 0.7940, 0.7788, 0.8001, 0.5912, 0.7923, 0.8034, 0.8602, 0.8178,
        0.4458, 0.7684, 0.7899, 0.8782, 0.8650, 0.8821, 0.6866, 0.8157, 0.6317,
        0.6992, 0.8900, 0.5298, 0.8187, 0.8032, 0.8303, 0.8195, 0.7056, 0.6770,
        0.7600, 0.8762, 0.9075, 0.8662, 0.6613, 0.7992], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(775.0672, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([969, 1])
Inertia: tensor([130.5084], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([969, 1280])
Centroid_list: tensor([[-0.0382, -0.0556, -0.0599,  ..., -0.0508,  0.1011, -0.2516],
        [-0.0949, -0.0703, -0.0789,  ..., -0.0509,  0.0821, -0.2384],
        [-0.0949, -0.0703, -0.0789,  ..., -0.0509,  0.0821, -0.2384],
        ...,
        [-0.1282, -0.0162, -0.0787,  ..., -0.0359,  0.0938,  0.2248],
        [-0.0949, -0.0703, -0.0789,  ..., -0.0509,  0.0821, -0.2384],
        [-0.0604, -0.0293, -0.0968,  ..., -0.0250,  0.0937, -0.0796]],
       device='cuda:0')
Computed C_score: tensor([0.7807, 0.8348, 0.6485, 0.8749, 0.8735, 0.8969, 0.8097, 0.7941, 0.8367,
        0.8644, 0.7268, 0.8212, 0.8806, 0.6126, 0.8454, 0.8649, 0.7116, 0.4113,
        0.8326, 0.9139, 0.7188, 0.8230, 0.8680, 0.4684, 0.8209, 0.8043, 0.9169,
        0.8091, 0.8969, 0.8036, 0.8381, 0.6584, 0.7449, 0.7955, 0.8315, 0.8046,
        0.8347, 0.6404, 0.8458, 0.8676, 0.8808, 0.8123, 0.7353, 0.7992, 0.8968,
        0.8446, 0.8259, 0.8314, 0.8545, 0.7741, 0.8435, 0.8638, 0.9313, 0.8159,
        0.9263, 0.8537, 0.9418, 0.9030, 0.8439, 0.8608, 0.9121, 0.9038, 0.9361,
        0.8662, 0.9441, 0.8795, 0.8825, 0.8165, 0.8846, 0.8804, 0.9108, 0.8805,
        0.7799, 0.8633, 0.8939, 0.7323, 0.7853, 0.8696, 0.7998, 0.8555, 0.8432,
        0.8285, 0.7741, 0.9094, 0.7948, 0.6850, 0.8984, 0.9036, 0.8478, 0.4823,
        0.8518, 0.7168, 0.5960, 0.4107, 0.8253, 0.8482, 0.8688, 0.8259, 0.8372,
        0.8054, 0.8340, 0.7517, 0.8033, 0.7588, 0.9116, 0.5842, 0.8888, 0.7887,
        0.9044, 0.6681, 0.6983, 0.8392, 0.7845, 0.8305, 0.8100, 0.3646, 0.8688,
        0.6446, 0.8638, 0.7204, 0.8762, 0.8066, 0.7426, 0.8917, 0.8249, 0.9351,
        0.8740, 0.9112, 0.7478, 0.6827, 0.8905, 0.6911, 0.8220, 0.9401, 0.8754,
        0.6800, 0.7539, 0.8412, 0.8064, 0.8053, 0.7398, 0.8237, 0.8406, 0.5310,
        0.9004, 0.9064, 0.9000, 0.8632, 0.8695, 0.7518, 0.7312, 0.7798, 0.5685,
        0.8840, 0.8646, 0.7348, 0.8395, 0.8087, 0.8015, 0.8636, 0.8472, 0.8721,
        0.7742, 0.9210, 0.8593, 0.7358, 0.8775, 0.9136, 0.5635, 0.7917, 0.8252,
        0.8383, 0.8420, 0.9152, 0.7399, 0.6776, 0.5129, 0.8475, 0.8890, 0.8145,
        0.6811, 0.7103, 0.8014, 0.9129, 0.8921, 0.8790, 0.5258, 0.9088, 0.9185,
        0.8862, 0.5928, 0.8531, 0.8815, 0.8700, 0.8448, 0.8587, 0.7305, 0.4766,
        0.8753, 0.7931, 0.5693, 0.9116, 0.7068, 0.9008, 0.8691, 0.8377, 0.8447,
        0.7904, 0.8688, 0.7703, 0.8835, 0.8181, 0.8759, 0.6903, 0.8213, 0.8963,
        0.6814, 0.8826, 0.9116, 0.5388, 0.7720, 0.7757, 0.8425, 0.7717, 0.4712,
        0.6610, 0.6082, 0.8701, 0.8010, 0.8019, 0.8938, 0.8152, 0.8706, 0.9019,
        0.8168, 0.8881, 0.8158, 0.8562, 0.8806, 0.9090, 0.8160, 0.6752, 0.8757,
        0.8242, 0.6628, 0.8513, 0.9002, 0.8710, 0.8424, 0.8319, 0.7742, 0.8674,
        0.8074, 0.8724, 0.8499, 0.8938, 0.8961, 0.6044, 0.6701, 0.8437, 0.8592,
        0.8546, 0.8768, 0.8459, 0.8501, 0.8684, 0.8166, 0.8990, 0.8287, 0.7309,
        0.7082, 0.5143, 0.8044, 0.7243, 0.8747, 0.8679, 0.6488, 0.8385, 0.8488,
        0.8508, 0.8175, 0.8665, 0.8345, 0.8126, 0.9154, 0.8078, 0.6614, 0.8290,
        0.8572, 0.8417, 0.8916, 0.9025, 0.8559, 0.8210, 0.7878, 0.8535, 0.7219,
        0.8592, 0.8656, 0.8401, 0.7243, 0.8627, 0.8913, 0.6610, 0.8364, 0.7778,
        0.8062, 0.6312, 0.8252, 0.8349, 0.7725, 0.8479, 0.8114, 0.7036, 0.8112,
        0.8354, 0.8380, 0.8643, 0.8359, 0.8545, 0.8872, 0.7014, 0.8240, 0.7781,
        0.8321, 0.6521, 0.9005, 0.9213, 0.8866, 0.8490, 0.8274, 0.8267, 0.6157,
        0.8152, 0.8955, 0.8266, 0.6560, 0.8387, 0.5757, 0.7958, 0.8635, 0.8601,
        0.8118, 0.8786, 0.7993, 0.5421, 0.8569, 0.6872, 0.4473, 0.6198, 0.6884,
        0.8612, 0.8692, 0.8562, 0.8609, 0.8766, 0.7657, 0.8652, 0.8063, 0.7069,
        0.8371, 0.8002, 0.8487, 0.7740, 0.8471, 0.8865, 0.8347, 0.8142, 0.7929,
        0.7855, 0.6885, 0.8327, 0.7883, 0.7101, 0.9012, 0.8424, 0.7954, 0.8953,
        0.8420, 0.8258, 0.5843, 0.8114, 0.7998, 0.8599, 0.8148, 0.7843, 0.6206,
        0.8879, 0.7809, 0.7777, 0.7705, 0.7933, 0.8362, 0.7423, 0.8779, 0.8631,
        0.7806, 0.8672, 0.7221, 0.8018, 0.8535, 0.9225, 0.7473, 0.5471, 0.8234,
        0.7943, 0.7440, 0.8666, 0.7559, 0.8886, 0.7849, 0.8437, 0.8588, 0.8612,
        0.8470, 0.6758, 0.7571, 0.7272, 0.8831, 0.4637, 0.7480, 0.8638, 0.8336,
        0.7045, 0.7473, 0.8848, 0.6972, 0.5977, 0.8429, 0.8136, 0.8821, 0.8163,
        0.8923, 0.8651, 0.8912, 0.8666, 0.8915, 0.9022, 0.8973, 0.8448, 0.9015,
        0.7263, 0.8372, 0.7444, 0.8852, 0.8982, 0.8300, 0.8477, 0.8934, 0.8848,
        0.8782, 0.8789, 0.9165, 0.8884, 0.9279, 0.6848, 0.8522, 0.8250, 0.7200,
        0.8559, 0.7695, 0.8084, 0.8194, 0.8561, 0.8460, 0.8987, 0.8618, 0.8807,
        0.7860, 0.7934, 0.8645, 0.8567, 0.7028, 0.8654, 0.9370, 0.8495, 0.8828,
        0.7874, 0.8730, 0.8606, 0.9176, 0.7799, 0.8440, 0.7581, 0.8418, 0.8479,
        0.7030, 0.7891, 0.7682, 0.8446, 0.8053, 0.8382, 0.8396, 0.7945, 0.9144,
        0.8090, 0.8785, 0.8093, 0.8544, 0.8720, 0.7002, 0.8977, 0.8933, 0.8867,
        0.8775, 0.8050, 0.6140, 0.8897, 0.8129, 0.8515, 0.9152, 0.8340, 0.7796,
        0.8718, 0.8967, 0.8121, 0.8295, 0.8234, 0.8489, 0.8944, 0.5884, 0.7473,
        0.6340, 0.7887, 0.8691, 0.7908, 0.8188, 0.8783, 0.8546, 0.8744, 0.6489,
        0.9227, 0.7596, 0.9001, 0.8629, 0.8205, 0.8367, 0.7090, 0.8840, 0.7820,
        0.7429, 0.8049, 0.7719, 0.8920, 0.6786, 0.7720, 0.8424, 0.6697, 0.8441,
        0.8121, 0.8587, 0.8704, 0.8097, 0.8764, 0.9107, 0.8250, 0.6086, 0.8998,
        0.8357, 0.8320, 0.8800, 0.6422, 0.8898, 0.8423, 0.8477, 0.7133, 0.6792,
        0.8641, 0.8949, 0.8739, 0.4626, 0.7707, 0.8146, 0.7991, 0.8595, 0.6789,
        0.8172, 0.7402, 0.7491, 0.8774, 0.8902, 0.8223, 0.8910, 0.8433, 0.8207,
        0.5578, 0.7531, 0.8725, 0.8080, 0.7801, 0.7282, 0.8389, 0.7092, 0.8845,
        0.8765, 0.8859, 0.6396, 0.8291, 0.7975, 0.7768, 0.7038, 0.8242, 0.8572,
        0.8598, 0.8099, 0.8444, 0.8418, 0.8176, 0.8874, 0.9086, 0.8893, 0.8743,
        0.8462, 0.8807, 0.8324, 0.9068, 0.8330, 0.8713, 0.7566, 0.8854, 0.7738,
        0.8000, 0.8251, 0.8850, 0.8302, 0.8924, 0.4293, 0.8526, 0.8782, 0.8147,
        0.7812, 0.4532, 0.8424, 0.8376, 0.8331, 0.7763, 0.8960, 0.7778, 0.8961,
        0.7674, 0.8918, 0.7581, 0.8168, 0.8289, 0.7780, 0.4766, 0.8019, 0.8456,
        0.8421, 0.5757, 0.8413, 0.8699, 0.8432, 0.8731, 0.8845, 0.8578, 0.9070,
        0.8214, 0.8350, 0.7295, 0.8496, 0.8661, 0.6162, 0.8751, 0.8848, 0.6173,
        0.7703, 0.8222, 0.8769, 0.8756, 0.8321, 0.7239, 0.7804, 0.8895, 0.6867,
        0.8437, 0.7829, 0.8419, 0.8382, 0.5537, 0.7926, 0.9110, 0.8682, 0.8762,
        0.8423, 0.8669, 0.6778, 0.7982, 0.5762, 0.5379, 0.7730, 0.8547, 0.9029,
        0.8249, 0.8178, 0.7942, 0.7974, 0.8555, 0.8897, 0.9090, 0.7372, 0.7523,
        0.9170, 0.8053, 0.8253, 0.7717, 0.8676, 0.6528, 0.9064, 0.6722, 0.9076,
        0.8441, 0.7689, 0.7871, 0.6307, 0.6548, 0.7923, 0.7057, 0.8219, 0.8014,
        0.8564, 0.8944, 0.8910, 0.8039, 0.8853, 0.8946, 0.8615, 0.8411, 0.7347,
        0.8382, 0.7903, 0.7766, 0.8876, 0.5106, 0.8858, 0.8572, 0.7604, 0.7179,
        0.9229, 0.8175, 0.8765, 0.8412, 0.6224, 0.8199, 0.8516, 0.8800, 0.8178,
        0.8086, 0.7464, 0.8814, 0.8735, 0.8856, 0.8923, 0.9260, 0.6739, 0.6047,
        0.8786, 0.8639, 0.6702, 0.8391, 0.7761, 0.6763, 0.8197, 0.9228, 0.8572,
        0.8462, 0.9162, 0.7763, 0.8970, 0.7322, 0.8680, 0.8877, 0.7470, 0.7902,
        0.8743, 0.8750, 0.8847, 0.8393, 0.6434, 0.8593, 0.9014, 0.8786, 0.8602,
        0.8842, 0.9376, 0.8957, 0.7431, 0.5136, 0.8145, 0.8467, 0.8613, 0.6478,
        0.7595, 0.6877, 0.8547, 0.8135, 0.7971, 0.9072, 0.8402, 0.8881, 0.8463,
        0.6006, 0.7338, 0.9368, 0.8595, 0.7083, 0.8102, 0.8884, 0.7357, 0.8930,
        0.8420, 0.7556, 0.9012, 0.7907, 0.7578, 0.8103, 0.8809, 0.8637, 0.8254,
        0.8994, 0.8777, 0.8707, 0.8025, 0.8357, 0.7929, 0.8421, 0.9099, 0.8051,
        0.6265, 0.8634, 0.9301, 0.8845, 0.8571, 0.8145, 0.7791, 0.6255, 0.9005,
        0.8602, 0.8642, 0.8191, 0.6894, 0.8420, 0.7999, 0.8813, 0.8034, 0.8177,
        0.8276, 0.8553, 0.7379, 0.4367, 0.8344, 0.9418, 0.8821, 0.8846, 0.8552,
        0.8042, 0.8088, 0.8929, 0.9474, 0.8568, 0.8719, 0.8148, 0.8781, 0.8869,
        0.5618, 0.8026, 0.8496, 0.7892, 0.8572, 0.9114, 0.9337, 0.7850, 0.8756,
        0.7409, 0.8707, 0.8247, 0.5905, 0.7333, 0.5772, 0.7501, 0.7267, 0.8657,
        0.8288, 0.8341, 0.8771, 0.7932, 0.7443, 0.8627, 0.9115, 0.8443, 0.7515,
        0.6647, 0.8684, 0.8102, 0.8572, 0.7466, 0.7793, 0.7780, 0.8755, 0.8825,
        0.8368, 0.6282, 0.8605, 0.9055, 0.9271, 0.8277, 0.7896, 0.7951, 0.8602,
        0.8352, 0.9050, 0.8031, 0.8417, 0.8402, 0.7912, 0.8580, 0.4682, 0.6088,
        0.8750, 0.9065, 0.5219, 0.8466, 0.8214, 0.8574, 0.6857, 0.6004, 0.8279,
        0.8351, 0.8861, 0.8879, 0.8844, 0.7996, 0.8114, 0.8164, 0.9100, 0.8407,
        0.8949, 0.7840, 0.7865, 0.7679, 0.6917, 0.7920, 0.8592, 0.8567, 0.8032,
        0.4384, 0.7718, 0.7898, 0.8798, 0.8612, 0.8833, 0.7725, 0.8071, 0.7515,
        0.8207, 0.8913, 0.5339, 0.8406, 0.8132, 0.8255, 0.8591, 0.7060, 0.6696,
        0.7438, 0.8794, 0.9126, 0.8649, 0.6512, 0.7986], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(783.1700, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0009, 0.0027, 0.0052, 0.0082], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1071, 1280])
S-Scores: tensor([0.6575, 1.9477, 3.7885, 6.1414], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1071, 1])
Inertia: tensor([299.1945], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1071, 1280])
Centroid_list: tensor([[-0.0356, -0.0621, -0.0510,  ..., -0.0491,  0.0737, -0.1259],
        [-0.0356, -0.0621, -0.0510,  ..., -0.0491,  0.0737, -0.1259],
        [-0.0356, -0.0621, -0.0510,  ..., -0.0491,  0.0737, -0.1259],
        ...,
        [-0.0356, -0.0621, -0.0510,  ..., -0.0491,  0.0737, -0.1259],
        [-0.0356, -0.0621, -0.0510,  ..., -0.0491,  0.0737, -0.1259],
        [-0.0483, -0.0636, -0.0566,  ..., -0.0565,  0.0846, -0.2214]],
       device='cuda:0')
Computed C_score: tensor([0.5859, 0.7496, 0.5473,  ..., 0.5477, 0.7803, 0.8021], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(737.9759, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1071, 1])
Inertia: tensor([271.6940], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1071, 1280])
Centroid_list: tensor([[-0.0257, -0.0503, -0.0474,  ..., -0.0422,  0.0749, -0.0296],
        [-0.0590, -0.0859, -0.0616,  ..., -0.0650,  0.0724, -0.3589],
        [-0.0257, -0.0503, -0.0474,  ..., -0.0422,  0.0749, -0.0296],
        ...,
        [-0.0257, -0.0503, -0.0474,  ..., -0.0422,  0.0749, -0.0296],
        [-0.0590, -0.0859, -0.0616,  ..., -0.0650,  0.0724, -0.3589],
        [-0.0435, -0.0578, -0.0521,  ..., -0.0530,  0.0880, -0.1541]],
       device='cuda:0')
Computed C_score: tensor([0.6352, 0.7474, 0.6336,  ..., 0.5301, 0.8047, 0.7715], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(770.7866, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1071, 1])
Inertia: tensor([269.8497], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1071, 1280])
Centroid_list: tensor([[-0.0262, -0.0500, -0.0479,  ..., -0.0413,  0.0744, -0.0273],
        [-0.0579, -0.0855, -0.0615,  ..., -0.0647,  0.0726, -0.3538],
        [-0.0262, -0.0500, -0.0479,  ..., -0.0413,  0.0744, -0.0273],
        ...,
        [-0.0262, -0.0500, -0.0479,  ..., -0.0413,  0.0744, -0.0273],
        [-0.0579, -0.0855, -0.0615,  ..., -0.0647,  0.0726, -0.3538],
        [-0.0340, -0.0495, -0.0406,  ..., -0.0600,  0.0887, -0.1017]],
       device='cuda:0')
Computed C_score: tensor([0.6383, 0.7449, 0.6406,  ..., 0.5289, 0.8035, 0.7125], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(780.0179, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1071, 1])
Inertia: tensor([284.3493], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1071, 1280])
Centroid_list: tensor([[-0.0144, -0.0462, -0.0536,  ..., -0.0401,  0.0817, -0.1418],
        [-0.0620, -0.0878, -0.0618,  ..., -0.0651,  0.0712, -0.3692],
        [-0.0390, -0.0565, -0.0430,  ..., -0.0449,  0.0688,  0.0686],
        ...,
        [-0.0390, -0.0565, -0.0430,  ..., -0.0449,  0.0688,  0.0686],
        [-0.0620, -0.0878, -0.0618,  ..., -0.0651,  0.0712, -0.3692],
        [-0.0344, -0.0505, -0.0416,  ..., -0.0625,  0.0876, -0.1280]],
       device='cuda:0')
Computed C_score: tensor([0.6145, 0.7381, 0.6831,  ..., 0.5821, 0.8034, 0.7260], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(797.8842, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0009, 0.0025, 0.0048, 0.0076], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([3184, 1280])
S-Scores: tensor([0.6818, 2.0551, 3.9655, 6.5121], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([3184, 1])
Inertia: tensor([160.7335], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([3184, 1280])
Centroid_list: tensor([[-0.0277, -0.0685, -0.0521,  ..., -0.0627,  0.0809, -0.1125],
        [-0.0277, -0.0685, -0.0521,  ..., -0.0627,  0.0809, -0.1125],
        [ 0.0266, -0.0716, -0.0375,  ..., -0.0829,  0.0645,  0.1110],
        ...,
        [ 0.0266, -0.0716, -0.0375,  ..., -0.0829,  0.0645,  0.1110],
        [ 0.0266, -0.0716, -0.0375,  ..., -0.0829,  0.0645,  0.1110],
        [ 0.0266, -0.0716, -0.0375,  ..., -0.0829,  0.0645,  0.1110]],
       device='cuda:0')
Computed C_score: tensor([0.7553, 0.7257, 0.7987,  ..., 0.7514, 0.7837, 0.5676], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2293.6016, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3184, 1])
Inertia: tensor([180.6539], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([3184, 1280])
Centroid_list: tensor([[-0.0266, -0.0627, -0.0490,  ..., -0.0579,  0.0837, -0.0813],
        [-0.0121, -0.0864, -0.0523,  ..., -0.0844,  0.0656, -0.0922],
        [-0.0121, -0.0864, -0.0523,  ..., -0.0844,  0.0656, -0.0922],
        ...,
        [-0.0121, -0.0864, -0.0523,  ..., -0.0844,  0.0656, -0.0922],
        [ 0.0458, -0.0624, -0.0304,  ..., -0.0803,  0.0654,  0.2107],
        [ 0.0458, -0.0624, -0.0304,  ..., -0.0803,  0.0654,  0.2107]],
       device='cuda:0')
Computed C_score: tensor([0.7362, 0.7012, 0.8654,  ..., 0.8042, 0.7812, 0.6304], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2374.3281, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3184, 1])
Inertia: tensor([129.2812], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([3184, 1280])
Centroid_list: tensor([[-0.0034, -0.0537, -0.0327,  ..., -0.0702,  0.0863,  0.0517],
        [-0.0132, -0.0875, -0.0532,  ..., -0.0836,  0.0651, -0.0979],
        [-0.0132, -0.0875, -0.0532,  ..., -0.0836,  0.0651, -0.0979],
        ...,
        [-0.0132, -0.0875, -0.0532,  ..., -0.0836,  0.0651, -0.0979],
        [ 0.0458, -0.0627, -0.0314,  ..., -0.0800,  0.0642,  0.2218],
        [ 0.0458, -0.0627, -0.0314,  ..., -0.0800,  0.0642,  0.2218]],
       device='cuda:0')
Computed C_score: tensor([0.8031, 0.7005, 0.8677,  ..., 0.8056, 0.7805, 0.6343], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2404.1963, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3184, 1])
Inertia: tensor([130.2442], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([3184, 1280])
Centroid_list: tensor([[-0.0060, -0.0532, -0.0328,  ..., -0.0710,  0.0860,  0.0362],
        [-0.0176, -0.0898, -0.0551,  ..., -0.0844,  0.0643, -0.1038],
        [-0.0176, -0.0898, -0.0551,  ..., -0.0844,  0.0643, -0.1038],
        ...,
        [-0.0176, -0.0898, -0.0551,  ..., -0.0844,  0.0643, -0.1038],
        [ 0.0267, -0.0609, -0.0453,  ..., -0.0770,  0.0677,  0.2267],
        [ 0.0267, -0.0609, -0.0453,  ..., -0.0770,  0.0677,  0.2267]],
       device='cuda:0')
Computed C_score: tensor([0.8026, 0.6931, 0.8617,  ..., 0.8116, 0.8009, 0.6905], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2439.6094, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0003, 0.0009, 0.0016, 0.0027], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([2201, 1280])
S-Scores: tensor([0.6885, 1.9776, 2.7437, 6.6811], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([2201, 1])
Inertia: tensor([185.4596], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([2201, 1280])
Centroid_list: tensor([[-0.0025, -0.0492, -0.0740,  ..., -0.0395,  0.0402, -0.3433],
        [-0.0369, -0.0680, -0.0691,  ..., -0.0533,  0.0741, -0.3942],
        [-0.0025, -0.0492, -0.0740,  ..., -0.0395,  0.0402, -0.3433],
        ...,
        [-0.0025, -0.0492, -0.0740,  ..., -0.0395,  0.0402, -0.3433],
        [-0.0025, -0.0492, -0.0740,  ..., -0.0395,  0.0402, -0.3433],
        [-0.0025, -0.0492, -0.0740,  ..., -0.0395,  0.0402, -0.3433]],
       device='cuda:0')
Computed C_score: tensor([0.7146, 0.6834, 0.5434,  ..., 0.6824, 0.7241, 0.7524], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1596.9673, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2201, 1])
Inertia: tensor([178.4132], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([2201, 1280])
Centroid_list: tensor([[-0.0250, -0.0635, -0.0712,  ..., -0.0565,  0.0609, -0.3883],
        [-0.0250, -0.0635, -0.0712,  ..., -0.0565,  0.0609, -0.3883],
        [ 0.0081, -0.0413, -0.0740,  ..., -0.0322,  0.0327, -0.3192],
        ...,
        [ 0.0081, -0.0413, -0.0740,  ..., -0.0322,  0.0327, -0.3192],
        [ 0.0081, -0.0413, -0.0740,  ..., -0.0322,  0.0327, -0.3192],
        [ 0.0081, -0.0413, -0.0740,  ..., -0.0322,  0.0327, -0.3192]],
       device='cuda:0')
Computed C_score: tensor([0.7268, 0.7305, 0.5781,  ..., 0.7195, 0.7765, 0.7332], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1635.9135, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2201, 1])
Inertia: tensor([177.8616], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([2201, 1280])
Centroid_list: tensor([[-0.0248, -0.0636, -0.0714,  ..., -0.0570,  0.0605, -0.3849],
        [-0.0248, -0.0636, -0.0714,  ..., -0.0570,  0.0605, -0.3849],
        [ 0.0084, -0.0410, -0.0739,  ..., -0.0315,  0.0325, -0.3204],
        ...,
        [ 0.0084, -0.0410, -0.0739,  ..., -0.0315,  0.0325, -0.3204],
        [ 0.0084, -0.0410, -0.0739,  ..., -0.0315,  0.0325, -0.3204],
        [ 0.0084, -0.0410, -0.0739,  ..., -0.0315,  0.0325, -0.3204]],
       device='cuda:0')
Computed C_score: tensor([0.7278, 0.7298, 0.5802,  ..., 0.7184, 0.7784, 0.7329], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1636.8204, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2201, 1])
Inertia: tensor([132.5467], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([2201, 1280])
Centroid_list: tensor([[-0.0300, -0.0763, -0.0729,  ..., -0.0566,  0.0499, -0.4419],
        [-0.0300, -0.0763, -0.0729,  ..., -0.0566,  0.0499, -0.4419],
        [ 0.0103, -0.0428, -0.0740,  ..., -0.0244,  0.0207, -0.3260],
        ...,
        [ 0.0103, -0.0428, -0.0740,  ..., -0.0244,  0.0207, -0.3260],
        [ 0.0103, -0.0428, -0.0740,  ..., -0.0244,  0.0207, -0.3260],
        [ 0.0103, -0.0428, -0.0740,  ..., -0.0244,  0.0207, -0.3260]],
       device='cuda:0')
Computed C_score: tensor([0.8061, 0.7651, 0.5977,  ..., 0.7220, 0.7912, 0.7616], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1693.3484, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0004, 0.0012, 0.0017, 0.0039], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([11, 1280])
S-Scores: tensor([0.6402, 1.5625, 2.9523, 4.6825], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([189.7540], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[ 0.0361, -0.0758, -0.0233,  ..., -0.0801,  0.0808, -0.2960],
        [-0.0325, -0.0923, -0.0444,  ..., -0.0616,  0.0732, -0.7168],
        [ 0.0361, -0.0758, -0.0233,  ..., -0.0801,  0.0808, -0.2960],
        ...,
        [ 0.0361, -0.0758, -0.0233,  ..., -0.0801,  0.0808, -0.2960],
        [-0.0325, -0.0923, -0.0444,  ..., -0.0616,  0.0732, -0.7168],
        [-0.0325, -0.0923, -0.0444,  ..., -0.0616,  0.0732, -0.7168]],
       device='cuda:0')
Computed C_score: tensor([0.6699, 0.7504, 0.8660, 0.8496, 0.6941, 0.6920, 0.7169, 0.7076, 0.8007,
        0.8107, 0.8309], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(8.3887, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([187.7267], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[ 0.0365, -0.0762, -0.0390,  ..., -0.0794,  0.0848, -0.3610],
        [-0.0325, -0.0923, -0.0444,  ..., -0.0616,  0.0732, -0.7168],
        [ 0.0365, -0.0762, -0.0390,  ..., -0.0794,  0.0848, -0.3610],
        ...,
        [ 0.0365, -0.0762, -0.0390,  ..., -0.0794,  0.0848, -0.3610],
        [-0.0325, -0.0923, -0.0444,  ..., -0.0616,  0.0732, -0.7168],
        [-0.0325, -0.0923, -0.0444,  ..., -0.0616,  0.0732, -0.7168]],
       device='cuda:0')
Computed C_score: tensor([0.6783, 0.7504, 0.8621, 0.8496, 1.0000, 0.6920, 0.7306, 0.7416, 0.8187,
        0.8107, 0.8309], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(8.7648, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([187.7267], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[ 0.0365, -0.0762, -0.0390,  ..., -0.0794,  0.0848, -0.3610],
        [-0.0147, -0.0996, -0.0446,  ..., -0.0616,  0.0697, -0.4818],
        [ 0.0365, -0.0762, -0.0390,  ..., -0.0794,  0.0848, -0.3610],
        ...,
        [ 0.0365, -0.0762, -0.0390,  ..., -0.0794,  0.0848, -0.3610],
        [-0.0859, -0.0704, -0.0440,  ..., -0.0614,  0.0838, -1.4220],
        [-0.0147, -0.0996, -0.0446,  ..., -0.0616,  0.0697, -0.4818]],
       device='cuda:0')
Computed C_score: tensor([0.6783, 0.7722, 0.8621, 0.8066, 1.0000, 0.7687, 0.7306, 0.7416, 0.8187,
        1.0000, 0.8045], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(8.9831, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([118.1804], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[ 0.0105, -0.0940, -0.0397,  ..., -0.0828,  0.0716, -0.3368],
        [ 0.0105, -0.0940, -0.0397,  ..., -0.0828,  0.0716, -0.3368],
        [ 0.0534, -0.0792, -0.0383,  ..., -0.0775,  0.0880, -0.4084],
        ...,
        [ 0.0534, -0.0792, -0.0383,  ..., -0.0775,  0.0880, -0.4084],
        [-0.0859, -0.0704, -0.0440,  ..., -0.0614,  0.0838, -1.4220],
        [ 0.0105, -0.0940, -0.0397,  ..., -0.0828,  0.0716, -0.3368]],
       device='cuda:0')
Computed C_score: tensor([0.8041, 0.7736, 0.9213, 1.0000, 1.0000, 0.7693, 0.7326, 0.7363, 0.8793,
        1.0000, 0.7145], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(9.3309, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0709, 0.1513, 0.2474, 0.3341], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([3184, 1280])
S-Scores: tensor([0.6818, 2.0551, 3.9655, 6.5121], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([3184, 1])
Inertia: tensor([160.7335], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([3184, 1280])
Centroid_list: tensor([[-0.0277, -0.0685, -0.0521,  ..., -0.0627,  0.0809, -0.1125],
        [-0.0277, -0.0685, -0.0521,  ..., -0.0627,  0.0809, -0.1125],
        [ 0.0266, -0.0716, -0.0375,  ..., -0.0829,  0.0645,  0.1110],
        ...,
        [ 0.0266, -0.0716, -0.0375,  ..., -0.0829,  0.0645,  0.1110],
        [ 0.0266, -0.0716, -0.0375,  ..., -0.0829,  0.0645,  0.1110],
        [-0.0277, -0.0685, -0.0521,  ..., -0.0627,  0.0809, -0.1125]],
       device='cuda:0')
Computed C_score: tensor([0.7553, 0.7257, 0.7987,  ..., 0.7514, 0.7837, 0.6289], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2293.6628, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3184, 1])
Inertia: tensor([180.6539], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([3184, 1280])
Centroid_list: tensor([[-0.0266, -0.0627, -0.0490,  ..., -0.0579,  0.0837, -0.0813],
        [-0.0121, -0.0864, -0.0523,  ..., -0.0844,  0.0656, -0.0922],
        [-0.0121, -0.0864, -0.0523,  ..., -0.0844,  0.0656, -0.0922],
        ...,
        [-0.0121, -0.0864, -0.0523,  ..., -0.0844,  0.0656, -0.0922],
        [ 0.0458, -0.0624, -0.0304,  ..., -0.0803,  0.0654,  0.2107],
        [-0.0121, -0.0864, -0.0523,  ..., -0.0844,  0.0656, -0.0922]],
       device='cuda:0')
Computed C_score: tensor([0.7362, 0.7012, 0.8654,  ..., 0.8042, 0.7812, 0.6468], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2374.3445, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3184, 1])
Inertia: tensor([129.2812], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([3184, 1280])
Centroid_list: tensor([[-0.0034, -0.0537, -0.0327,  ..., -0.0702,  0.0863,  0.0517],
        [-0.0132, -0.0875, -0.0532,  ..., -0.0836,  0.0651, -0.0979],
        [-0.0132, -0.0875, -0.0532,  ..., -0.0836,  0.0651, -0.0979],
        ...,
        [-0.0132, -0.0875, -0.0532,  ..., -0.0836,  0.0651, -0.0979],
        [ 0.0458, -0.0627, -0.0314,  ..., -0.0800,  0.0642,  0.2218],
        [-0.0132, -0.0875, -0.0532,  ..., -0.0836,  0.0651, -0.0979]],
       device='cuda:0')
Computed C_score: tensor([0.8031, 0.7005, 0.8677,  ..., 0.8056, 0.7805, 0.6535], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2404.2153, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3184, 1])
Inertia: tensor([130.2442], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([3184, 1280])
Centroid_list: tensor([[-0.0060, -0.0532, -0.0328,  ..., -0.0710,  0.0860,  0.0362],
        [-0.0176, -0.0898, -0.0551,  ..., -0.0844,  0.0643, -0.1038],
        [-0.0176, -0.0898, -0.0551,  ..., -0.0844,  0.0643, -0.1038],
        ...,
        [-0.0176, -0.0898, -0.0551,  ..., -0.0844,  0.0643, -0.1038],
        [ 0.0267, -0.0609, -0.0453,  ..., -0.0770,  0.0677,  0.2267],
        [-0.0176, -0.0898, -0.0551,  ..., -0.0844,  0.0643, -0.1038]],
       device='cuda:0')
Computed C_score: tensor([0.8026, 0.6931, 0.8617,  ..., 0.8116, 0.8009, 0.6538], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2439.5728, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0003, 0.0009, 0.0016, 0.0027], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([741, 1280])
S-Scores: tensor([0.6913, 2.0724, 3.9812, 6.5817], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([741, 1])
Inertia: tensor([149.5996], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([741, 1280])
Centroid_list: tensor([[-0.0439, -0.0709, -0.0497,  ..., -0.0610,  0.0844, -0.4390],
        [-0.0439, -0.0709, -0.0497,  ..., -0.0610,  0.0844, -0.4390],
        [-0.0248, -0.0560, -0.0474,  ..., -0.0686,  0.0684, -0.7090],
        ...,
        [-0.0439, -0.0709, -0.0497,  ..., -0.0610,  0.0844, -0.4390],
        [-0.0248, -0.0560, -0.0474,  ..., -0.0686,  0.0684, -0.7090],
        [-0.0439, -0.0709, -0.0497,  ..., -0.0610,  0.0844, -0.4390]],
       device='cuda:0')
Computed C_score: tensor([0.8660, 0.8717, 0.7281, 0.6997, 0.6440, 0.7552, 0.8292, 0.5884, 0.7692,
        0.4733, 0.6082, 0.6437, 0.7916, 0.7338, 0.8082, 0.6994, 0.6187, 0.8496,
        0.5785, 0.4919, 0.7069, 0.5963, 0.6628, 0.6082, 0.6072, 0.6656, 0.7806,
        0.7460, 0.7919, 0.8554, 0.5932, 0.7947, 0.8020, 0.6022, 0.7747, 0.5660,
        0.6876, 0.6632, 0.7143, 0.7424, 0.5698, 0.7305, 0.7043, 0.7758, 0.6064,
        0.5649, 0.7265, 0.7256, 0.7266, 0.8519, 0.5447, 0.6121, 0.6675, 0.6286,
        0.5284, 0.6865, 0.7492, 0.6616, 0.7529, 0.6604, 0.6961, 0.7200, 0.7620,
        0.7476, 0.7601, 0.4340, 0.8594, 0.4931, 0.6332, 0.6235, 0.6437, 0.6817,
        0.7383, 0.6388, 0.7011, 0.5903, 0.6279, 0.7845, 0.6295, 0.5963, 0.6135,
        0.5218, 0.7293, 0.6558, 0.6332, 0.7566, 0.6526, 0.6138, 0.6891, 0.6508,
        0.5952, 0.7113, 0.6919, 0.7205, 0.6206, 0.6982, 0.8753, 0.8365, 0.7845,
        0.5877, 0.6347, 0.6704, 0.7572, 0.6486, 0.7398, 0.6242, 0.6706, 0.8470,
        0.6457, 0.6930, 0.6938, 0.6932, 0.7998, 0.6830, 0.6875, 0.7257, 0.6489,
        0.7382, 0.8126, 0.7344, 0.7295, 0.6718, 0.6592, 0.7361, 0.7488, 0.6204,
        0.8900, 0.5824, 0.6796, 0.6512, 0.5966, 0.5502, 0.7254, 0.3292, 0.6517,
        0.8146, 0.8095, 0.7088, 0.7473, 0.6217, 0.6731, 0.6668, 0.7105, 0.6588,
        0.6385, 0.5925, 0.4768, 0.7480, 0.6900, 0.6513, 0.6527, 0.7577, 0.8300,
        0.6518, 0.6854, 0.5923, 0.6974, 0.7743, 0.6765, 0.7902, 0.7291, 0.5242,
        0.7085, 0.6341, 0.5319, 0.5748, 0.6841, 0.6539, 0.8050, 0.6797, 0.7947,
        0.6323, 0.5952, 0.6004, 0.6321, 0.7403, 0.6164, 0.5969, 0.6747, 0.7530,
        0.6882, 0.6366, 0.5276, 0.6470, 0.6777, 0.8028, 0.6735, 0.5978, 0.6331,
        0.7214, 0.7224, 0.6363, 0.6671, 0.7541, 0.5610, 0.7984, 0.7780, 0.5584,
        0.7980, 0.6495, 0.5574, 0.4753, 0.7420, 0.7826, 0.6254, 0.7638, 0.6989,
        0.6215, 0.6614, 0.6548, 0.7233, 0.6482, 0.6796, 0.6070, 0.5679, 0.5980,
        0.7761, 0.6308, 0.6984, 0.5881, 0.6986, 0.6967, 0.6643, 0.5962, 0.7357,
        0.6532, 0.7317, 0.7756, 0.6858, 0.6575, 0.6894, 0.7856, 0.7159, 0.7164,
        0.6942, 0.6745, 0.7491, 0.6775, 0.6236, 0.6321, 0.5580, 0.6667, 0.7672,
        0.7961, 0.7552, 0.6121, 0.6346, 0.6828, 0.7418, 0.6573, 0.6938, 0.6705,
        0.6964, 0.6222, 0.7267, 0.6126, 0.6996, 0.8306, 0.5056, 0.6590, 0.7809,
        0.6446, 0.6239, 0.6389, 0.7587, 0.6072, 0.7140, 0.8798, 0.8271, 0.6982,
        0.6487, 0.7392, 0.6263, 0.6154, 0.5698, 0.5721, 0.5492, 0.7409, 0.6724,
        0.7003, 0.8070, 0.7789, 0.4988, 0.6952, 0.5705, 0.7279, 0.7179, 0.7120,
        0.6900, 0.5700, 0.7801, 0.8760, 0.7355, 0.6562, 0.6285, 0.7068, 0.7081,
        0.6547, 0.5793, 0.6294, 0.6442, 0.6898, 0.5656, 0.7168, 0.7685, 0.6040,
        0.6041, 0.6632, 0.8664, 0.6880, 0.6803, 0.5054, 0.7510, 0.6610, 0.7511,
        0.8551, 0.5582, 0.6370, 0.6551, 0.7333, 0.8225, 0.6040, 0.6819, 0.7856,
        0.8647, 0.6981, 0.6314, 0.5306, 0.7073, 0.7779, 0.6932, 0.8161, 0.6924,
        0.8959, 0.6684, 0.7078, 0.7245, 0.5897, 0.8650, 0.6119, 0.5705, 0.6784,
        0.7219, 0.6865, 0.6963, 0.6321, 0.7333, 0.6619, 0.8792, 0.7947, 0.6975,
        0.7206, 0.6573, 0.7777, 0.7282, 0.7324, 0.5988, 0.6756, 0.6004, 0.6186,
        0.6617, 0.7072, 0.8649, 0.6293, 0.8874, 0.7074, 0.8128, 0.7052, 0.7496,
        0.6446, 0.6614, 0.7806, 0.6413, 0.6484, 0.6800, 0.7016, 0.7196, 0.6502,
        0.5938, 0.8306, 0.5781, 0.6744, 0.8146, 0.4329, 0.6760, 0.7430, 0.7394,
        0.8801, 0.6157, 0.6362, 0.5982, 0.8140, 0.7546, 0.6699, 0.6947, 0.6206,
        0.8289, 0.6575, 0.6739, 0.5593, 0.6189, 0.5753, 0.6366, 0.8415, 0.6690,
        0.6715, 0.6168, 0.7525, 0.7431, 0.6305, 0.6936, 0.6275, 0.8036, 0.7200,
        0.8437, 0.7699, 0.7543, 0.6235, 0.7716, 0.6530, 0.7237, 0.8663, 0.5723,
        0.8752, 0.8860, 0.5492, 0.4792, 0.8278, 0.5566, 0.5832, 0.7374, 0.6191,
        0.6858, 0.6843, 0.6453, 0.7965, 0.6430, 0.8380, 0.7158, 0.6939, 0.6908,
        0.6720, 0.6202, 0.5310, 0.6048, 0.6412, 0.6054, 0.6502, 0.8966, 0.6356,
        0.6570, 0.8018, 0.7281, 0.5370, 0.6618, 0.6460, 0.6436, 0.7326, 0.7063,
        0.6123, 0.4388, 0.6494, 0.8459, 0.6323, 0.7379, 0.5483, 0.5748, 0.6598,
        0.5907, 0.7416, 0.6162, 0.6110, 0.6992, 0.7431, 0.7984, 0.7203, 0.8091,
        0.5985, 0.5623, 0.7204, 0.6952, 0.7590, 0.6653, 0.6309, 0.6020, 0.6403,
        0.7525, 0.8696, 0.7631, 0.6318, 0.7685, 0.8061, 0.8300, 0.7012, 0.5665,
        0.7227, 0.7204, 0.6522, 0.8981, 0.7631, 0.5890, 0.7371, 0.5557, 0.7189,
        0.6061, 0.7985, 0.7225, 0.6452, 0.7127, 0.6077, 0.6027, 0.7737, 0.6358,
        0.5009, 0.6759, 0.6593, 0.6607, 0.7772, 0.5841, 0.7151, 0.6877, 0.6116,
        0.6476, 0.6038, 0.7127, 0.6518, 0.6706, 0.6015, 0.6208, 0.6441, 0.7313,
        0.7511, 0.6339, 0.6111, 0.8095, 0.4881, 0.6922, 0.7076, 0.8115, 0.6455,
        0.7598, 0.5754, 0.6902, 0.8664, 0.6261, 0.6648, 0.6166, 0.6966, 0.6192,
        0.5921, 0.8354, 0.7609, 0.7549, 0.6866, 0.8603, 0.6694, 0.8712, 0.7784,
        0.7790, 0.5667, 0.6494, 0.6951, 0.6793, 0.7032, 0.7340, 0.5523, 0.8715,
        0.6483, 0.7314, 0.6441, 0.5459, 0.7554, 0.6988, 0.8647, 0.8333, 0.6723,
        0.6847, 0.7663, 0.7099, 0.7160, 0.6721, 0.6512, 0.6849, 0.8885, 0.7570,
        0.7020, 0.8427, 0.7580, 0.6439, 0.5461, 0.6858, 0.6666, 0.6550, 0.6852,
        0.5963, 0.6313, 0.6169, 0.7295, 0.6684, 0.6452, 0.6851, 0.6065, 0.6314,
        0.5846, 0.7283, 0.7910, 0.8161, 0.6535, 0.8354, 0.6288, 0.5665, 0.7362,
        0.6892, 0.6512, 0.8891, 0.7090, 0.5485, 0.8770, 0.7121, 0.5569, 0.7496,
        0.7559, 0.6518, 0.8084, 0.5899, 0.7200, 0.6088, 0.7543, 0.7540, 0.6989,
        0.8362, 0.6767, 0.7780, 0.6432, 0.6616, 0.7284, 0.7700, 0.7916, 0.6942,
        0.6143, 0.6598, 0.6606, 0.6621, 0.7659, 0.7540, 0.6920, 0.6863, 0.6868,
        0.5517, 0.6966, 0.8668, 0.7746, 0.6432, 0.7042, 0.7917, 0.8280, 0.7249,
        0.7905, 0.8118, 0.6243, 0.6500, 0.4826, 0.8017, 0.6785, 0.7292, 0.7971,
        0.7569, 0.7409, 0.5461, 0.7231, 0.8318, 0.7253, 0.7241, 0.6250, 0.6865,
        0.6551, 0.8276, 0.6552, 0.6952, 0.7362, 0.6067, 0.8874, 0.6645, 0.8689,
        0.8257, 0.7207, 0.6768, 0.6467, 0.6838, 0.8553, 0.6727, 0.6240, 0.7868,
        0.8493, 0.6904, 0.6802, 0.5756, 0.6764, 0.6070, 0.7606, 0.6087, 0.7988,
        0.6823, 0.8723, 0.7020, 0.6935, 0.5913, 0.7219, 0.8599, 0.6083, 0.6773,
        0.7200, 0.7975, 0.6627, 0.6113, 0.7163, 0.6471, 0.7425, 0.7610, 0.6861,
        0.7600, 0.8566, 0.8210, 0.7003, 0.8345, 0.7560, 0.7497, 0.6459, 0.7293,
        0.6827, 0.6369, 0.4745, 0.4286, 0.8592, 0.6743, 0.8622, 0.8397, 0.5566,
        0.8672, 0.6429, 0.7069], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(512.1069, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([741, 1])
Inertia: tensor([145.9092], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([741, 1280])
Centroid_list: tensor([[-0.0376, -0.0684, -0.0477,  ..., -0.0571,  0.0861, -0.4060],
        [-0.0376, -0.0684, -0.0477,  ..., -0.0571,  0.0861, -0.4060],
        [-0.0133, -0.0446, -0.0422,  ..., -0.0678,  0.0665, -0.6314],
        ...,
        [-0.0376, -0.0684, -0.0477,  ..., -0.0571,  0.0861, -0.4060],
        [-0.0133, -0.0446, -0.0422,  ..., -0.0678,  0.0665, -0.6314],
        [-0.0496, -0.0773, -0.0567,  ..., -0.0710,  0.0732, -0.7920]],
       device='cuda:0')
Computed C_score: tensor([0.8634, 0.8928, 0.6893, 0.7925, 0.6762, 0.7616, 0.8293, 0.5546, 0.7470,
        0.5699, 0.6398, 0.6446, 0.7938, 0.7475, 0.8225, 0.6650, 0.6297, 0.8602,
        0.5513, 0.4931, 0.8532, 0.5959, 0.6863, 0.6921, 0.6686, 0.6390, 0.7603,
        0.7233, 0.7996, 0.8671, 0.6411, 0.7947, 0.8058, 0.5854, 0.7924, 0.5386,
        0.7262, 0.6400, 0.6846, 0.7430, 0.6104, 0.8046, 0.7274, 0.8778, 0.6929,
        0.5950, 0.8125, 0.7088, 0.7219, 0.8418, 0.5552, 0.6038, 0.6861, 0.6526,
        0.5475, 0.6766, 0.7401, 0.7197, 0.7749, 0.7137, 0.7586, 0.7606, 0.8745,
        0.8055, 0.7758, 0.4513, 0.8784, 0.4876, 0.6406, 0.6688, 0.6995, 0.6961,
        0.7713, 0.6484, 0.6975, 0.5780, 0.8282, 0.7836, 0.6577, 0.5938, 0.6223,
        0.5203, 0.8454, 0.7300, 0.6057, 0.7556, 0.6651, 0.7166, 0.7404, 0.6877,
        0.6893, 0.7000, 0.6654, 0.7743, 0.6095, 0.7009, 0.8637, 0.8558, 0.8075,
        0.5982, 0.6466, 0.7449, 0.8836, 0.6655, 0.7061, 0.6265, 0.7647, 0.8493,
        0.6341, 0.7311, 0.7522, 0.7745, 0.8228, 0.6708, 0.6948, 0.7294, 0.7243,
        0.6904, 0.7714, 0.7283, 0.8348, 0.6797, 0.6511, 0.7354, 0.8492, 0.6737,
        0.8960, 0.5815, 0.6688, 0.7797, 0.6539, 0.5925, 0.7756, 0.3698, 0.6392,
        0.8345, 0.8182, 0.8770, 0.8525, 0.6462, 0.6723, 0.7365, 0.7337, 0.6737,
        0.6674, 0.6193, 0.4920, 0.7516, 0.7024, 0.6174, 0.6663, 0.7281, 0.8355,
        0.6759, 0.6466, 0.6171, 0.6882, 0.7353, 0.6606, 0.8426, 0.7163, 0.5261,
        0.6990, 0.6307, 0.5859, 0.5925, 0.7870, 0.6903, 0.8163, 0.8018, 0.8080,
        0.8183, 0.6730, 0.6068, 0.6059, 0.7867, 0.6063, 0.6275, 0.7126, 0.7674,
        0.7443, 0.6034, 0.5074, 0.6498, 0.6807, 0.8027, 0.6944, 0.5929, 0.6731,
        0.8706, 0.7730, 0.6414, 0.6439, 0.7561, 0.5429, 0.8505, 0.7977, 0.5612,
        0.8107, 0.6504, 0.5844, 0.4556, 0.8714, 0.7858, 0.6286, 0.8304, 0.6976,
        0.6179, 0.7359, 0.6901, 0.7752, 0.6740, 0.6849, 0.6425, 0.5811, 0.5732,
        0.7935, 0.6769, 0.6789, 0.6088, 0.7689, 0.7423, 0.8035, 0.5795, 0.6939,
        0.6426, 0.7880, 0.7705, 0.6470, 0.6495, 0.8496, 0.7938, 0.8144, 0.7238,
        0.7121, 0.6531, 0.8288, 0.7199, 0.6113, 0.7041, 0.6048, 0.6500, 0.7430,
        0.7811, 0.7961, 0.6262, 0.6619, 0.6741, 0.7355, 0.7093, 0.7283, 0.6731,
        0.6734, 0.6334, 0.7787, 0.6380, 0.8013, 0.8115, 0.5298, 0.7180, 0.8864,
        0.7427, 0.6375, 0.6389, 0.7435, 0.6176, 0.7628, 0.9034, 0.8018, 0.8091,
        0.7256, 0.7580, 0.6510, 0.6089, 0.5728, 0.5666, 0.7201, 0.8028, 0.6643,
        0.7333, 0.8215, 0.8309, 0.5307, 0.7451, 0.6337, 0.7054, 0.7302, 0.7315,
        0.8572, 0.5723, 0.7709, 0.8850, 0.7759, 0.7025, 0.6840, 0.7161, 0.7304,
        0.6695, 0.5727, 0.6513, 0.6873, 0.6800, 0.6176, 0.7565, 0.8346, 0.6569,
        0.6526, 0.6579, 0.8470, 0.7694, 0.7321, 0.4839, 0.7833, 0.7359, 0.7754,
        0.8428, 0.5551, 0.6257, 0.7672, 0.8837, 0.8398, 0.6148, 0.7134, 0.8332,
        0.8798, 0.6930, 0.6587, 0.5239, 0.8235, 0.8413, 0.7641, 0.8185, 0.6942,
        0.9005, 0.6671, 0.6999, 0.6969, 0.6003, 0.8538, 0.6677, 0.5928, 0.6952,
        0.7163, 0.7555, 0.7219, 0.6250, 0.8259, 0.7064, 0.8854, 0.8061, 0.6895,
        0.8540, 0.6235, 0.8959, 0.7504, 0.7297, 0.5759, 0.7637, 0.6105, 0.5930,
        0.7162, 0.7803, 0.8872, 0.6830, 0.8992, 0.8124, 0.7653, 0.7544, 0.7489,
        0.6542, 0.6868, 0.7868, 0.6178, 0.6325, 0.8205, 0.7752, 0.7597, 0.6592,
        0.5708, 0.8066, 0.5957, 0.7076, 0.7802, 0.4220, 0.7338, 0.8411, 0.8041,
        0.8772, 0.6820, 0.6470, 0.6195, 0.8364, 0.7644, 0.6438, 0.7022, 0.5624,
        0.8387, 0.7100, 0.7163, 0.5382, 0.6037, 0.5545, 0.6815, 0.8603, 0.7147,
        0.6463, 0.7977, 0.8322, 0.8396, 0.7011, 0.7069, 0.6268, 0.8183, 0.7030,
        0.8519, 0.7256, 0.7256, 0.6607, 0.8512, 0.6457, 0.7225, 0.8705, 0.5681,
        0.8851, 0.8591, 0.5751, 0.5199, 0.8849, 0.5442, 0.5910, 0.7542, 0.6448,
        0.7295, 0.6850, 0.7356, 0.7979, 0.7060, 0.8575, 0.7295, 0.8367, 0.7219,
        0.6601, 0.6061, 0.5712, 0.6228, 0.7171, 0.6046, 0.8266, 0.8991, 0.6884,
        0.6869, 0.8016, 0.7965, 0.5711, 0.7248, 0.6235, 0.6934, 0.7528, 0.6958,
        0.5999, 0.5154, 0.6363, 0.8460, 0.6812, 0.7547, 0.5768, 0.6012, 0.7823,
        0.6272, 0.8026, 0.6150, 0.6251, 0.7591, 0.7080, 0.8025, 0.7428, 0.7958,
        0.6203, 0.5488, 0.7219, 0.6979, 0.7205, 0.7360, 0.6417, 0.6559, 0.6344,
        0.7848, 0.8898, 0.7276, 0.7182, 0.8651, 0.8227, 0.8458, 0.7227, 0.5731,
        0.7469, 0.7396, 0.6097, 0.9031, 0.7679, 0.6163, 0.7201, 0.5910, 0.6949,
        0.6444, 0.7756, 0.7571, 0.7120, 0.8128, 0.6061, 0.6414, 0.7400, 0.6613,
        0.5346, 0.6633, 0.7023, 0.6625, 0.7683, 0.5820, 0.8448, 0.7075, 0.6882,
        0.6855, 0.6613, 0.7241, 0.6634, 0.7161, 0.6797, 0.7083, 0.6447, 0.7539,
        0.7594, 0.6598, 0.6095, 0.8202, 0.4941, 0.6684, 0.7226, 0.8271, 0.6468,
        0.8167, 0.5500, 0.7291, 0.8690, 0.6403, 0.7338, 0.6709, 0.7155, 0.6819,
        0.6030, 0.8541, 0.8546, 0.8204, 0.7539, 0.8845, 0.6936, 0.8891, 0.7957,
        0.7880, 0.7405, 0.6419, 0.7576, 0.6962, 0.7067, 0.7352, 0.6105, 0.8960,
        0.6804, 0.7260, 0.6257, 0.5663, 0.8046, 0.7498, 0.8721, 0.8579, 0.6445,
        0.7370, 0.7545, 0.7041, 0.7794, 0.7028, 0.7128, 0.7423, 0.8888, 0.8205,
        0.7589, 0.8656, 0.7909, 0.7038, 0.5670, 0.7319, 0.6821, 0.7239, 0.7519,
        0.5880, 0.6791, 0.7017, 0.7796, 0.7195, 0.6329, 0.7144, 0.6648, 0.6556,
        0.6332, 0.7895, 0.7453, 0.8173, 0.6764, 0.7990, 0.6499, 0.5972, 0.8235,
        0.7023, 0.8118, 0.8952, 0.8528, 0.5716, 0.9036, 0.8633, 0.6014, 0.8421,
        0.7183, 0.6756, 0.7757, 0.5786, 0.8407, 0.6602, 0.8570, 0.7648, 0.8008,
        0.8541, 0.6697, 0.8655, 0.7893, 0.7635, 0.7320, 0.7800, 0.8012, 0.7122,
        0.6621, 0.6551, 0.6656, 0.6721, 0.7508, 0.8328, 0.7388, 0.6795, 0.6709,
        0.5825, 0.7260, 0.8847, 0.8561, 0.6503, 0.7727, 0.8053, 0.8335, 0.7057,
        0.8064, 0.8143, 0.6145, 0.6566, 0.5451, 0.7955, 0.6946, 0.7438, 0.7991,
        0.7642, 0.8724, 0.5607, 0.7491, 0.8238, 0.8539, 0.7182, 0.6679, 0.8195,
        0.6636, 0.8550, 0.7389, 0.6762, 0.7294, 0.6411, 0.8908, 0.8181, 0.8800,
        0.8669, 0.7229, 0.6624, 0.6808, 0.7459, 0.8523, 0.6826, 0.6742, 0.8166,
        0.8513, 0.6779, 0.6761, 0.5867, 0.6471, 0.6880, 0.7935, 0.6095, 0.8159,
        0.8293, 0.8836, 0.7249, 0.7166, 0.5891, 0.7768, 0.8640, 0.6563, 0.7157,
        0.7719, 0.8097, 0.7677, 0.6195, 0.6887, 0.6916, 0.8554, 0.8326, 0.7315,
        0.7480, 0.8589, 0.8421, 0.7265, 0.8412, 0.7531, 0.8492, 0.7720, 0.7388,
        0.7455, 0.6198, 0.5063, 0.4848, 0.8791, 0.7251, 0.8726, 0.8385, 0.5639,
        0.8720, 0.6706, 0.8466], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(532.4595, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([741, 1])
Inertia: tensor([149.0107], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([741, 1280])
Centroid_list: tensor([[-0.0427, -0.0829, -0.0547,  ..., -0.0368,  0.0826, -0.6170],
        [-0.0283, -0.0564, -0.0419,  ..., -0.0777,  0.0855, -0.2980],
        [-0.0141, -0.0446, -0.0421,  ..., -0.0663,  0.0661, -0.6699],
        ...,
        [-0.0283, -0.0564, -0.0419,  ..., -0.0777,  0.0855, -0.2980],
        [-0.0141, -0.0446, -0.0421,  ..., -0.0663,  0.0661, -0.6699],
        [-0.0514, -0.0793, -0.0588,  ..., -0.0686,  0.0726, -0.7903]],
       device='cuda:0')
Computed C_score: tensor([0.8535, 0.8516, 0.6944, 0.7975, 0.6888, 0.7060, 0.8358, 0.6314, 0.7452,
        0.5697, 0.6313, 0.6423, 0.8393, 0.7461, 0.9308, 0.6638, 0.6324, 0.9254,
        0.5582, 0.4965, 0.8624, 0.6449, 0.6734, 0.6970, 0.6810, 0.6730, 0.7596,
        0.7217, 0.7741, 0.9010, 0.6384, 0.8500, 0.8622, 0.5866, 0.9082, 0.5939,
        0.7264, 0.6369, 0.6741, 0.7789, 0.6100, 0.8050, 0.7707, 0.8797, 0.6989,
        0.5899, 0.8202, 0.7121, 0.7212, 0.8432, 0.5458, 0.5887, 0.6854, 0.6557,
        0.5501, 0.6670, 0.8578, 0.7291, 0.8241, 0.7098, 0.7601, 0.7587, 0.8778,
        0.8071, 0.7739, 0.4515, 0.9549, 0.4921, 0.6362, 0.6813, 0.6968, 0.7097,
        0.7641, 0.6579, 0.6895, 0.5965, 0.8408, 0.8538, 0.6609, 0.5981, 0.6499,
        0.5189, 0.8508, 0.7342, 0.6035, 0.7009, 0.6609, 0.7228, 0.7446, 0.6878,
        0.6898, 0.8389, 0.6648, 0.7745, 0.6340, 0.7080, 0.8519, 0.9257, 0.8041,
        0.5849, 0.6551, 0.7482, 0.8880, 0.6627, 0.7117, 0.6145, 0.7679, 0.8173,
        0.6339, 0.7331, 0.7560, 0.7770, 0.8396, 0.6698, 0.7975, 0.8548, 0.7247,
        0.7556, 0.7620, 0.7344, 0.8385, 0.6727, 0.6439, 0.8379, 0.8556, 0.6744,
        0.8712, 0.5638, 0.6657, 0.7904, 0.6436, 0.5885, 0.7800, 0.3507, 0.6461,
        0.9485, 0.8157, 0.8861, 0.8548, 0.6414, 0.7289, 0.7480, 0.7234, 0.7241,
        0.6721, 0.6395, 0.4964, 0.7968, 0.7078, 0.6423, 0.6671, 0.7187, 0.9321,
        0.6768, 0.6323, 0.6099, 0.7041, 0.7441, 0.6676, 0.8411, 0.7161, 0.5383,
        0.7062, 0.7007, 0.5795, 0.5965, 0.7918, 0.6839, 0.8099, 0.8119, 0.8735,
        0.8225, 0.6723, 0.6087, 0.6061, 0.7846, 0.5638, 0.6310, 0.7121, 0.8634,
        0.7456, 0.6114, 0.5153, 0.7091, 0.6755, 0.8067, 0.6807, 0.5870, 0.6719,
        0.8760, 0.7809, 0.6946, 0.6506, 0.8082, 0.7095, 0.8519, 0.9165, 0.5877,
        0.8856, 0.6430, 0.5801, 0.4533, 0.8759, 0.8881, 0.6191, 0.8337, 0.6902,
        0.6125, 0.7317, 0.6648, 0.7806, 0.6611, 0.6845, 0.6292, 0.5897, 0.5773,
        0.9041, 0.6828, 0.6716, 0.6223, 0.7725, 0.7468, 0.8074, 0.7032, 0.6994,
        0.6356, 0.7893, 0.7700, 0.6499, 0.6446, 0.8546, 0.7935, 0.8170, 0.7248,
        0.6940, 0.6580, 0.8268, 0.7253, 0.6058, 0.7059, 0.6102, 0.6508, 0.7323,
        0.7976, 0.7983, 0.6264, 0.6576, 0.6657, 0.7846, 0.7159, 0.7277, 0.8003,
        0.6722, 0.6375, 0.7828, 0.6451, 0.8104, 0.7839, 0.5982, 0.7222, 0.8911,
        0.7458, 0.7984, 0.6393, 0.7442, 0.6001, 0.7638, 0.8746, 0.7902, 0.8130,
        0.7292, 0.7459, 0.6504, 0.6077, 0.6959, 0.5650, 0.7294, 0.8080, 0.6718,
        0.7382, 0.8508, 0.8315, 0.5353, 0.7401, 0.6391, 0.7576, 0.7830, 0.7213,
        0.8648, 0.5717, 0.7891, 0.9173, 0.7800, 0.7083, 0.6902, 0.7805, 0.7429,
        0.6649, 0.5630, 0.6597, 0.6813, 0.6800, 0.6122, 0.7573, 0.8405, 0.6602,
        0.6390, 0.6653, 0.8258, 0.7726, 0.7407, 0.4821, 0.7819, 0.7358, 0.7712,
        0.8720, 0.5551, 0.6216, 0.7753, 0.8865, 0.8706, 0.6266, 0.7175, 0.8359,
        0.9431, 0.6843, 0.6611, 0.5257, 0.8329, 0.8441, 0.7615, 0.8613, 0.6998,
        0.8618, 0.6522, 0.7021, 0.7385, 0.5982, 0.8641, 0.6809, 0.5883, 0.6875,
        0.7161, 0.7587, 0.7223, 0.7313, 0.8253, 0.7136, 0.9446, 0.8011, 0.7327,
        0.8597, 0.6238, 0.9010, 0.7413, 0.7338, 0.6289, 0.7559, 0.6145, 0.5890,
        0.7241, 0.7810, 0.8908, 0.6906, 0.9450, 0.8215, 0.7650, 0.7491, 0.7579,
        0.6511, 0.6920, 0.7838, 0.7118, 0.6338, 0.8267, 0.7751, 0.7572, 0.6696,
        0.5681, 0.8091, 0.6663, 0.7120, 0.7773, 0.4212, 0.7359, 0.8446, 0.7982,
        0.9230, 0.6916, 0.6502, 0.6162, 0.9278, 0.7202, 0.6430, 0.7050, 0.7234,
        0.9002, 0.7131, 0.7256, 0.5390, 0.6053, 0.5997, 0.6808, 0.9448, 0.7247,
        0.7391, 0.8093, 0.8332, 0.8473, 0.7061, 0.7018, 0.6312, 0.8441, 0.7116,
        0.8629, 0.7226, 0.7050, 0.6626, 0.8562, 0.6386, 0.7059, 0.9430, 0.5649,
        0.9340, 0.8616, 0.5698, 0.5151, 0.8871, 0.5465, 0.5791, 0.8412, 0.6390,
        0.7298, 0.7147, 0.7311, 0.7317, 0.7080, 0.8607, 0.7344, 0.8451, 0.7159,
        0.6596, 0.6066, 0.5684, 0.6117, 0.7213, 0.6039, 0.8377, 0.9441, 0.6795,
        0.7430, 0.8669, 0.8004, 0.5712, 0.7198, 0.6334, 0.6811, 0.7442, 0.6937,
        0.5978, 0.5162, 0.6372, 0.8678, 0.6819, 0.7550, 0.5670, 0.6068, 0.7847,
        0.6264, 0.8073, 0.7000, 0.6141, 0.7618, 0.7045, 0.8965, 0.7370, 0.8829,
        0.6034, 0.5224, 0.7147, 0.6945, 0.7146, 0.7446, 0.7417, 0.6584, 0.6443,
        0.7810, 0.9027, 0.7315, 0.7169, 0.8656, 0.8558, 0.8827, 0.7329, 0.5668,
        0.7414, 0.7493, 0.6058, 0.8957, 0.8377, 0.6198, 0.7218, 0.6028, 0.6753,
        0.6448, 0.7504, 0.7530, 0.7089, 0.8203, 0.6055, 0.6405, 0.7198, 0.6550,
        0.5196, 0.6515, 0.7061, 0.8048, 0.8445, 0.5796, 0.8549, 0.6949, 0.6939,
        0.6929, 0.6623, 0.7235, 0.6663, 0.7308, 0.6824, 0.7124, 0.7023, 0.7401,
        0.7648, 0.6659, 0.6627, 0.9318, 0.4997, 0.6705, 0.7173, 0.7993, 0.7230,
        0.8186, 0.5561, 0.7395, 0.9336, 0.6466, 0.7337, 0.6730, 0.7096, 0.6895,
        0.6099, 0.9280, 0.8572, 0.8186, 0.7562, 0.9630, 0.6889, 0.8639, 0.7992,
        0.8585, 0.7521, 0.7209, 0.7582, 0.6860, 0.6941, 0.8325, 0.6085, 0.8619,
        0.6734, 0.7135, 0.6006, 0.5634, 0.8114, 0.7536, 0.9129, 0.8605, 0.6278,
        0.7432, 0.7958, 0.6733, 0.7774, 0.7097, 0.7150, 0.7418, 0.9208, 0.8185,
        0.7645, 0.8880, 0.7887, 0.6947, 0.5720, 0.7314, 0.6796, 0.7251, 0.7525,
        0.5896, 0.6859, 0.6993, 0.7825, 0.7218, 0.6452, 0.7154, 0.6702, 0.6568,
        0.6382, 0.7906, 0.7447, 0.8575, 0.6809, 0.8009, 0.6392, 0.6066, 0.8264,
        0.6970, 0.8180, 0.9368, 0.8614, 0.5757, 0.8798, 0.8720, 0.5944, 0.8396,
        0.7149, 0.6772, 0.7811, 0.5693, 0.8412, 0.6675, 0.8642, 0.7340, 0.8016,
        0.9406, 0.6735, 0.8681, 0.7972, 0.7666, 0.8299, 0.7713, 0.7816, 0.7087,
        0.6709, 0.6509, 0.6682, 0.6778, 0.7497, 0.8392, 0.7397, 0.8149, 0.7304,
        0.5867, 0.7242, 0.8889, 0.8556, 0.6400, 0.7759, 0.8021, 0.9445, 0.7273,
        0.9147, 0.8263, 0.6045, 0.7927, 0.5407, 0.7494, 0.6987, 0.8784, 0.8064,
        0.8724, 0.8686, 0.5630, 0.7842, 0.8879, 0.8506, 0.7827, 0.6803, 0.8283,
        0.6694, 0.9115, 0.7307, 0.6685, 0.8268, 0.6366, 0.9076, 0.8291, 0.8585,
        0.8681, 0.7272, 0.6704, 0.6751, 0.7454, 0.9295, 0.6882, 0.6750, 0.8147,
        0.9162, 0.6852, 0.6791, 0.5775, 0.6423, 0.6886, 0.8054, 0.7364, 0.8139,
        0.8352, 0.9534, 0.7190, 0.7066, 0.6717, 0.7877, 0.9531, 0.6591, 0.7199,
        0.7683, 0.9119, 0.7678, 0.6245, 0.6838, 0.6893, 0.8621, 0.8386, 0.7280,
        0.8422, 0.9292, 0.8373, 0.7150, 0.8513, 0.7215, 0.8561, 0.7776, 0.8343,
        0.7495, 0.6492, 0.4835, 0.4906, 0.8582, 0.7253, 0.8714, 0.8881, 0.5679,
        0.9052, 0.6715, 0.8544], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(541.6735, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([741, 1])
Inertia: tensor([149.0107], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([741, 1280])
Centroid_list: tensor([[-0.0427, -0.0829, -0.0547,  ..., -0.0368,  0.0826, -0.6170],
        [-0.0276, -0.0588, -0.0418,  ..., -0.0802,  0.0851, -0.2615],
        [-0.0130, -0.0485, -0.0453,  ..., -0.0710,  0.0610, -0.6231],
        ...,
        [-0.0276, -0.0588, -0.0418,  ..., -0.0802,  0.0851, -0.2615],
        [-0.0130, -0.0485, -0.0453,  ..., -0.0710,  0.0610, -0.6231],
        [-0.0564, -0.0861, -0.0618,  ..., -0.0717,  0.0692, -0.7353]],
       device='cuda:0')
Computed C_score: tensor([0.8535, 0.8563, 0.6929, 0.7799, 0.7060, 0.7242, 0.8376, 0.6348, 0.7311,
        0.5650, 0.6539, 0.6273, 0.8447, 0.7603, 0.9308, 0.6709, 0.6436, 0.9254,
        0.6310, 0.5130, 0.8609, 0.6529, 0.7050, 0.6647, 0.6771, 0.6776, 0.7688,
        0.7102, 0.7629, 0.9100, 0.6673, 0.8500, 0.8728, 0.8064, 0.9082, 0.5886,
        0.7651, 0.6326, 0.6572, 0.7676, 0.6186, 0.7757, 0.7756, 0.8920, 0.7085,
        0.6118, 0.8292, 0.7710, 0.7968, 0.8362, 0.5365, 0.6215, 0.6856, 0.6444,
        0.5826, 0.6720, 0.8567, 0.7207, 0.8225, 0.7610, 0.7904, 0.7240, 0.9013,
        0.8109, 0.7969, 0.4831, 0.9549, 0.4738, 0.7322, 0.6359, 0.7225, 0.6725,
        0.7832, 0.7439, 0.6643, 0.7163, 0.8490, 0.8570, 0.6413, 0.6245, 0.6992,
        0.5615, 0.8457, 0.7593, 0.6027, 0.6944, 0.7090, 0.7074, 0.7337, 0.7052,
        0.6759, 0.8462, 0.6706, 0.7920, 0.6071, 0.7173, 0.8519, 0.9257, 0.8194,
        0.5970, 0.6295, 0.7213, 0.8887, 0.6619, 0.6883, 0.6365, 0.7615, 0.8189,
        0.6330, 0.7472, 0.7404, 0.7796, 0.8416, 0.7692, 0.8071, 0.8604, 0.7364,
        0.7525, 0.7714, 0.8671, 0.8640, 0.6786, 0.6454, 0.8373, 0.8475, 0.7270,
        0.8712, 0.5716, 0.6667, 0.7878, 0.6880, 0.6376, 0.8112, 0.3591, 0.6293,
        0.9485, 0.8148, 0.9002, 0.8637, 0.6117, 0.7157, 0.7358, 0.7257, 0.7139,
        0.6359, 0.6421, 0.5695, 0.8019, 0.7399, 0.6529, 0.6976, 0.7675, 0.9321,
        0.6462, 0.6501, 0.5963, 0.6980, 0.7466, 0.6713, 0.8495, 0.7149, 0.5324,
        0.6996, 0.7084, 0.5831, 0.6238, 0.7931, 0.6897, 0.8137, 0.8146, 0.8716,
        0.8219, 0.6838, 0.7517, 0.6727, 0.7861, 0.7261, 0.6173, 0.7357, 0.8713,
        0.7631, 0.5852, 0.7390, 0.7537, 0.6855, 0.7931, 0.6731, 0.7138, 0.6881,
        0.8880, 0.7618, 0.6984, 0.6414, 0.8082, 0.7032, 0.8520, 0.9165, 0.5797,
        0.8878, 0.7677, 0.6031, 0.5431, 0.8811, 0.8881, 0.7625, 0.8399, 0.6907,
        0.6250, 0.7422, 0.7079, 0.7861, 0.6960, 0.7409, 0.6331, 0.5944, 0.7401,
        0.9041, 0.7037, 0.6839, 0.5929, 0.7780, 0.7755, 0.8357, 0.7041, 0.7882,
        0.6194, 0.7716, 0.7694, 0.7417, 0.7749, 0.8721, 0.7964, 0.8340, 0.7545,
        0.7126, 0.7080, 0.8408, 0.7022, 0.6118, 0.7436, 0.6041, 0.8081, 0.7585,
        0.7976, 0.7702, 0.6134, 0.6609, 0.6684, 0.7833, 0.7047, 0.7585, 0.8007,
        0.6668, 0.8115, 0.7984, 0.7414, 0.7977, 0.7825, 0.6003, 0.7359, 0.8942,
        0.7679, 0.8034, 0.6337, 0.7626, 0.5851, 0.7501, 0.8687, 0.8121, 0.7983,
        0.7360, 0.7852, 0.6494, 0.5801, 0.7070, 0.6430, 0.7181, 0.7831, 0.7637,
        0.7445, 0.8519, 0.8419, 0.5622, 0.7747, 0.6794, 0.7700, 0.7829, 0.7275,
        0.8722, 0.5726, 0.7920, 0.9173, 0.7771, 0.7150, 0.7338, 0.7730, 0.7397,
        0.7223, 0.5958, 0.6602, 0.7472, 0.6788, 0.6263, 0.7808, 0.8638, 0.7104,
        0.6817, 0.6316, 0.8190, 0.7842, 0.7453, 0.7026, 0.8043, 0.7552, 0.7644,
        0.8720, 0.5329, 0.7869, 0.7535, 0.8959, 0.8773, 0.6728, 0.7474, 0.8526,
        0.9431, 0.8216, 0.6686, 0.6089, 0.8237, 0.8579, 0.7579, 0.8613, 0.7073,
        0.8712, 0.6889, 0.7360, 0.7468, 0.6101, 0.8743, 0.6390, 0.5720, 0.6972,
        0.7128, 0.7896, 0.7268, 0.7386, 0.8399, 0.7259, 0.9446, 0.8124, 0.7281,
        0.8774, 0.6138, 0.9118, 0.7357, 0.7154, 0.7594, 0.7714, 0.6721, 0.7846,
        0.6877, 0.7940, 0.8908, 0.7137, 0.9450, 0.8164, 0.7768, 0.7412, 0.7331,
        0.7056, 0.6534, 0.7783, 0.7051, 0.7943, 0.8160, 0.7759, 0.7653, 0.7951,
        0.5986, 0.8048, 0.6568, 0.7081, 0.7747, 0.5655, 0.7314, 0.8661, 0.8096,
        0.9230, 0.7005, 0.6960, 0.6109, 0.9278, 0.7179, 0.6576, 0.7380, 0.7329,
        0.9002, 0.7367, 0.7032, 0.5835, 0.7784, 0.7150, 0.7288, 0.9448, 0.7115,
        0.7421, 0.8000, 0.8612, 0.8422, 0.7226, 0.7132, 0.6121, 0.8468, 0.7118,
        0.8638, 0.7305, 0.7204, 0.6979, 0.8727, 0.6300, 0.6927, 0.9430, 0.6828,
        0.9340, 0.8667, 0.7373, 0.5351, 0.8910, 0.6811, 0.6534, 0.8403, 0.6592,
        0.7952, 0.7093, 0.7234, 0.7222, 0.7415, 0.8607, 0.7420, 0.8535, 0.7246,
        0.6969, 0.7558, 0.5374, 0.6247, 0.7433, 0.6100, 0.8499, 0.9441, 0.7166,
        0.7453, 0.8722, 0.8135, 0.6148, 0.6987, 0.6924, 0.7067, 0.7270, 0.7101,
        0.7721, 0.5470, 0.6604, 0.8699, 0.7266, 0.8075, 0.5940, 0.6088, 0.7766,
        0.6429, 0.7929, 0.6955, 0.7242, 0.7662, 0.7092, 0.8965, 0.8096, 0.8829,
        0.6037, 0.5419, 0.7227, 0.6987, 0.7511, 0.7099, 0.7479, 0.6801, 0.6145,
        0.7674, 0.9027, 0.7275, 0.6889, 0.8645, 0.8632, 0.8823, 0.7055, 0.5511,
        0.7189, 0.7722, 0.6454, 0.8957, 0.8427, 0.6034, 0.7171, 0.6273, 0.6751,
        0.6671, 0.7477, 0.8179, 0.7183, 0.8489, 0.6476, 0.6179, 0.7337, 0.6715,
        0.5363, 0.6945, 0.7224, 0.8152, 0.8457, 0.6148, 0.8601, 0.6928, 0.7410,
        0.7079, 0.6498, 0.7040, 0.7224, 0.6871, 0.6761, 0.7193, 0.6945, 0.7528,
        0.7658, 0.6426, 0.6606, 0.9318, 0.5311, 0.6612, 0.7247, 0.8032, 0.7305,
        0.8485, 0.6909, 0.7679, 0.9336, 0.6494, 0.7685, 0.7035, 0.7150, 0.6983,
        0.6614, 0.9280, 0.8546, 0.8376, 0.7859, 0.9630, 0.7293, 0.8639, 0.7688,
        0.8653, 0.7415, 0.7198, 0.7438, 0.6925, 0.7223, 0.8325, 0.6036, 0.8619,
        0.6770, 0.7305, 0.5950, 0.5472, 0.8126, 0.7832, 0.9129, 0.8638, 0.6272,
        0.7173, 0.8072, 0.6596, 0.8220, 0.7074, 0.7121, 0.7766, 0.9208, 0.8266,
        0.7704, 0.8880, 0.7964, 0.7104, 0.6077, 0.7552, 0.7184, 0.7086, 0.7733,
        0.7573, 0.6939, 0.7080, 0.7659, 0.7344, 0.6478, 0.7298, 0.6555, 0.6835,
        0.6633, 0.8170, 0.7527, 0.8542, 0.6625, 0.7989, 0.6454, 0.5830, 0.8024,
        0.6935, 0.8434, 0.9368, 0.8586, 0.5397, 0.8829, 0.8661, 0.6067, 0.8402,
        0.7241, 0.6700, 0.7854, 0.5948, 0.8555, 0.6947, 0.8645, 0.7191, 0.8157,
        0.9406, 0.6506, 0.8829, 0.8018, 0.7559, 0.8299, 0.7638, 0.7816, 0.7460,
        0.6575, 0.6506, 0.6839, 0.7022, 0.7361, 0.8369, 0.7219, 0.8217, 0.7242,
        0.6684, 0.7267, 0.8947, 0.8428, 0.7409, 0.7571, 0.8126, 0.9445, 0.7337,
        0.9147, 0.8260, 0.6080, 0.7997, 0.5985, 0.7451, 0.7690, 0.8784, 0.8078,
        0.8762, 0.8709, 0.7169, 0.7842, 0.8879, 0.8648, 0.7765, 0.6943, 0.8313,
        0.6620, 0.9115, 0.7324, 0.7027, 0.8268, 0.6114, 0.9161, 0.8475, 0.8593,
        0.8506, 0.7237, 0.7371, 0.6960, 0.7469, 0.9383, 0.6559, 0.7040, 0.8242,
        0.9162, 0.7587, 0.7007, 0.5824, 0.6856, 0.7017, 0.7808, 0.7476, 0.8167,
        0.8421, 0.9534, 0.7249, 0.7264, 0.6728, 0.7983, 0.9531, 0.6497, 0.7562,
        0.7399, 0.9119, 0.7869, 0.5943, 0.8115, 0.6786, 0.8751, 0.8550, 0.7502,
        0.8515, 0.9292, 0.8451, 0.7584, 0.8597, 0.7206, 0.8774, 0.8045, 0.8328,
        0.7285, 0.6327, 0.5176, 0.5096, 0.8582, 0.7768, 0.8707, 0.8864, 0.6740,
        0.9085, 0.6396, 0.8506], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(552.7386, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0013, 0.0039, 0.0073, 0.0118], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1349, 1280])
S-Scores: tensor([0.6756, 2.0176, 4.1013, 6.4911], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1349, 1])
Inertia: tensor([235.2484], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1349, 1280])
Centroid_list: tensor([[-0.0053, -0.0479, -0.0673,  ..., -0.0426,  0.0545, -0.4844],
        [-0.0053, -0.0479, -0.0673,  ..., -0.0426,  0.0545, -0.4844],
        [-0.0053, -0.0479, -0.0673,  ..., -0.0426,  0.0545, -0.4844],
        ...,
        [-0.0053, -0.0479, -0.0673,  ..., -0.0426,  0.0545, -0.4844],
        [-0.0053, -0.0479, -0.0673,  ..., -0.0426,  0.0545, -0.4844],
        [-0.0053, -0.0479, -0.0673,  ..., -0.0426,  0.0545, -0.4844]],
       device='cuda:0')
Computed C_score: tensor([0.6100, 0.5233, 0.6472,  ..., 0.6705, 0.5398, 0.5133], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(941.6519, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1349, 1])
Inertia: tensor([219.0318], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1349, 1280])
Centroid_list: tensor([[-0.0183, -0.0536, -0.0677,  ..., -0.0671,  0.0691, -0.4958],
        [-0.0183, -0.0536, -0.0677,  ..., -0.0671,  0.0691, -0.4958],
        [-0.0183, -0.0536, -0.0677,  ..., -0.0671,  0.0691, -0.4958],
        ...,
        [-0.0183, -0.0536, -0.0677,  ..., -0.0671,  0.0691, -0.4958],
        [-0.0183, -0.0536, -0.0677,  ..., -0.0671,  0.0691, -0.4958],
        [-0.0183, -0.0536, -0.0677,  ..., -0.0671,  0.0691, -0.4958]],
       device='cuda:0')
Computed C_score: tensor([0.6438, 0.5282, 0.6862,  ..., 0.6799, 0.5516, 0.5299], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(977.4894, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1349, 1])
Inertia: tensor([188.1124], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1349, 1280])
Centroid_list: tensor([[-0.0446, -0.0793, -0.0771,  ..., -0.0623,  0.0625, -0.5940],
        [ 0.0008, -0.0353, -0.0602,  ..., -0.0640,  0.0720, -0.4395],
        [-0.0446, -0.0793, -0.0771,  ..., -0.0623,  0.0625, -0.5940],
        ...,
        [ 0.0008, -0.0353, -0.0602,  ..., -0.0640,  0.0720, -0.4395],
        [ 0.0008, -0.0353, -0.0602,  ..., -0.0640,  0.0720, -0.4395],
        [-0.0446, -0.0793, -0.0771,  ..., -0.0623,  0.0625, -0.5940]],
       device='cuda:0')
Computed C_score: tensor([0.7090, 0.5824, 0.7104,  ..., 0.7300, 0.6356, 0.5340], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1001.1028, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1349, 1])
Inertia: tensor([190.3624], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1349, 1280])
Centroid_list: tensor([[-0.0449, -0.0788, -0.0759,  ..., -0.0629,  0.0634, -0.5980],
        [ 0.0010, -0.0324, -0.0570,  ..., -0.0615,  0.0730, -0.4197],
        [-0.0449, -0.0788, -0.0759,  ..., -0.0629,  0.0634, -0.5980],
        ...,
        [ 0.0010, -0.0324, -0.0570,  ..., -0.0615,  0.0730, -0.4197],
        [ 0.0010, -0.0324, -0.0570,  ..., -0.0615,  0.0730, -0.4197],
        [-0.0449, -0.0788, -0.0759,  ..., -0.0629,  0.0634, -0.5980]],
       device='cuda:0')
Computed C_score: tensor([0.7054, 0.5822, 0.7110,  ..., 0.7125, 0.6321, 0.5332], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1005.6304, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0007, 0.0021, 0.0041, 0.0064], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([4286, 1280])
S-Scores: tensor([0.6111, 1.7625, 3.6975, 5.9457], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([4286, 1])
Inertia: tensor([77.6045], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([4286, 1280])
Centroid_list: tensor([[ 0.0274, -0.0664, -0.0732,  ..., -0.0224,  0.0710, -0.5564],
        [-0.0369, -0.0634, -0.0878,  ..., -0.0540,  0.0811, -0.3334],
        [ 0.0274, -0.0664, -0.0732,  ..., -0.0224,  0.0710, -0.5564],
        ...,
        [-0.0369, -0.0634, -0.0878,  ..., -0.0540,  0.0811, -0.3334],
        [-0.0369, -0.0634, -0.0878,  ..., -0.0540,  0.0811, -0.3334],
        [ 0.0274, -0.0664, -0.0732,  ..., -0.0224,  0.0710, -0.5564]],
       device='cuda:0')
Computed C_score: tensor([0.8684, 0.5554, 0.7989,  ..., 0.7850, 0.7405, 0.8592], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3166.4478, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4286, 1])
Inertia: tensor([77.3866], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([4286, 1280])
Centroid_list: tensor([[ 0.0290, -0.0656, -0.0709,  ..., -0.0213,  0.0714, -0.5580],
        [-0.0274, -0.0577, -0.0906,  ..., -0.0560,  0.0788, -0.3156],
        [ 0.0290, -0.0656, -0.0709,  ..., -0.0213,  0.0714, -0.5580],
        ...,
        [-0.0533, -0.0801, -0.0842,  ..., -0.0466,  0.0839, -0.4124],
        [-0.0274, -0.0577, -0.0906,  ..., -0.0560,  0.0788, -0.3156],
        [ 0.0290, -0.0656, -0.0709,  ..., -0.0213,  0.0714, -0.5580]],
       device='cuda:0')
Computed C_score: tensor([0.8692, 0.6707, 0.7940,  ..., 0.8128, 0.7100, 0.8612], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3280.8794, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4286, 1])
Inertia: tensor([88.3173], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([4286, 1280])
Centroid_list: tensor([[ 0.0140, -0.0828, -0.0609,  ..., -0.0182,  0.0723, -0.5217],
        [-0.0284, -0.0562, -0.0909,  ..., -0.0565,  0.0789, -0.3070],
        [ 0.0140, -0.0828, -0.0609,  ..., -0.0182,  0.0723, -0.5217],
        ...,
        [-0.0527, -0.0800, -0.0843,  ..., -0.0477,  0.0837, -0.4138],
        [-0.0284, -0.0562, -0.0909,  ..., -0.0565,  0.0789, -0.3070],
        [ 0.0380, -0.0553, -0.0783,  ..., -0.0238,  0.0709, -0.5810]],
       device='cuda:0')
Computed C_score: tensor([0.8519, 0.6778, 0.8205,  ..., 0.8123, 0.7049, 0.8826], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3326.2417, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4286, 1])
Inertia: tensor([88.3924], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([4286, 1280])
Centroid_list: tensor([[ 0.0138, -0.0830, -0.0604,  ..., -0.0177,  0.0725, -0.5188],
        [-0.0284, -0.0507, -0.0930,  ..., -0.0553,  0.0794, -0.2776],
        [ 0.0138, -0.0830, -0.0604,  ..., -0.0177,  0.0725, -0.5188],
        ...,
        [-0.0334, -0.0726, -0.0820,  ..., -0.0606,  0.0799, -0.3609],
        [-0.0334, -0.0726, -0.0820,  ..., -0.0606,  0.0799, -0.3609],
        [ 0.0379, -0.0552, -0.0784,  ..., -0.0239,  0.0709, -0.5804]],
       device='cuda:0')
Computed C_score: tensor([0.8519, 0.7290, 0.8211,  ..., 0.8072, 0.8024, 0.8830], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3375.7644, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0002, 0.0005, 0.0011, 0.0018], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([6338, 1280])
S-Scores: tensor([0.6313, 2.0144, 4.0648, 6.3537], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([6338, 1])
Inertia: tensor([263.5738], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([6338, 1280])
Centroid_list: tensor([[-0.0435, -0.0503, -0.0711,  ..., -0.0614,  0.0794, -0.1161],
        [-0.0482, -0.0730, -0.0698,  ..., -0.0640,  0.0880, -0.2316],
        [-0.0435, -0.0503, -0.0711,  ..., -0.0614,  0.0794, -0.1161],
        ...,
        [-0.0435, -0.0503, -0.0711,  ..., -0.0614,  0.0794, -0.1161],
        [-0.0435, -0.0503, -0.0711,  ..., -0.0614,  0.0794, -0.1161],
        [-0.0435, -0.0503, -0.0711,  ..., -0.0614,  0.0794, -0.1161]],
       device='cuda:0')
Computed C_score: tensor([0.5399, 0.7303, 0.7117,  ..., 0.6097, 0.6981, 0.6441], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4479.7002, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6338, 1])
Inertia: tensor([275.8304], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([6338, 1280])
Centroid_list: tensor([[-0.0350, -0.0383, -0.0702,  ..., -0.0564,  0.0801, -0.0289],
        [-0.0601, -0.0747, -0.0733,  ..., -0.0716,  0.0783, -0.2897],
        [-0.0350, -0.0383, -0.0702,  ..., -0.0564,  0.0801, -0.0289],
        ...,
        [-0.0350, -0.0383, -0.0702,  ..., -0.0564,  0.0801, -0.0289],
        [-0.0601, -0.0747, -0.0733,  ..., -0.0716,  0.0783, -0.2897],
        [-0.0601, -0.0747, -0.0733,  ..., -0.0716,  0.0783, -0.2897]],
       device='cuda:0')
Computed C_score: tensor([0.5150, 0.8265, 0.7457,  ..., 0.6450, 0.7512, 0.7786], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4642.5923, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6338, 1])
Inertia: tensor([262.1275], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([6338, 1280])
Centroid_list: tensor([[-0.0506, -0.0399, -0.0710,  ..., -0.0565,  0.0798,  0.0790],
        [-0.0640, -0.0765, -0.0738,  ..., -0.0737,  0.0776, -0.2790],
        [-0.0172, -0.0404, -0.0693,  ..., -0.0568,  0.0810, -0.1958],
        ...,
        [-0.0506, -0.0399, -0.0710,  ..., -0.0565,  0.0798,  0.0790],
        [-0.0640, -0.0765, -0.0738,  ..., -0.0737,  0.0776, -0.2790],
        [-0.0640, -0.0765, -0.0738,  ..., -0.0737,  0.0776, -0.2790]],
       device='cuda:0')
Computed C_score: tensor([0.5424, 0.8383, 0.7450,  ..., 0.6579, 0.7563, 0.7901], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4739.9424, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6338, 1])
Inertia: tensor([269.3952], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([6338, 1280])
Centroid_list: tensor([[-0.0529, -0.0393, -0.0721,  ..., -0.0535,  0.0790,  0.0862],
        [-0.0645, -0.0770, -0.0739,  ..., -0.0729,  0.0771, -0.2807],
        [-0.0174, -0.0401, -0.0694,  ..., -0.0564,  0.0810, -0.1970],
        ...,
        [-0.0529, -0.0393, -0.0721,  ..., -0.0535,  0.0790,  0.0862],
        [-0.0645, -0.0770, -0.0739,  ..., -0.0729,  0.0771, -0.2807],
        [-0.0645, -0.0770, -0.0739,  ..., -0.0729,  0.0771, -0.2807]],
       device='cuda:0')
Computed C_score: tensor([0.5308, 0.8312, 0.7455,  ..., 0.6592, 0.7588, 0.7818], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4800.5054, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0001, 0.0004, 0.0009, 0.0013], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([241, 1280])
S-Scores: tensor([0.6727, 1.5304, 3.3273, 5.8841], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([241, 1])
Inertia: tensor([305.2050], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([241, 1280])
Centroid_list: tensor([[-0.0238, -0.0478, -0.0718,  ..., -0.0431,  0.0676, -0.1370],
        [-0.0238, -0.0478, -0.0718,  ..., -0.0431,  0.0676, -0.1370],
        [-0.0354, -0.0644, -0.0688,  ..., -0.0551,  0.0809, -0.3889],
        ...,
        [-0.0238, -0.0478, -0.0718,  ..., -0.0431,  0.0676, -0.1370],
        [-0.0238, -0.0478, -0.0718,  ..., -0.0431,  0.0676, -0.1370],
        [-0.0238, -0.0478, -0.0718,  ..., -0.0431,  0.0676, -0.1370]],
       device='cuda:0')
Computed C_score: tensor([0.5600, 0.6706, 0.7762, 0.8444, 0.6816, 0.6761, 0.7280, 0.8821, 0.7398,
        0.8477, 0.6897, 0.6897, 0.7126, 0.6143, 0.7452, 0.6942, 0.6350, 0.5831,
        0.8243, 0.6845, 0.6353, 0.5252, 0.7629, 0.7548, 0.8184, 0.6460, 0.8498,
        0.8553, 0.6583, 0.6644, 0.7824, 0.6625, 0.5976, 0.6950, 0.8563, 0.6262,
        0.8003, 0.6184, 0.6890, 0.5701, 0.7929, 0.6498, 0.7208, 0.7635, 0.6318,
        0.5404, 0.6154, 0.7033, 0.6789, 0.7891, 0.7455, 0.6977, 0.8054, 0.7977,
        0.2973, 0.6951, 0.6360, 0.6117, 0.5709, 0.7053, 0.6806, 0.6760, 0.6113,
        0.8697, 0.6721, 0.7168, 0.6952, 0.5281, 0.6241, 0.8753, 0.6306, 0.6216,
        0.7139, 0.8000, 0.8312, 0.6150, 0.7161, 0.6878, 0.7826, 0.7673, 0.6281,
        0.6863, 0.8636, 0.8928, 0.5547, 0.7487, 0.4925, 0.5860, 0.7279, 0.6032,
        0.6351, 0.6632, 0.6550, 0.7734, 0.8200, 0.6426, 0.6616, 0.6036, 0.7734,
        0.6749, 0.7620, 0.7093, 0.7394, 0.7083, 0.6330, 0.8278, 0.7060, 0.6852,
        0.6704, 0.6001, 0.7090, 0.7230, 0.5922, 0.8613, 0.8040, 0.5620, 0.6958,
        0.8246, 0.6356, 0.5001, 0.5570, 0.7247, 0.6838, 0.7281, 0.6098, 0.6488,
        0.7265, 0.7559, 0.7636, 0.6598, 0.7393, 0.8121, 0.6685, 0.7443, 0.4981,
        0.8101, 0.6732, 0.7124, 0.6411, 0.7658, 0.5634, 0.6896, 0.7374, 0.7388,
        0.6273, 0.7501, 0.7014, 0.8059, 0.5647, 0.8076, 0.5397, 0.7081, 0.7169,
        0.6720, 0.6152, 0.7900, 0.8731, 0.6639, 0.8288, 0.6726, 0.8814, 0.7308,
        0.6573, 0.8127, 0.7161, 0.7137, 0.6725, 0.7297, 0.7672, 0.7638, 0.5902,
        0.8337, 0.6140, 0.8642, 0.7839, 0.5985, 0.6444, 0.7472, 0.7916, 0.9000,
        0.4895, 0.8153, 0.7862, 0.6411, 0.7986, 0.5562, 0.7223, 0.5507, 0.6063,
        0.8148, 0.7890, 0.8862, 0.7431, 0.6173, 0.7026, 0.6674, 0.6862, 0.6616,
        0.5917, 0.6599, 0.6646, 0.6461, 0.7071, 0.6590, 0.8845, 0.6058, 0.6169,
        0.6348, 0.6659, 0.6115, 0.6402, 0.6289, 0.7385, 0.7534, 0.6702, 0.6072,
        0.6773, 0.4855, 0.7334, 0.6367, 0.7450, 0.7010, 0.6613, 0.5425, 0.5909,
        0.7235, 0.6687, 0.7355, 0.6884, 0.6010, 0.5710, 0.6276, 0.7501, 0.7116,
        0.8316, 0.7770, 0.6756, 0.6527, 0.7484, 0.7221, 0.5801],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(167.7081, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([241, 1])
Inertia: tensor([123.2324], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([241, 1280])
Centroid_list: tensor([[-0.0044, -0.0390, -0.0510,  ..., -0.0275,  0.0657, -0.2698],
        [-0.0277, -0.0507, -0.0749,  ..., -0.0519,  0.0700, -0.1444],
        [-0.0277, -0.0507, -0.0749,  ..., -0.0519,  0.0700, -0.1444],
        ...,
        [-0.0277, -0.0507, -0.0749,  ..., -0.0519,  0.0700, -0.1444],
        [-0.0277, -0.0507, -0.0749,  ..., -0.0519,  0.0700, -0.1444],
        [-0.0044, -0.0390, -0.0510,  ..., -0.0275,  0.0657, -0.2698]],
       device='cuda:0')
Computed C_score: tensor([0.8500, 0.6477, 0.7367, 0.9478, 0.6910, 0.6815, 0.7594, 0.8532, 0.7446,
        0.9335, 0.8065, 0.7380, 0.7367, 0.5905, 0.8811, 0.7026, 0.6290, 0.5705,
        0.9360, 0.6611, 0.6456, 0.7760, 0.7018, 0.7514, 0.8025, 0.6797, 0.9251,
        0.7721, 0.7152, 0.6903, 0.7356, 0.7432, 0.8291, 0.6112, 0.9418, 0.8910,
        0.7603, 0.6097, 0.7227, 0.5974, 0.6808, 0.6593, 0.7560, 0.7133, 0.6411,
        0.5850, 0.6557, 0.9181, 0.6836, 0.7728, 0.7787, 0.7255, 0.7379, 0.7574,
        0.3050, 0.7010, 0.6450, 0.6226, 0.8830, 0.7045, 0.7460, 0.6673, 0.6097,
        0.9592, 0.6906, 0.7257, 0.8580, 0.8176, 0.6409, 0.8972, 0.6355, 0.6624,
        0.7411, 0.7719, 0.9305, 0.6689, 0.7204, 0.7030, 0.8170, 0.7780, 0.6339,
        0.6764, 0.7942, 0.8654, 0.8390, 0.7616, 0.4720, 0.8635, 0.7625, 0.5917,
        0.8501, 0.7218, 0.7039, 0.8182, 0.8104, 0.6902, 0.6466, 0.6409, 0.8950,
        0.7685, 0.7377, 0.7391, 0.7357, 0.8822, 0.7896, 0.9405, 0.8353, 0.7154,
        0.7769, 0.6187, 0.7765, 0.7678, 0.5932, 0.9402, 0.7823, 0.5570, 0.6873,
        0.8309, 0.9070, 0.5245, 0.5804, 0.8960, 0.7221, 0.7053, 0.8453, 0.7140,
        0.7096, 0.7749, 0.8026, 0.6425, 0.7659, 0.6706, 0.6893, 0.7560, 0.5052,
        0.7453, 0.6888, 0.7045, 0.6834, 0.7873, 0.6074, 0.7965, 0.7481, 0.7323,
        0.6648, 0.7044, 0.7543, 0.7375, 0.6017, 0.7901, 0.4832, 0.7425, 0.7702,
        0.6606, 0.9100, 0.7505, 0.9153, 0.6579, 0.9370, 0.6114, 0.9556, 0.6877,
        0.7105, 0.7661, 0.8685, 0.7093, 0.7106, 0.6147, 0.7694, 0.7993, 0.6243,
        0.7872, 0.6205, 0.7071, 0.7998, 0.6506, 0.6229, 0.7957, 0.7202, 0.9654,
        0.8382, 0.8168, 0.7311, 0.6817, 0.7739, 0.5275, 0.6914, 0.5905, 0.6438,
        0.6891, 0.6901, 0.9587, 0.7841, 0.8749, 0.7297, 0.8372, 0.7481, 0.7060,
        0.6321, 0.7030, 0.8488, 0.7177, 0.7355, 0.7032, 0.9609, 0.5821, 0.6226,
        0.6242, 0.6302, 0.8295, 0.6775, 0.6257, 0.8083, 0.6826, 0.6633, 0.8918,
        0.6144, 0.5114, 0.9098, 0.8595, 0.7711, 0.8667, 0.8956, 0.5259, 0.6085,
        0.7418, 0.5939, 0.7385, 0.6847, 0.5900, 0.5816, 0.5911, 0.6904, 0.6746,
        0.9343, 0.7552, 0.6108, 0.6868, 0.7661, 0.7756, 0.8748],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(176.8651, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([241, 1])
Inertia: tensor([115.3544], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([241, 1280])
Centroid_list: tensor([[-0.0063, -0.0358, -0.0489,  ..., -0.0242,  0.0680, -0.2680],
        [-0.0254, -0.0451, -0.0819,  ..., -0.0450,  0.0667, -0.0514],
        [-0.0283, -0.0599, -0.0656,  ..., -0.0636,  0.0742, -0.2913],
        ...,
        [-0.0283, -0.0599, -0.0656,  ..., -0.0636,  0.0742, -0.2913],
        [-0.0254, -0.0451, -0.0819,  ..., -0.0450,  0.0667, -0.0514],
        [-0.0063, -0.0358, -0.0489,  ..., -0.0242,  0.0680, -0.2680]],
       device='cuda:0')
Computed C_score: tensor([0.8604, 0.6415, 0.8165, 0.9579, 0.7529, 0.6802, 0.7765, 0.8349, 0.7178,
        0.9419, 0.8096, 0.7194, 0.7810, 0.6408, 0.8769, 0.7037, 0.6833, 0.6703,
        0.9464, 0.7181, 0.6953, 0.7808, 0.7340, 0.7947, 0.7839, 0.6734, 0.9301,
        0.8046, 0.7569, 0.7281, 0.8230, 0.7261, 0.8346, 0.6845, 0.9488, 0.9009,
        0.7488, 0.6823, 0.7061, 0.6805, 0.8070, 0.6538, 0.7594, 0.6808, 0.6894,
        0.6777, 0.6589, 0.9153, 0.7338, 0.8187, 0.7893, 0.7599, 0.8284, 0.8596,
        0.3706, 0.7509, 0.6432, 0.6339, 0.8919, 0.7302, 0.7603, 0.7176, 0.6705,
        0.9665, 0.6937, 0.7809, 0.8574, 0.8283, 0.6520, 0.8962, 0.6923, 0.6786,
        0.7338, 0.8245, 0.9384, 0.6787, 0.7309, 0.7012, 0.7917, 0.7659, 0.7112,
        0.7668, 0.8103, 0.8451, 0.8506, 0.7876, 0.5266, 0.8735, 0.7570, 0.5783,
        0.8508, 0.7317, 0.6943, 0.8033, 0.8226, 0.7957, 0.7311, 0.6322, 0.8862,
        0.7644, 0.8143, 0.7565, 0.7961, 0.8826, 0.7874, 0.9524, 0.8205, 0.6880,
        0.7863, 0.6295, 0.7348, 0.7894, 0.6599, 0.9462, 0.8626, 0.6120, 0.7573,
        0.8186, 0.9066, 0.5448, 0.5975, 0.8967, 0.7211, 0.6926, 0.8562, 0.7387,
        0.7304, 0.8364, 0.8004, 0.6469, 0.7630, 0.7984, 0.7399, 0.7914, 0.5643,
        0.8747, 0.6897, 0.7546, 0.7018, 0.8265, 0.6812, 0.7914, 0.7456, 0.7851,
        0.6613, 0.7979, 0.7181, 0.8489, 0.6179, 0.8084, 0.5815, 0.7729, 0.7861,
        0.7247, 0.9181, 0.8143, 0.9165, 0.7050, 0.9456, 0.6207, 0.9590, 0.7643,
        0.7000, 0.8093, 0.8585, 0.7325, 0.7211, 0.7344, 0.7665, 0.7836, 0.6544,
        0.7376, 0.6592, 0.8328, 0.8283, 0.6370, 0.6056, 0.7706, 0.8395, 0.9656,
        0.8521, 0.8187, 0.8187, 0.7022, 0.7881, 0.6064, 0.8005, 0.5968, 0.6696,
        0.7968, 0.8260, 0.9618, 0.8208, 0.8865, 0.7354, 0.8452, 0.7308, 0.7762,
        0.6341, 0.6979, 0.8394, 0.7331, 0.7511, 0.6915, 0.9644, 0.6476, 0.6656,
        0.6494, 0.6249, 0.8374, 0.7221, 0.6679, 0.8544, 0.7163, 0.7401, 0.9026,
        0.7002, 0.5187, 0.9007, 0.8594, 0.7819, 0.8572, 0.8969, 0.5358, 0.6533,
        0.7259, 0.6887, 0.8120, 0.7394, 0.5630, 0.5894, 0.6865, 0.7533, 0.6636,
        0.9490, 0.7748, 0.6849, 0.6925, 0.7526, 0.7547, 0.8875],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(183.1414, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([241, 1])
Inertia: tensor([115.3544], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([241, 1280])
Centroid_list: tensor([[-0.0063, -0.0358, -0.0489,  ..., -0.0242,  0.0680, -0.2680],
        [-0.0459, -0.0769, -0.0753,  ..., -0.0471,  0.0707, -0.1940],
        [-0.0168, -0.0518, -0.0643,  ..., -0.0701,  0.0778, -0.3554],
        ...,
        [-0.0459, -0.0769, -0.0753,  ..., -0.0471,  0.0707, -0.1940],
        [-0.0247, -0.0421, -0.0804,  ..., -0.0461,  0.0657, -0.0362],
        [-0.0063, -0.0358, -0.0489,  ..., -0.0242,  0.0680, -0.2680]],
       device='cuda:0')
Computed C_score: tensor([0.8604, 0.7820, 0.8485, 0.9579, 0.7534, 0.6851, 0.7815, 0.8349, 0.8721,
        0.9419, 0.8096, 0.7380, 0.7931, 0.6327, 0.8769, 0.7004, 0.6882, 0.6622,
        0.9464, 0.7090, 0.6887, 0.7808, 0.7517, 0.8421, 0.7839, 0.6643, 0.9301,
        0.8308, 0.7905, 0.7316, 0.8057, 0.7229, 0.8346, 0.7203, 0.9488, 0.9009,
        0.7484, 0.8226, 0.7153, 0.8003, 0.8539, 0.6538, 0.7601, 0.7098, 0.7021,
        0.6826, 0.6648, 0.9153, 0.7365, 0.8419, 0.7987, 0.8788, 0.8353, 0.8457,
        0.4680, 0.7598, 0.6417, 0.6340, 0.8919, 0.7283, 0.7552, 0.7164, 0.6647,
        0.9665, 0.8613, 0.7894, 0.8574, 0.8283, 0.6668, 0.8962, 0.7025, 0.6976,
        0.7331, 0.8424, 0.9384, 0.7154, 0.7258, 0.6996, 0.7919, 0.7621, 0.7216,
        0.7746, 0.8419, 0.8451, 0.8506, 0.7944, 0.5364, 0.8735, 0.7573, 0.5666,
        0.8508, 0.6967, 0.6943, 0.8619, 0.8166, 0.8110, 0.7246, 0.6442, 0.8862,
        0.7644, 0.8211, 0.7649, 0.8028, 0.8826, 0.7874, 0.9524, 0.8205, 0.7119,
        0.7863, 0.6174, 0.7366, 0.8632, 0.6547, 0.9462, 0.8979, 0.5943, 0.7635,
        0.8186, 0.9066, 0.5492, 0.6012, 0.8967, 0.7211, 0.6904, 0.8562, 0.7742,
        0.7344, 0.8322, 0.8019, 0.6998, 0.8571, 0.8300, 0.7401, 0.7957, 0.5778,
        0.8455, 0.7111, 0.7613, 0.7081, 0.8243, 0.6612, 0.7914, 0.7488, 0.8213,
        0.6085, 0.7909, 0.7256, 0.8088, 0.6254, 0.8092, 0.6228, 0.8555, 0.7731,
        0.7933, 0.9181, 0.8139, 0.9165, 0.7020, 0.9456, 0.6241, 0.9590, 0.7642,
        0.7031, 0.8221, 0.8585, 0.7245, 0.7898, 0.7799, 0.7599, 0.7808, 0.6449,
        0.7953, 0.6678, 0.8695, 0.8253, 0.6400, 0.7650, 0.7753, 0.8376, 0.9656,
        0.8521, 0.8211, 0.8697, 0.7111, 0.7925, 0.6041, 0.8216, 0.5987, 0.6754,
        0.8615, 0.7998, 0.9618, 0.8690, 0.8865, 0.7354, 0.8452, 0.7308, 0.8688,
        0.6341, 0.6979, 0.8394, 0.7200, 0.7897, 0.6630, 0.9644, 0.6446, 0.6656,
        0.6446, 0.6283, 0.8374, 0.7203, 0.6565, 0.8557, 0.7115, 0.7440, 0.9026,
        0.7613, 0.5146, 0.9007, 0.8594, 0.8601, 0.8572, 0.8969, 0.6104, 0.6246,
        0.7353, 0.6868, 0.8151, 0.7514, 0.7756, 0.5797, 0.6847, 0.7546, 0.6468,
        0.9490, 0.8202, 0.6813, 0.7655, 0.8308, 0.7564, 0.8875],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(186.2671, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0040, 0.0086, 0.0178, 0.0306], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([87, 1280])
S-Scores: tensor([0.6268, 1.9809, 4.0417, 5.8258], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([87, 1])
Inertia: tensor([164.4396], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([87, 1280])
Centroid_list: tensor([[-0.0330, -0.0828, -0.0589,  ..., -0.0555,  0.0829, -0.3620],
        [ 0.0166, -0.0638, -0.0616,  ..., -0.0710,  0.0713, -0.1249],
        [ 0.0166, -0.0638, -0.0616,  ..., -0.0710,  0.0713, -0.1249],
        ...,
        [-0.0330, -0.0828, -0.0589,  ..., -0.0555,  0.0829, -0.3620],
        [-0.0330, -0.0828, -0.0589,  ..., -0.0555,  0.0829, -0.3620],
        [-0.0330, -0.0828, -0.0589,  ..., -0.0555,  0.0829, -0.3620]],
       device='cuda:0')
Computed C_score: tensor([0.7864, 0.7529, 0.7081, 0.7073, 0.8900, 0.5746, 0.7459, 0.7808, 0.6658,
        0.7826, 0.6564, 0.6757, 0.5704, 0.7842, 0.7616, 0.7922, 0.7061, 0.8999,
        0.8694, 0.6036, 0.7193, 0.8384, 0.8579, 0.8154, 0.5905, 0.7441, 0.8964,
        0.8237, 0.8422, 0.9021, 0.7830, 0.5534, 0.7570, 0.7747, 0.7078, 0.6115,
        0.7142, 0.8575, 0.7673, 0.8451, 0.6499, 0.5724, 0.7978, 0.4450, 0.7631,
        0.8131, 0.7736, 0.8002, 0.6812, 0.8306, 0.7391, 0.6379, 0.7889, 0.8532,
        0.6408, 0.7948, 0.6285, 0.7764, 0.7127, 0.5828, 0.6618, 0.7036, 0.5001,
        0.8941, 0.7356, 0.5941, 0.8407, 0.5716, 0.7649, 0.5993, 0.6699, 0.6374,
        0.7990, 0.6534, 0.7411, 0.7767, 0.8714, 0.6126, 0.7589, 0.7893, 0.7006,
        0.8187, 0.8690, 0.6733, 0.8591, 0.7275, 0.8622], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(64.0834, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([87, 1])
Inertia: tensor([191.9390], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([87, 1280])
Centroid_list: tensor([[-0.0014, -0.0769, -0.0659,  ..., -0.0683,  0.0712, -0.1875],
        [-0.0014, -0.0769, -0.0659,  ..., -0.0683,  0.0712, -0.1875],
        [ 0.0307, -0.0531, -0.0572,  ..., -0.0708,  0.0740, -0.0741],
        ...,
        [-0.0428, -0.0848, -0.0580,  ..., -0.0548,  0.0828, -0.4201],
        [-0.0014, -0.0769, -0.0659,  ..., -0.0683,  0.0712, -0.1875],
        [-0.0428, -0.0848, -0.0580,  ..., -0.0548,  0.0828, -0.4201]],
       device='cuda:0')
Computed C_score: tensor([0.7397, 0.8127, 0.7072, 0.6859, 0.9119, 0.6210, 0.7475, 0.7806, 0.6502,
        0.8256, 0.6482, 0.7366, 0.6320, 0.8196, 0.8054, 0.8016, 0.6838, 0.9128,
        0.8740, 0.6581, 0.7130, 0.8658, 0.8721, 0.8398, 0.6241, 0.8085, 0.9202,
        0.8258, 0.8827, 0.9109, 0.7993, 0.5736, 0.7781, 0.7862, 0.7371, 0.6067,
        0.7198, 0.8444, 0.8141, 0.8335, 0.6901, 0.6356, 0.8418, 0.4189, 0.7543,
        0.7993, 0.8631, 0.7894, 0.7331, 0.7922, 0.7900, 0.6533, 0.7951, 0.8637,
        0.6791, 0.7896, 0.6255, 0.8384, 0.7348, 0.5889, 0.7355, 0.7529, 0.5522,
        0.8984, 0.7787, 0.6624, 0.8683, 0.5559, 0.7492, 0.6499, 0.6802, 0.6565,
        0.7886, 0.7098, 0.7682, 0.7868, 0.8631, 0.6634, 0.7767, 0.8500, 0.7147,
        0.8816, 0.8759, 0.6327, 0.8673, 0.6962, 0.8789], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(65.7805, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([87, 1])
Inertia: tensor([145.9086], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([87, 1280])
Centroid_list: tensor([[-0.0219, -0.0748, -0.0664,  ..., -0.0587,  0.0789, -0.2118],
        [-0.0219, -0.0748, -0.0664,  ..., -0.0587,  0.0789, -0.2118],
        [ 0.0280, -0.0516, -0.0567,  ..., -0.0677,  0.0758, -0.0549],
        ...,
        [-0.0353, -0.0916, -0.0612,  ..., -0.0519,  0.0834, -0.4746],
        [-0.0219, -0.0748, -0.0664,  ..., -0.0587,  0.0789, -0.2118],
        [-0.0353, -0.0916, -0.0612,  ..., -0.0519,  0.0834, -0.4746]],
       device='cuda:0')
Computed C_score: tensor([0.8133, 0.7996, 0.7065, 0.6844, 0.9569, 0.6207, 0.7466, 0.8191, 0.7129,
        0.8686, 0.6800, 0.7067, 0.6315, 0.8406, 0.8086, 0.8432, 0.6949, 0.9461,
        0.9051, 0.6648, 0.7341, 0.9014, 0.8812, 0.8867, 0.6265, 0.8015, 0.9595,
        0.8143, 0.9250, 0.9408, 0.8279, 0.5853, 0.7800, 0.8382, 0.7502, 0.6006,
        0.7369, 0.8425, 0.8076, 0.8309, 0.6936, 0.6375, 0.8696, 0.4391, 0.8012,
        0.8370, 0.8272, 0.8023, 0.6890, 0.8708, 0.7871, 0.6531, 0.8236, 0.8189,
        0.6828, 0.7561, 0.6335, 0.8282, 0.7374, 0.5827, 0.7424, 0.7297, 0.5475,
        0.9242, 0.7800, 0.6645, 0.8405, 0.5699, 0.8105, 0.6461, 0.7110, 0.6583,
        0.7812, 0.7300, 0.7759, 0.7779, 0.8330, 0.6618, 0.7826, 0.8482, 0.7676,
        0.8759, 0.8459, 0.7231, 0.9155, 0.7881, 0.9222], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(66.9458, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([87, 1])
Inertia: tensor([145.9086], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([87, 1280])
Centroid_list: tensor([[-0.0219, -0.0748, -0.0664,  ..., -0.0587,  0.0789, -0.2118],
        [-0.0219, -0.0748, -0.0664,  ..., -0.0587,  0.0789, -0.2118],
        [ 0.0286, -0.0522, -0.0582,  ..., -0.0677,  0.0737, -0.0465],
        ...,
        [-0.0353, -0.0916, -0.0612,  ..., -0.0519,  0.0834, -0.4746],
        [-0.0219, -0.0748, -0.0664,  ..., -0.0587,  0.0789, -0.2118],
        [-0.0353, -0.0916, -0.0612,  ..., -0.0519,  0.0834, -0.4746]],
       device='cuda:0')
Computed C_score: tensor([0.8133, 0.7996, 0.6981, 0.6837, 0.9569, 0.6219, 0.7473, 0.8191, 0.7129,
        0.8686, 0.6800, 0.7067, 0.6313, 0.8406, 0.8085, 0.8432, 0.6949, 0.9461,
        0.9051, 0.6620, 0.7341, 0.9014, 0.8812, 0.8867, 0.6223, 0.8029, 0.9595,
        0.8143, 0.9250, 0.9408, 0.8279, 0.5871, 0.7829, 0.8382, 0.7502, 0.5983,
        0.7369, 0.8425, 0.8097, 0.8314, 0.6954, 0.6344, 0.8696, 0.4391, 0.8012,
        0.8370, 0.8272, 0.8023, 0.6890, 0.8708, 0.7909, 0.6540, 0.8236, 0.8189,
        0.6855, 0.7561, 0.6347, 0.8282, 0.7395, 0.5865, 0.7474, 0.7297, 0.5497,
        0.9242, 0.7788, 0.6692, 0.8405, 0.5761, 0.8105, 1.0000, 0.7110, 0.6583,
        0.7780, 0.7300, 0.7759, 0.7738, 0.8330, 0.6649, 0.7823, 0.8482, 0.7676,
        0.8759, 0.8459, 0.7231, 0.9155, 0.7881, 0.9222], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(67.3169, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0097, 0.0292, 0.0569, 0.0796], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([2701, 1280])
S-Scores: tensor([0.6844, 2.0521, 4.1600, 6.9584], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([2701, 1])
Inertia: tensor([283.3924], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([2701, 1280])
Centroid_list: tensor([[-0.0086, -0.0473, -0.0666,  ..., -0.0883,  0.0789, -0.1904],
        [-0.0086, -0.0473, -0.0666,  ..., -0.0883,  0.0789, -0.1904],
        [-0.0086, -0.0473, -0.0666,  ..., -0.0883,  0.0789, -0.1904],
        ...,
        [-0.0086, -0.0473, -0.0666,  ..., -0.0883,  0.0789, -0.1904],
        [-0.0086, -0.0473, -0.0666,  ..., -0.0883,  0.0789, -0.1904],
        [-0.0086, -0.0473, -0.0666,  ..., -0.0883,  0.0789, -0.1904]],
       device='cuda:0')
Computed C_score: tensor([0.6030, 0.7936, 0.5980,  ..., 0.6818, 0.7617, 0.6271], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1938.1943, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2701, 1])
Inertia: tensor([249.5842], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([2701, 1280])
Centroid_list: tensor([[ 0.0059, -0.0366, -0.0640,  ..., -0.0896,  0.0805, -0.0877],
        [-0.0400, -0.0691, -0.0724,  ..., -0.0819,  0.0777, -0.4152],
        [ 0.0059, -0.0366, -0.0640,  ..., -0.0896,  0.0805, -0.0877],
        ...,
        [ 0.0059, -0.0366, -0.0640,  ..., -0.0896,  0.0805, -0.0877],
        [-0.0400, -0.0691, -0.0724,  ..., -0.0819,  0.0777, -0.4152],
        [ 0.0059, -0.0366, -0.0640,  ..., -0.0896,  0.0805, -0.0877]],
       device='cuda:0')
Computed C_score: tensor([0.6610, 0.8476, 0.6410,  ..., 0.6799, 0.7377, 0.6702], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1996.3397, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2701, 1])
Inertia: tensor([220.5621], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([2701, 1280])
Centroid_list: tensor([[ 2.7888e-04, -4.2442e-02, -6.8744e-02,  ..., -8.7140e-02,
          7.7983e-02, -9.6091e-02],
        [-4.8093e-02, -7.8171e-02, -7.3739e-02,  ..., -8.3206e-02,
          7.5073e-02, -4.4200e-01],
        [ 2.7888e-04, -4.2442e-02, -6.8744e-02,  ..., -8.7140e-02,
          7.7983e-02, -9.6091e-02],
        ...,
        [ 2.7888e-04, -4.2442e-02, -6.8744e-02,  ..., -8.7140e-02,
          7.7983e-02, -9.6091e-02],
        [-4.8093e-02, -7.8171e-02, -7.3739e-02,  ..., -8.3206e-02,
          7.5073e-02, -4.4200e-01],
        [ 2.7888e-04, -4.2442e-02, -6.8744e-02,  ..., -8.7140e-02,
          7.7983e-02, -9.6091e-02]], device='cuda:0')
Computed C_score: tensor([0.7100, 0.8603, 0.7017,  ..., 0.7057, 0.7465, 0.6761], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2039.1936, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2701, 1])
Inertia: tensor([225.2369], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([2701, 1280])
Centroid_list: tensor([[-0.0086, -0.0440, -0.0743,  ..., -0.0784,  0.0812, -0.1538],
        [-0.0486, -0.0790, -0.0735,  ..., -0.0834,  0.0744, -0.4324],
        [-0.0086, -0.0440, -0.0743,  ..., -0.0784,  0.0812, -0.1538],
        ...,
        [-0.0086, -0.0440, -0.0743,  ..., -0.0784,  0.0812, -0.1538],
        [-0.0486, -0.0790, -0.0735,  ..., -0.0834,  0.0744, -0.4324],
        [-0.0086, -0.0440, -0.0743,  ..., -0.0784,  0.0812, -0.1538]],
       device='cuda:0')
Computed C_score: tensor([0.7035, 0.8654, 0.7287,  ..., 0.7204, 0.7470, 0.6540], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2062.9924, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0004, 0.0010, 0.0020, 0.0034], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([5179, 1280])
S-Scores: tensor([0.6593, 1.9576, 4.0361, 6.4091], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([5179, 1])
Inertia: tensor([336.5396], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([5179, 1280])
Centroid_list: tensor([[-0.0499, -0.0570, -0.0539,  ..., -0.0559,  0.0770, -0.3802],
        [-0.0499, -0.0570, -0.0539,  ..., -0.0559,  0.0770, -0.3802],
        [-0.0534, -0.0481, -0.0766,  ..., -0.0587,  0.0457, -0.4629],
        ...,
        [-0.0499, -0.0570, -0.0539,  ..., -0.0559,  0.0770, -0.3802],
        [-0.0534, -0.0481, -0.0766,  ..., -0.0587,  0.0457, -0.4629],
        [-0.0534, -0.0481, -0.0766,  ..., -0.0587,  0.0457, -0.4629]],
       device='cuda:0')
Computed C_score: tensor([0.7595, 0.7320, 0.7876,  ..., 0.6848, 0.7638, 0.6448], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3741.1987, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5179, 1])
Inertia: tensor([287.4769], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([5179, 1280])
Centroid_list: tensor([[-0.0501, -0.0549, -0.0530,  ..., -0.0489,  0.0794, -0.3105],
        [-0.0501, -0.0549, -0.0530,  ..., -0.0489,  0.0794, -0.3105],
        [-0.0598, -0.0484, -0.0895,  ..., -0.0503,  0.0302, -0.4780],
        ...,
        [-0.0456, -0.0516, -0.0572,  ..., -0.0706,  0.0692, -0.4631],
        [-0.0598, -0.0484, -0.0895,  ..., -0.0503,  0.0302, -0.4780],
        [-0.0598, -0.0484, -0.0895,  ..., -0.0503,  0.0302, -0.4780]],
       device='cuda:0')
Computed C_score: tensor([0.7983, 0.7097, 0.8062,  ..., 0.6302, 0.7952, 0.6739], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3889.6414, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5179, 1])
Inertia: tensor([281.4536], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([5179, 1280])
Centroid_list: tensor([[-0.0500, -0.0536, -0.0520,  ..., -0.0478,  0.0797, -0.2984],
        [-0.0500, -0.0536, -0.0520,  ..., -0.0478,  0.0797, -0.2984],
        [-0.0592, -0.0468, -0.0897,  ..., -0.0493,  0.0296, -0.4712],
        ...,
        [-0.0691, -0.0791, -0.0737,  ..., -0.0751,  0.0580, -0.5485],
        [-0.0592, -0.0468, -0.0897,  ..., -0.0493,  0.0296, -0.4712],
        [-0.0592, -0.0468, -0.0897,  ..., -0.0493,  0.0296, -0.4712]],
       device='cuda:0')
Computed C_score: tensor([0.8025, 0.7056, 0.8035,  ..., 0.6623, 0.7943, 0.6772], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3967.5635, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5179, 1])
Inertia: tensor([115.5771], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([5179, 1280])
Centroid_list: tensor([[-0.0594, -0.0722, -0.0691,  ..., -0.0313,  0.0740, -0.5294],
        [-0.0398, -0.0430, -0.0441,  ..., -0.0565,  0.0819, -0.2160],
        [-0.0592, -0.0467, -0.0896,  ..., -0.0494,  0.0296, -0.4714],
        ...,
        [-0.0703, -0.0797, -0.0743,  ..., -0.0745,  0.0576, -0.5487],
        [-0.0592, -0.0467, -0.0896,  ..., -0.0494,  0.0296, -0.4714],
        [-0.0592, -0.0467, -0.0896,  ..., -0.0494,  0.0296, -0.4714]],
       device='cuda:0')
Computed C_score: tensor([0.9304, 0.7649, 0.8040,  ..., 0.6600, 0.7946, 0.6777], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4010.5601, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0002, 0.0005, 0.0010, 0.0016], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([874, 1280])
S-Scores: tensor([0.6494, 2.0091, 3.8431, 6.3494], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([874, 1])
Inertia: tensor([226.7282], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([874, 1280])
Centroid_list: tensor([[-0.0158, -0.0459, -0.0787,  ..., -0.0573,  0.0543, -0.4238],
        [-0.0158, -0.0459, -0.0787,  ..., -0.0573,  0.0543, -0.4238],
        [-0.0462, -0.0740, -0.0717,  ..., -0.0545,  0.0763, -0.3604],
        ...,
        [-0.0462, -0.0740, -0.0717,  ..., -0.0545,  0.0763, -0.3604],
        [-0.0158, -0.0459, -0.0787,  ..., -0.0573,  0.0543, -0.4238],
        [-0.0158, -0.0459, -0.0787,  ..., -0.0573,  0.0543, -0.4238]],
       device='cuda:0')
Computed C_score: tensor([0.6729, 0.6537, 0.6636, 0.8000, 0.6538, 0.8414, 0.8494, 0.7778, 0.5787,
        0.8281, 0.6510, 0.6976, 0.5796, 0.7258, 0.8098, 0.6976, 0.7267, 0.7377,
        0.5310, 0.4585, 0.7448, 0.6776, 0.6702, 0.4818, 0.6635, 0.7529, 0.8168,
        0.6345, 0.6674, 0.8338, 0.7703, 0.5790, 0.8009, 0.7177, 0.6611, 0.5875,
        0.6549, 0.6201, 0.5774, 0.5617, 0.7105, 0.7479, 0.6773, 0.7037, 0.6037,
        0.6033, 0.5685, 0.8334, 0.8352, 0.6329, 0.5351, 0.5411, 0.8007, 0.7196,
        0.7111, 0.7623, 0.7628, 0.8619, 0.8054, 0.7191, 0.5950, 0.8440, 0.9036,
        0.7709, 0.6735, 0.7462, 0.6483, 0.7240, 0.7041, 0.8140, 0.6097, 0.7876,
        0.7603, 0.7727, 0.7893, 0.7351, 0.7767, 0.7570, 0.6787, 0.6337, 0.7729,
        0.6956, 0.5801, 0.6388, 0.8375, 0.7251, 0.7626, 0.6087, 0.7740, 0.4656,
        0.8542, 0.8054, 0.7430, 0.8033, 0.6335, 0.5795, 0.8573, 0.7015, 0.5974,
        0.6794, 0.6629, 0.7892, 0.8424, 0.6788, 0.8108, 0.8786, 0.8592, 0.6688,
        0.8541, 0.7942, 0.7975, 0.7470, 0.7992, 0.7647, 0.6757, 0.5409, 0.5111,
        0.7134, 0.7509, 0.7497, 0.7161, 0.7291, 0.8596, 0.7810, 0.7576, 0.7061,
        0.8765, 0.7533, 0.5544, 0.6430, 0.7417, 0.6730, 0.8071, 0.8042, 0.8739,
        0.6336, 0.7490, 0.7653, 0.7960, 0.8675, 0.7448, 0.7918, 0.8480, 0.7591,
        0.4672, 0.5172, 0.6481, 0.3863, 0.7216, 0.8051, 0.6423, 0.7591, 0.4115,
        0.7054, 0.6195, 0.6648, 0.6982, 0.6956, 0.7743, 0.6237, 0.7932, 0.7202,
        0.8706, 0.6112, 0.6286, 0.6573, 0.8777, 0.6391, 0.7210, 0.6611, 0.6213,
        0.5845, 0.5992, 0.7011, 0.6408, 0.8686, 0.7398, 0.7663, 0.7993, 0.6095,
        0.7732, 0.6508, 0.5192, 0.8156, 0.8039, 0.6952, 0.6098, 0.7849, 0.9100,
        0.8965, 0.4656, 0.6291, 0.8605, 0.7736, 0.6912, 0.4799, 0.8680, 0.5827,
        0.7635, 0.7910, 0.5397, 0.6533, 0.8391, 0.8255, 0.7037, 0.7631, 0.5454,
        0.7817, 0.7080, 0.5571, 0.7753, 0.8739, 0.8180, 0.5423, 0.6663, 0.7879,
        0.8498, 0.8805, 0.8111, 0.6743, 0.8759, 0.7344, 0.7406, 0.6195, 0.7672,
        0.7655, 0.8033, 0.7878, 0.6754, 0.6761, 0.8393, 0.7523, 0.6455, 0.8946,
        0.7317, 0.6504, 0.7309, 0.7647, 0.8168, 0.6428, 0.6529, 0.7247, 0.8876,
        0.8014, 0.7342, 0.6533, 0.7791, 0.7812, 0.6353, 0.5809, 0.7018, 0.6630,
        0.6982, 0.7110, 0.8358, 0.8337, 0.6758, 0.7544, 0.7821, 0.7484, 0.6975,
        0.6594, 0.7139, 0.7333, 0.7115, 0.6033, 0.7218, 0.6154, 0.7462, 0.6313,
        0.6478, 0.7465, 0.7814, 0.6183, 0.8548, 0.6271, 0.6960, 0.8278, 0.6352,
        0.6971, 0.5777, 0.7684, 0.8128, 0.5799, 0.6857, 0.6654, 0.7326, 0.8117,
        0.6235, 0.5339, 0.7906, 0.7071, 0.5317, 0.7999, 0.8049, 0.7523, 0.8641,
        0.7093, 0.8974, 0.7927, 0.7859, 0.5395, 0.7296, 0.7146, 0.8569, 0.7296,
        0.7150, 0.6951, 0.8358, 0.7305, 0.5630, 0.6886, 0.8380, 0.6431, 0.7700,
        0.8938, 0.7075, 0.7185, 0.6695, 0.5802, 0.7288, 0.8110, 0.8425, 0.7477,
        0.7706, 0.9093, 0.6546, 0.7457, 0.5838, 0.8228, 0.4445, 0.7250, 0.6958,
        0.7300, 0.6392, 0.7906, 0.4568, 0.7521, 0.5191, 0.6652, 0.8746, 0.5811,
        0.8100, 0.7311, 0.6784, 0.8613, 0.8569, 0.6410, 0.8173, 0.6447, 0.6110,
        0.5710, 0.8415, 0.8959, 0.5395, 0.7953, 0.7036, 0.6317, 0.7787, 0.5956,
        0.7393, 0.7782, 0.7776, 0.6415, 0.7241, 0.7431, 0.6550, 0.7980, 0.7956,
        0.7110, 0.5952, 0.7462, 0.7534, 0.6079, 0.7691, 0.7808, 0.7766, 0.7713,
        0.6676, 0.8007, 0.6305, 0.7620, 0.7003, 0.4934, 0.9157, 0.7117, 0.5860,
        0.8341, 0.7760, 0.8834, 0.6074, 0.5267, 0.7345, 0.7649, 0.5300, 0.7805,
        0.6043, 0.5512, 0.8390, 0.7503, 0.5131, 0.7726, 0.5212, 0.7224, 0.8156,
        0.7301, 0.7668, 0.6197, 0.5236, 0.6027, 0.5224, 0.7211, 0.9202, 0.8389,
        0.6558, 0.8787, 0.6256, 0.8477, 0.7445, 0.7789, 0.7895, 0.7474, 0.6769,
        0.6366, 0.7695, 0.7991, 0.7392, 0.6742, 0.7803, 0.8023, 0.7308, 0.6960,
        0.6363, 0.7603, 0.6735, 0.7741, 0.7479, 0.7260, 0.6161, 0.7416, 0.7898,
        0.7506, 0.6691, 0.6941, 0.6203, 0.8366, 0.7987, 0.8887, 0.7821, 0.8106,
        0.7526, 0.7982, 0.6387, 0.6441, 0.7113, 0.6428, 0.7315, 0.6818, 0.7421,
        0.5370, 0.8293, 0.8833, 0.7062, 0.8414, 0.7636, 0.7037, 0.7732, 0.6232,
        0.7082, 0.5966, 0.5633, 0.8819, 0.4442, 0.8788, 0.7554, 0.6516, 0.8298,
        0.6585, 0.7773, 0.5614, 0.7134, 0.7331, 0.6874, 0.7903, 0.5892, 0.7820,
        0.8219, 0.5395, 0.5944, 0.7359, 0.6149, 0.8682, 0.6590, 0.5877, 0.7947,
        0.6436, 0.7551, 0.7343, 0.5103, 0.6902, 0.6740, 0.5288, 0.6846, 0.7618,
        0.6120, 0.6573, 0.6513, 0.6655, 0.7185, 0.7873, 0.7224, 0.5492, 0.6804,
        0.7556, 0.8005, 0.5000, 0.7104, 0.7633, 0.4853, 0.7707, 0.5224, 0.7036,
        0.8693, 0.5612, 0.6182, 0.6647, 0.6378, 0.7852, 0.6998, 0.7961, 0.8582,
        0.7153, 0.8227, 0.5962, 0.8075, 0.8262, 0.6430, 0.6786, 0.7039, 0.8717,
        0.8310, 0.6896, 0.7651, 0.8272, 0.7173, 0.5671, 0.5704, 0.6357, 0.7105,
        0.6515, 0.7890, 0.6619, 0.6913, 0.4714, 0.7419, 0.7676, 0.6491, 0.6906,
        0.7332, 0.6901, 0.8472, 0.5820, 0.7784, 0.5190, 0.8331, 0.6662, 0.8913,
        0.8415, 0.6621, 0.8795, 0.8908, 0.7539, 0.6647, 0.6696, 0.5638, 0.7064,
        0.7712, 0.6062, 0.7564, 0.7989, 0.8178, 0.7003, 0.7641, 0.5301, 0.7641,
        0.5630, 0.8963, 0.7298, 0.8827, 0.5047, 0.6271, 0.8671, 0.6886, 0.7045,
        0.8855, 0.6898, 0.6606, 0.6098, 0.8613, 0.6165, 0.8020, 0.7391, 0.6153,
        0.7381, 0.8212, 0.6130, 0.5696, 0.8188, 0.7494, 0.6641, 0.7453, 0.7204,
        0.6197, 0.6630, 0.6965, 0.6692, 0.7456, 0.8056, 0.8235, 0.6886, 0.6076,
        0.5334, 0.3822, 0.7600, 0.7194, 0.6444, 0.7830, 0.7764, 0.7412, 0.6548,
        0.7677, 0.8677, 0.7256, 0.7243, 0.6639, 0.8642, 0.6517, 0.6389, 0.8418,
        0.6234, 0.8984, 0.6412, 0.7187, 0.7479, 0.5330, 0.8131, 0.8412, 0.7882,
        0.6780, 0.8672, 0.8483, 0.7506, 0.5581, 0.7500, 0.8704, 0.6065, 0.7881,
        0.7385, 0.7434, 0.6870, 0.7043, 0.8046, 0.7576, 0.6864, 0.6938, 0.7931,
        0.6679, 0.7451, 0.6434, 0.5821, 0.6243, 0.7664, 0.8204, 0.6025, 0.7339,
        0.6787, 0.7266, 0.7733, 0.8156, 0.6653, 0.4431, 0.7864, 0.7958, 0.7037,
        0.8202, 0.7958, 0.6623, 0.6283, 0.8391, 0.7144, 0.8071, 0.6533, 0.8987,
        0.7399, 0.6679, 0.6853, 0.5254, 0.6350, 0.5389, 0.7545, 0.7268, 0.7970,
        0.5922, 0.6707, 0.8338, 0.7155, 0.7433, 0.6409, 0.7214, 0.5505, 0.5821,
        0.7501, 0.8461, 0.6626, 0.7647, 0.7204, 0.7471, 0.7178, 0.6058, 0.6547,
        0.8452, 0.7045, 0.8615, 0.7456, 0.5673, 0.5219, 0.7099, 0.5188, 0.7124,
        0.4790, 0.8199, 0.6513, 0.4865, 0.7352, 0.7101, 0.6686, 0.5266, 0.5847,
        0.5302, 0.7964, 0.7450, 0.7049, 0.5807, 0.5213, 0.4532, 0.7832, 0.8157,
        0.8484, 0.5767, 0.6613, 0.6242, 0.8538, 0.6320, 0.7719, 0.6107, 0.7496,
        0.6858, 0.7716, 0.4818, 0.8239, 0.7593, 0.7344, 0.8006, 0.7130, 0.5233,
        0.7313, 0.5733, 0.7700, 0.6201, 0.7416, 0.7805, 0.7929, 0.7275, 0.7212,
        0.7459, 0.7050, 0.4124, 0.5760, 0.6041, 0.7565, 0.5837, 0.9075, 0.6484,
        0.5737, 0.8434, 0.7133, 0.7474, 0.6860, 0.8446, 0.7025, 0.6585, 0.8533,
        0.7563, 0.7625, 0.8176, 0.4790, 0.5867, 0.6897, 0.7738, 0.8469, 0.6065,
        0.5971, 0.7936, 0.4656, 0.5388, 0.7043, 0.7177, 0.5858, 0.6974, 0.7691,
        0.7015, 0.7325, 0.8027, 0.7655, 0.7647, 0.7854, 0.8065, 0.8116, 0.9147,
        0.4656, 0.7165, 0.8001, 0.6482, 0.8902, 0.5977, 0.5773, 0.7108, 0.7497,
        0.5246, 0.9121, 0.8330, 0.6292, 0.8337, 0.7189, 0.7160, 0.7900, 0.8153,
        0.6411, 0.5068, 0.6943, 0.8836, 0.4930, 0.7820, 0.6861, 0.8469, 0.8428,
        0.4968, 0.6559, 0.7936, 0.6967, 0.7120, 0.6148, 0.6950, 0.7256, 0.8231,
        0.7836, 0.6801, 0.6566, 0.6653, 0.6654, 0.7080, 0.7299, 0.8989, 0.7406,
        0.6571, 0.8864, 0.7423, 0.8092, 0.6762, 0.6726, 0.8385, 0.7852, 0.6424,
        0.5310], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(621.9353, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([874, 1])
Inertia: tensor([182.1028], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([874, 1280])
Centroid_list: tensor([[-0.0254, -0.0574, -0.0685,  ..., -0.0638,  0.0622, -0.3647],
        [-0.0254, -0.0574, -0.0685,  ..., -0.0638,  0.0622, -0.3647],
        [-0.0451, -0.0739, -0.0729,  ..., -0.0522,  0.0765, -0.3542],
        ...,
        [-0.0451, -0.0739, -0.0729,  ..., -0.0522,  0.0765, -0.3542],
        [-0.0089, -0.0362, -0.0876,  ..., -0.0522,  0.0477, -0.4831],
        [-0.0254, -0.0574, -0.0685,  ..., -0.0638,  0.0622, -0.3647]],
       device='cuda:0')
Computed C_score: tensor([0.7550, 0.7394, 0.6609, 0.8098, 0.7295, 0.8706, 0.8967, 0.8398, 0.5680,
        0.7992, 0.7566, 0.7985, 0.6539, 0.7364, 0.8364, 0.6628, 0.7441, 0.7255,
        0.6515, 0.4575, 0.7304, 0.7794, 0.7493, 0.5822, 0.7442, 0.7443, 0.8170,
        0.7379, 0.6885, 0.8375, 0.7596, 0.6617, 0.7934, 0.7113, 0.7099, 0.5817,
        0.6981, 0.7064, 0.6283, 0.6633, 0.7824, 0.7729, 0.6624, 0.7207, 0.6546,
        0.6727, 0.5521, 0.8607, 0.8456, 0.6553, 0.6223, 0.6357, 0.8591, 0.7175,
        0.6997, 0.7988, 0.8049, 0.8700, 0.8320, 0.7045, 0.7030, 0.8499, 0.9129,
        0.7317, 0.7713, 0.7343, 0.7125, 0.7021, 0.7033, 0.7757, 0.5988, 0.8185,
        0.7502, 0.8119, 0.7887, 0.6910, 0.7567, 0.7750, 0.7313, 0.6248, 0.7662,
        0.7815, 0.6421, 0.6544, 0.8466, 0.7670, 0.7454, 0.7373, 0.7767, 0.4596,
        0.8625, 0.8162, 0.7189, 0.7894, 0.7213, 0.6103, 0.8591, 0.6795, 0.5708,
        0.7782, 0.6844, 0.7472, 0.8532, 0.6584, 0.7766, 0.8844, 0.8680, 0.6304,
        0.8632, 0.8054, 0.8524, 0.7267, 0.8458, 0.8076, 0.7425, 0.5139, 0.4827,
        0.7661, 0.7163, 0.7774, 0.7435, 0.7545, 0.8724, 0.7707, 0.7613, 0.7004,
        0.8789, 0.7524, 0.6756, 0.6419, 0.8381, 0.7018, 0.8571, 0.8222, 0.8695,
        0.7095, 0.8387, 0.7644, 0.7903, 0.8764, 0.8302, 0.7767, 0.8590, 0.7784,
        0.4610, 0.5189, 0.6400, 0.3893, 0.7847, 0.8149, 0.6380, 0.7498, 0.4956,
        0.7693, 0.7231, 0.7319, 0.7558, 0.7588, 0.8121, 0.6403, 0.7836, 0.7508,
        0.8715, 0.7224, 0.7633, 0.6981, 0.8779, 0.6987, 0.8261, 0.7108, 0.7080,
        0.6736, 0.6953, 0.8255, 0.6368, 0.8802, 0.7800, 0.7380, 0.8705, 0.7008,
        0.8383, 0.7224, 0.4963, 0.7737, 0.7998, 0.6836, 0.7076, 0.8386, 0.9195,
        0.9010, 0.4596, 0.7260, 0.8529, 0.7943, 0.6686, 0.5982, 0.8777, 0.6452,
        0.7654, 0.8054, 0.5138, 0.6888, 0.8605, 0.8180, 0.6763, 0.7593, 0.5762,
        0.8430, 0.6976, 0.6114, 0.7637, 0.8784, 0.7867, 0.5900, 0.7690, 0.8017,
        0.8541, 0.8872, 0.8055, 0.7050, 0.8804, 0.7016, 0.7072, 0.6455, 0.7732,
        0.7604, 0.8065, 0.8340, 0.6716, 0.7286, 0.8334, 0.7224, 0.6378, 0.9035,
        0.7159, 0.7262, 0.8339, 0.7546, 0.8356, 0.7474, 0.7637, 0.8340, 0.8952,
        0.7750, 0.8082, 0.6873, 0.8057, 0.7800, 0.6668, 0.5953, 0.7212, 0.7548,
        0.8033, 0.7987, 0.8437, 0.8426, 0.7501, 0.7583, 0.8118, 0.7223, 0.7580,
        0.6874, 0.7354, 0.7616, 0.7202, 0.6052, 0.7189, 0.7200, 0.7964, 0.6107,
        0.6630, 0.7105, 0.7908, 0.6728, 0.8178, 0.7320, 0.7844, 0.8327, 0.7496,
        0.6932, 0.6180, 0.7392, 0.8141, 0.5736, 0.6740, 0.6767, 0.7290, 0.8038,
        0.6521, 0.5284, 0.7893, 0.7808, 0.6103, 0.8012, 0.8116, 0.7792, 0.8670,
        0.6929, 0.9079, 0.8129, 0.7898, 0.5960, 0.7781, 0.6897, 0.8458, 0.7205,
        0.7147, 0.8026, 0.8644, 0.7241, 0.5483, 0.6705, 0.8061, 0.6452, 0.7693,
        0.9066, 0.6971, 0.7070, 0.7546, 0.5225, 0.7000, 0.8097, 0.8521, 0.7398,
        0.8327, 0.9188, 0.6987, 0.7718, 0.6239, 0.8170, 0.4391, 0.7432, 0.8074,
        0.7224, 0.6592, 0.8377, 0.5475, 0.7542, 0.5843, 0.6952, 0.8835, 0.6620,
        0.8748, 0.8081, 0.6547, 0.8627, 0.8683, 0.6401, 0.8611, 0.6863, 0.6371,
        0.5957, 0.8048, 0.9041, 0.5087, 0.8204, 0.8130, 0.7254, 0.7404, 0.5559,
        0.8255, 0.7752, 0.8289, 0.6513, 0.7806, 0.7875, 0.7246, 0.7938, 0.7664,
        0.7095, 0.7039, 0.8389, 0.8043, 0.6715, 0.7545, 0.8113, 0.8132, 0.7593,
        0.6268, 0.7993, 0.7310, 0.8494, 0.7511, 0.6087, 0.9221, 0.8193, 0.6381,
        0.8194, 0.7681, 0.8910, 0.7127, 0.6028, 0.7354, 0.7597, 0.6028, 0.7618,
        0.6013, 0.5402, 0.8401, 0.7392, 0.5621, 0.7263, 0.5175, 0.7556, 0.8230,
        0.8172, 0.8449, 0.7036, 0.5966, 0.6208, 0.6087, 0.7084, 0.9157, 0.8437,
        0.7316, 0.8817, 0.6742, 0.8333, 0.7509, 0.8039, 0.8158, 0.8117, 0.7857,
        0.7414, 0.8537, 0.7871, 0.7145, 0.7452, 0.8420, 0.8009, 0.8349, 0.7083,
        0.6151, 0.7632, 0.7296, 0.7367, 0.7370, 0.7817, 0.6455, 0.7283, 0.8617,
        0.7763, 0.6324, 0.6700, 0.6321, 0.8439, 0.8430, 0.8931, 0.7647, 0.7780,
        0.7601, 0.7878, 0.6411, 0.7409, 0.7593, 0.6925, 0.7749, 0.7091, 0.8411,
        0.6251, 0.8345, 0.8876, 0.7669, 0.8425, 0.7600, 0.6718, 0.8472, 0.7326,
        0.7070, 0.6358, 0.6439, 0.8842, 0.4435, 0.8813, 0.8223, 0.7748, 0.8312,
        0.7299, 0.7863, 0.6495, 0.7352, 0.8318, 0.7168, 0.8388, 0.6707, 0.7896,
        0.8220, 0.6044, 0.6923, 0.7452, 0.6070, 0.8744, 0.6807, 0.6275, 0.8393,
        0.6354, 0.7489, 0.7262, 0.6185, 0.6881, 0.7493, 0.5756, 0.7518, 0.7631,
        0.6015, 0.6879, 0.6595, 0.7539, 0.7286, 0.8166, 0.7359, 0.5907, 0.7043,
        0.7500, 0.8050, 0.5341, 0.7904, 0.7806, 0.5824, 0.7680, 0.5232, 0.6859,
        0.8803, 0.7112, 0.6053, 0.7515, 0.7276, 0.8321, 0.6836, 0.8847, 0.8664,
        0.8032, 0.8247, 0.7329, 0.8173, 0.7933, 0.6446, 0.7233, 0.7661, 0.8777,
        0.8387, 0.7182, 0.7585, 0.8275, 0.7023, 0.6243, 0.6395, 0.7506, 0.6972,
        0.7293, 0.8026, 0.7423, 0.6684, 0.4481, 0.7716, 0.8096, 0.6573, 0.7223,
        0.7587, 0.7606, 0.8541, 0.5974, 0.7666, 0.5519, 0.8404, 0.6410, 0.8935,
        0.8220, 0.7346, 0.8911, 0.8871, 0.7496, 0.6609, 0.6660, 0.5979, 0.7064,
        0.8160, 0.6653, 0.8601, 0.8292, 0.8252, 0.6586, 0.7651, 0.6041, 0.7642,
        0.6606, 0.9059, 0.7248, 0.8852, 0.4962, 0.6136, 0.8644, 0.6973, 0.6947,
        0.8928, 0.6732, 0.6637, 0.6506, 0.8714, 0.7119, 0.7691, 0.7711, 0.7192,
        0.7858, 0.8134, 0.6433, 0.6130, 0.7825, 0.7841, 0.6867, 0.7933, 0.7129,
        0.6860, 0.6599, 0.7288, 0.7627, 0.7357, 0.7883, 0.8283, 0.7538, 0.5963,
        0.5653, 0.4949, 0.8204, 0.7215, 0.6692, 0.7847, 0.7406, 0.7174, 0.7215,
        0.8277, 0.8735, 0.7821, 0.6981, 0.6664, 0.8698, 0.7085, 0.6177, 0.8311,
        0.6981, 0.9075, 0.7149, 0.7441, 0.7532, 0.5731, 0.8176, 0.8303, 0.8105,
        0.6520, 0.8656, 0.8575, 0.8155, 0.5433, 0.7388, 0.8789, 0.7422, 0.8048,
        0.7314, 0.7719, 0.6498, 0.7808, 0.7959, 0.7571, 0.7655, 0.7507, 0.8056,
        0.7064, 0.7655, 0.6400, 0.6773, 0.7560, 0.7288, 0.7925, 0.6805, 0.7252,
        0.7492, 0.7650, 0.7770, 0.8230, 0.7479, 0.5330, 0.7856, 0.7830, 0.6979,
        0.8385, 0.8224, 0.7223, 0.6349, 0.8507, 0.7934, 0.8107, 0.7666, 0.9041,
        0.7949, 0.7180, 0.7850, 0.5199, 0.7173, 0.6236, 0.7527, 0.7527, 0.8236,
        0.7146, 0.6966, 0.8229, 0.7441, 0.7397, 0.7130, 0.7596, 0.5163, 0.7144,
        0.7942, 0.8569, 0.6310, 0.7660, 0.7085, 0.7391, 0.7675, 0.6764, 0.7100,
        0.8500, 0.7403, 0.8719, 0.7086, 0.6618, 0.5702, 0.7693, 0.5250, 0.6870,
        0.5526, 0.8005, 0.7111, 0.4498, 0.6893, 0.7664, 0.6522, 0.5790, 0.5937,
        0.5022, 0.7921, 0.8014, 0.7409, 0.6345, 0.5414, 0.4947, 0.8519, 0.7825,
        0.8480, 0.6281, 0.6999, 0.6635, 0.8567, 0.7789, 0.7673, 0.6160, 0.7170,
        0.7680, 0.8090, 0.5097, 0.8719, 0.7586, 0.7759, 0.8074, 0.7804, 0.5811,
        0.8073, 0.5602, 0.7408, 0.7193, 0.7864, 0.7632, 0.7604, 0.8445, 0.7119,
        0.7491, 0.7546, 0.4901, 0.6463, 0.6515, 0.7929, 0.7042, 0.9082, 0.6738,
        0.5936, 0.8130, 0.7091, 0.8048, 0.6860, 0.8459, 0.7021, 0.6820, 0.8645,
        0.7537, 0.7440, 0.8639, 0.4766, 0.6744, 0.6924, 0.8159, 0.8575, 0.7069,
        0.5815, 0.8387, 0.4596, 0.5815, 0.7241, 0.7354, 0.6568, 0.6940, 0.7670,
        0.7196, 0.6936, 0.8143, 0.7631, 0.8031, 0.8546, 0.7917, 0.8147, 0.9227,
        0.4596, 0.7576, 0.7717, 0.6490, 0.8965, 0.6357, 0.6582, 0.8070, 0.8031,
        0.6226, 0.9183, 0.8302, 0.7107, 0.8402, 0.8074, 0.6961, 0.7591, 0.8232,
        0.7633, 0.5394, 0.7403, 0.8911, 0.5036, 0.7715, 0.7552, 0.8069, 0.8508,
        0.5088, 0.6712, 0.8118, 0.7611, 0.7269, 0.6398, 0.7001, 0.7144, 0.8209,
        0.7773, 0.7054, 0.7256, 0.7276, 0.7018, 0.7440, 0.8423, 0.9068, 0.7503,
        0.7735, 0.8974, 0.7608, 0.7967, 0.7073, 0.7405, 0.8434, 0.7807, 0.7236,
        0.5571], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(645.4080, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([874, 1])
Inertia: tensor([187.9793], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([874, 1280])
Centroid_list: tensor([[-0.0241, -0.0568, -0.0706,  ..., -0.0618,  0.0613, -0.3590],
        [-0.0241, -0.0568, -0.0706,  ..., -0.0618,  0.0613, -0.3590],
        [-0.0334, -0.0639, -0.0645,  ..., -0.0618,  0.0729, -0.3177],
        ...,
        [-0.0334, -0.0639, -0.0645,  ..., -0.0618,  0.0729, -0.3177],
        [-0.0095, -0.0351, -0.0878,  ..., -0.0529,  0.0476, -0.4841],
        [-0.0241, -0.0568, -0.0706,  ..., -0.0618,  0.0613, -0.3590]],
       device='cuda:0')
Computed C_score: tensor([0.7434, 0.7358, 0.7440, 0.8061, 0.7346, 0.8723, 0.8943, 0.8382, 0.6668,
        0.7972, 0.7593, 0.8028, 0.6489, 0.7372, 0.8410, 0.6634, 0.7436, 0.7215,
        0.6543, 0.4657, 0.7544, 0.7871, 0.7385, 0.5921, 0.7518, 0.7464, 0.8028,
        0.7262, 0.6713, 0.8568, 0.7268, 0.6637, 0.8213, 0.7634, 0.7229, 0.6784,
        0.6937, 0.7131, 0.6307, 0.6697, 0.7761, 0.7733, 0.6632, 0.7236, 0.6503,
        0.6762, 0.5415, 0.8609, 0.8464, 0.6572, 0.6237, 0.6354, 0.8574, 0.7096,
        0.6981, 0.8028, 0.7981, 0.9628, 0.8351, 0.7471, 0.6946, 0.8323, 0.9185,
        0.7333, 0.7726, 0.7874, 0.6955, 0.7864, 0.7015, 0.7706, 0.6357, 0.8225,
        0.7765, 0.8147, 0.7841, 0.7051, 0.7606, 0.7766, 0.7268, 0.6338, 0.7616,
        0.7818, 0.6547, 0.6599, 0.9270, 0.7622, 0.7454, 0.7357, 0.7696, 0.4234,
        0.9320, 0.8784, 0.7199, 0.7834, 0.7308, 0.6091, 0.8162, 0.6919, 0.5656,
        0.7700, 0.6868, 0.7665, 0.9532, 0.6828, 0.7896, 0.9430, 0.8683, 0.6539,
        0.8410, 0.8020, 0.8563, 0.7328, 0.8481, 0.8048, 0.7439, 0.5672, 0.4981,
        0.7653, 0.7670, 0.7722, 0.7351, 0.7561, 0.9562, 0.8700, 0.8023, 0.6986,
        0.8960, 0.7640, 0.6752, 0.6783, 0.8423, 0.7129, 0.8614, 0.8157, 0.8868,
        0.7000, 0.8420, 0.7654, 0.8086, 0.9347, 0.8359, 0.7797, 0.8183, 0.7758,
        0.4620, 0.5229, 0.7010, 0.4334, 0.7894, 0.8015, 0.6977, 0.7462, 0.5054,
        0.7746, 0.7107, 0.7144, 0.7605, 0.7620, 0.8053, 0.6524, 0.7861, 0.7462,
        0.8664, 0.7289, 0.7627, 0.6877, 0.8964, 0.7050, 0.8287, 0.7080, 0.7076,
        0.6808, 0.6996, 0.8285, 0.6713, 0.9370, 0.7847, 0.7471, 0.8753, 0.7034,
        0.8342, 0.7393, 0.5027, 0.7724, 0.7813, 0.6908, 0.7117, 0.8403, 0.9594,
        0.9413, 0.4234, 0.7327, 0.8858, 0.7985, 0.6706, 0.6119, 0.9767, 0.6664,
        0.7531, 0.8085, 0.5051, 0.6816, 0.8562, 0.8449, 0.6660, 0.7994, 0.5661,
        0.8488, 0.7535, 0.5955, 0.7521, 0.9524, 0.7866, 0.6030, 0.7578, 0.7965,
        0.8299, 0.9329, 0.8045, 0.7010, 0.8463, 0.6954, 0.7320, 0.6432, 0.7740,
        0.8330, 0.8081, 0.8350, 0.6992, 0.7228, 0.8319, 0.7252, 0.6466, 0.9624,
        0.7630, 0.7300, 0.8403, 0.7580, 0.8349, 0.7346, 0.7654, 0.8361, 0.8697,
        0.7702, 0.8134, 0.6874, 0.8016, 0.8039, 0.6570, 0.5866, 0.7349, 0.7453,
        0.8095, 0.7960, 0.9423, 0.9349, 0.7523, 0.7863, 0.8069, 0.7375, 0.7658,
        0.6839, 0.7392, 0.7605, 0.7223, 0.6429, 0.7687, 0.7258, 0.7919, 0.6461,
        0.6679, 0.7099, 0.7871, 0.6738, 0.8127, 0.7200, 0.7915, 0.7921, 0.7442,
        0.7701, 0.6167, 0.7312, 0.8064, 0.5757, 0.6896, 0.6731, 0.7289, 0.8414,
        0.6603, 0.6400, 0.8270, 0.7821, 0.6086, 0.8295, 0.8053, 0.7742, 0.8972,
        0.6891, 0.9605, 0.8090, 0.7692, 0.5857, 0.7815, 0.7121, 0.8653, 0.7392,
        0.7538, 0.8018, 0.8621, 0.7345, 0.5883, 0.6722, 0.8074, 0.6812, 0.7419,
        0.9525, 0.7757, 0.7086, 0.7448, 0.5691, 0.7046, 0.8037, 0.8540, 0.7433,
        0.8351, 0.9612, 0.7093, 0.7797, 0.6310, 0.8347, 0.4461, 0.7462, 0.7984,
        0.7176, 0.6590, 0.8484, 0.5534, 0.7858, 0.5981, 0.6909, 0.9481, 0.6742,
        0.8803, 0.8105, 0.7231, 0.8127, 0.9468, 0.6458, 0.8567, 0.6758, 0.6384,
        0.6058, 0.7993, 0.9635, 0.6537, 0.8223, 0.8186, 0.7355, 0.7304, 0.5745,
        0.8242, 0.7675, 0.8310, 0.6461, 0.7787, 0.7879, 0.7398, 0.7789, 0.7607,
        0.7252, 0.7244, 0.8435, 0.8015, 0.6751, 0.8104, 0.8090, 0.8165, 0.7599,
        0.6437, 0.8030, 0.7277, 0.8477, 0.7471, 0.6033, 0.9733, 0.8001, 0.6409,
        0.8127, 0.7621, 0.9498, 0.7030, 0.6012, 0.7700, 0.8186, 0.6072, 0.8022,
        0.6764, 0.5372, 0.8216, 0.7315, 0.5692, 0.7353, 0.5167, 0.7479, 0.7871,
        0.8183, 0.8489, 0.7039, 0.6063, 0.6053, 0.6086, 0.7739, 0.8857, 0.8474,
        0.7358, 0.9285, 0.6932, 0.8353, 0.7562, 0.8019, 0.8234, 0.8146, 0.7915,
        0.7490, 0.8584, 0.8535, 0.7064, 0.7419, 0.8224, 0.8013, 0.8415, 0.7147,
        0.6132, 0.8080, 0.7327, 0.7492, 0.7327, 0.7857, 0.6267, 0.7927, 0.8580,
        0.7802, 0.6414, 0.6656, 0.6523, 0.9255, 0.8409, 0.9462, 0.8012, 0.7730,
        0.7504, 0.8288, 0.6484, 0.7428, 0.7528, 0.6866, 0.7798, 0.7270, 0.8462,
        0.6098, 0.8510, 0.9162, 0.7737, 0.8665, 0.7755, 0.7674, 0.8460, 0.7238,
        0.7716, 0.6449, 0.6535, 0.8786, 0.4467, 0.9158, 0.8213, 0.7873, 0.8673,
        0.7271, 0.7810, 0.6530, 0.7166, 0.8358, 0.7062, 0.8445, 0.6695, 0.7904,
        0.7898, 0.6164, 0.6978, 0.7218, 0.6236, 0.9486, 0.6731, 0.6313, 0.8362,
        0.6532, 0.7499, 0.7317, 0.6109, 0.6873, 0.7527, 0.5918, 0.7551, 0.7634,
        0.5946, 0.7221, 0.6841, 0.7674, 0.7229, 0.8133, 0.7351, 0.5943, 0.7029,
        0.7474, 0.8073, 0.5202, 0.7966, 0.7835, 0.5824, 0.7677, 0.5289, 0.7076,
        0.8655, 0.7116, 0.6157, 0.7592, 0.7126, 0.8378, 0.6759, 0.8860, 0.9572,
        0.8075, 0.8227, 0.7260, 0.8131, 0.7841, 0.6792, 0.7383, 0.7683, 0.9395,
        0.7904, 0.7337, 0.7961, 0.8268, 0.7010, 0.6268, 0.6451, 0.7576, 0.7769,
        0.7070, 0.7984, 0.7328, 0.6816, 0.4507, 0.7703, 0.8042, 0.6606, 0.7265,
        0.7653, 0.7633, 0.9450, 0.6020, 0.7670, 0.5536, 0.9162, 0.6614, 0.8849,
        0.8148, 0.7304, 0.9657, 0.9024, 0.7321, 0.7330, 0.7507, 0.5892, 0.7704,
        0.8166, 0.6610, 0.8640, 0.8233, 0.8085, 0.6735, 0.8168, 0.6176, 0.7489,
        0.6616, 0.9729, 0.7323, 0.9141, 0.4915, 0.6472, 0.8703, 0.6964, 0.7006,
        0.9681, 0.7436, 0.6881, 0.6482, 0.9575, 0.7222, 0.7634, 0.7764, 0.7297,
        0.7856, 0.8044, 0.6421, 0.6064, 0.7779, 0.7812, 0.6890, 0.7966, 0.7388,
        0.6927, 0.7436, 0.7242, 0.7634, 0.7465, 0.7930, 0.7895, 0.7555, 0.5891,
        0.5593, 0.5079, 0.8259, 0.7532, 0.6717, 0.8061, 0.7344, 0.7290, 0.7220,
        0.8237, 0.9468, 0.7860, 0.7012, 0.6838, 0.9413, 0.7055, 0.6473, 0.8420,
        0.6847, 0.9379, 0.7222, 0.7577, 0.7596, 0.5658, 0.8158, 0.8337, 0.8098,
        0.6550, 0.8735, 0.9507, 0.8177, 0.5408, 0.7610, 0.9443, 0.7235, 0.8024,
        0.7202, 0.7747, 0.6578, 0.7772, 0.8022, 0.8155, 0.7633, 0.7377, 0.8002,
        0.7120, 0.7637, 0.7281, 0.6827, 0.7436, 0.7256, 0.7876, 0.6946, 0.7866,
        0.7521, 0.7624, 0.7802, 0.7987, 0.7437, 0.5363, 0.7867, 0.8143, 0.6984,
        0.8355, 0.8175, 0.7321, 0.6245, 0.9331, 0.7966, 0.8066, 0.7431, 0.9303,
        0.7958, 0.7173, 0.7690, 0.5280, 0.7057, 0.6372, 0.7683, 0.7450, 0.8258,
        0.7153, 0.6768, 0.8613, 0.7525, 0.8249, 0.7131, 0.7530, 0.5162, 0.7288,
        0.7944, 0.9595, 0.7207, 0.7822, 0.7142, 0.7560, 0.7734, 0.6822, 0.6986,
        0.8117, 0.7206, 0.8708, 0.7083, 0.6666, 0.5734, 0.7664, 0.5235, 0.6802,
        0.5535, 0.7972, 0.7093, 0.4607, 0.7178, 0.7648, 0.7030, 0.5928, 0.5908,
        0.5106, 0.7595, 0.7942, 0.7470, 0.6266, 0.5310, 0.5099, 0.8553, 0.8151,
        0.8481, 0.6353, 0.7010, 0.6679, 0.8888, 0.7727, 0.7995, 0.6226, 0.7304,
        0.7564, 0.7942, 0.5100, 0.8715, 0.8114, 0.7724, 0.8006, 0.7808, 0.5802,
        0.8053, 0.5646, 0.7420, 0.7255, 0.7711, 0.8165, 0.7649, 0.8496, 0.7674,
        0.7304, 0.7549, 0.4977, 0.6550, 0.6448, 0.7918, 0.7140, 0.8978, 0.7089,
        0.5834, 0.8131, 0.7118, 0.8118, 0.6757, 0.8335, 0.7319, 0.6800, 0.9483,
        0.7559, 0.7425, 0.8608, 0.4768, 0.6690, 0.7032, 0.8197, 0.9631, 0.7145,
        0.6508, 0.8401, 0.4234, 0.5802, 0.7251, 0.7386, 0.6457, 0.6985, 0.7490,
        0.7154, 0.7044, 0.8164, 0.7654, 0.8071, 0.8528, 0.8041, 0.8358, 0.9636,
        0.4234, 0.7609, 0.7639, 0.6401, 0.9497, 0.6519, 0.6594, 0.8142, 0.7975,
        0.6271, 0.9516, 0.8283, 0.6946, 0.8657, 0.8146, 0.6813, 0.7505, 0.7924,
        0.7428, 0.5490, 0.7639, 0.9455, 0.5038, 0.7565, 0.7575, 0.8042, 0.9311,
        0.5029, 0.6707, 0.8160, 0.7656, 0.7370, 0.6605, 0.7740, 0.7706, 0.8301,
        0.7449, 0.7050, 0.7407, 0.7320, 0.7237, 0.7367, 0.8458, 0.9602, 0.7950,
        0.7586, 0.9331, 0.7631, 0.8431, 0.7052, 0.7407, 0.8350, 0.8053, 0.7304,
        0.5572], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(654.0663, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([874, 1])
Inertia: tensor([175.0067], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([874, 1280])
Centroid_list: tensor([[-0.0314, -0.0582, -0.0691,  ..., -0.0610,  0.0643, -0.3475],
        [-0.0314, -0.0582, -0.0691,  ..., -0.0610,  0.0643, -0.3475],
        [-0.0336, -0.0658, -0.0624,  ..., -0.0637,  0.0786, -0.2763],
        ...,
        [-0.0336, -0.0658, -0.0624,  ..., -0.0637,  0.0786, -0.2763],
        [-0.0021, -0.0474, -0.0927,  ..., -0.0392,  0.0547, -0.4599],
        [-0.0314, -0.0582, -0.0691,  ..., -0.0610,  0.0643, -0.3475]],
       device='cuda:0')
Computed C_score: tensor([0.7670, 0.7492, 0.7414, 0.8671, 0.7421, 0.8474, 0.8971, 0.8250, 0.6503,
        0.8047, 0.7667, 0.8054, 0.6565, 0.7773, 0.8681, 0.6841, 0.7516, 0.7157,
        0.6688, 0.4953, 0.7410, 0.8655, 0.7593, 0.5984, 0.7383, 0.7635, 0.8208,
        0.7499, 0.6756, 0.8749, 0.7112, 0.6896, 0.8236, 0.7561, 0.7142, 0.6861,
        0.6851, 0.8098, 0.7623, 0.6866, 0.7887, 0.8041, 0.7433, 0.7832, 0.7014,
        0.6678, 0.5298, 0.8596, 0.8545, 0.6329, 0.6362, 0.6459, 0.8613, 0.7087,
        0.6751, 0.7985, 0.7967, 0.9653, 0.8469, 0.7381, 0.7180, 0.8050, 0.9137,
        0.7373, 0.7549, 0.7643, 0.7190, 0.7634, 0.7068, 0.8278, 0.6296, 0.8094,
        0.7663, 0.7877, 0.8097, 0.7103, 0.7671, 0.7545, 0.8001, 0.6231, 0.7709,
        0.7536, 0.6558, 0.6476, 0.9287, 0.7727, 0.7365, 0.7589, 0.8233, 0.3809,
        0.9346, 0.8720, 0.7030, 0.8435, 0.7236, 0.6315, 0.8358, 0.7024, 0.5540,
        0.7821, 0.6733, 0.7524, 0.9562, 0.6808, 0.7618, 0.9439, 0.8501, 0.6801,
        0.8663, 0.7965, 0.8254, 0.7352, 0.8569, 0.8048, 0.7526, 0.5852, 0.5675,
        0.7591, 0.7774, 0.7757, 0.7297, 0.8242, 0.9537, 0.8647, 0.8118, 0.6750,
        0.9063, 0.7844, 0.6973, 0.6726, 0.8044, 0.6892, 0.8307, 0.8656, 0.8867,
        0.7275, 0.8498, 0.7575, 0.8038, 0.9371, 0.8709, 0.7656, 0.8292, 0.7607,
        0.4672, 0.5417, 0.7022, 0.4454, 0.7917, 0.7947, 0.7037, 0.7387, 0.5082,
        0.8373, 0.7415, 0.7313, 0.8030, 0.8016, 0.8574, 0.6483, 0.7760, 0.7510,
        0.8636, 0.7907, 0.7866, 0.6962, 0.9075, 0.8255, 0.8015, 0.7612, 0.7242,
        0.7312, 0.7073, 0.8148, 0.6802, 0.9357, 0.8178, 0.7159, 0.8567, 0.7818,
        0.8771, 0.7238, 0.5272, 0.7871, 0.7901, 0.6605, 0.7156, 0.8048, 0.9601,
        0.9419, 0.3809, 0.7324, 0.8798, 0.7959, 0.6708, 0.6188, 0.9794, 0.6583,
        0.7661, 0.7883, 0.5414, 0.7269, 0.9132, 0.8295, 0.6579, 0.8029, 0.5870,
        0.8352, 0.7399, 0.6196, 0.7570, 0.9562, 0.8181, 0.5919, 0.7809, 0.8077,
        0.8493, 0.9305, 0.7977, 0.7407, 0.8606, 0.7347, 0.7447, 0.6496, 0.7639,
        0.8422, 0.8343, 0.8379, 0.6891, 0.7639, 0.8319, 0.7290, 0.6392, 0.9628,
        0.7427, 0.7857, 0.8515, 0.7380, 0.8536, 0.7696, 0.7840, 0.8244, 0.8971,
        0.8045, 0.8617, 0.6806, 0.8349, 0.8199, 0.6522, 0.5809, 0.7081, 0.7638,
        0.8057, 0.8379, 0.9451, 0.9357, 0.7657, 0.8112, 0.8170, 0.7063, 0.7582,
        0.6808, 0.7211, 0.7596, 0.7244, 0.6590, 0.7889, 0.8189, 0.8174, 0.6331,
        0.7856, 0.7571, 0.8277, 0.7389, 0.8715, 0.7503, 0.8391, 0.8078, 0.7569,
        0.7761, 0.6230, 0.7972, 0.8713, 0.5612, 0.6562, 0.6874, 0.8062, 0.8371,
        0.6444, 0.6256, 0.8338, 0.8027, 0.6165, 0.8453, 0.8230, 0.7971, 0.8987,
        0.7120, 0.9598, 0.8623, 0.7899, 0.5998, 0.7938, 0.7044, 0.8531, 0.7419,
        0.7633, 0.8164, 0.8648, 0.7348, 0.5810, 0.6527, 0.8208, 0.6685, 0.7400,
        0.9484, 0.7755, 0.7464, 0.7620, 0.5342, 0.6878, 0.7967, 0.8298, 0.7522,
        0.8105, 0.9603, 0.6898, 0.7649, 0.6285, 0.8405, 0.4348, 0.7680, 0.8190,
        0.7184, 0.6569, 0.8277, 0.5691, 0.8059, 0.5899, 0.7030, 0.9446, 0.6709,
        0.8414, 0.8197, 0.7180, 0.8088, 0.9444, 0.6352, 0.8763, 0.6856, 0.6993,
        0.5829, 0.8477, 0.9657, 0.6631, 0.8498, 0.8053, 0.7329, 0.7877, 0.6193,
        0.8348, 0.7577, 0.8402, 0.6575, 0.7834, 0.8463, 0.7331, 0.7862, 0.7889,
        0.7018, 0.7192, 0.8203, 0.8079, 0.6781, 0.7983, 0.8063, 0.8262, 0.8081,
        0.6825, 0.7952, 0.6892, 0.8515, 0.7593, 0.6222, 0.9736, 0.8304, 0.6601,
        0.8514, 0.7977, 0.9519, 0.7297, 0.6099, 0.7781, 0.8064, 0.6080, 0.7799,
        0.6889, 0.6045, 0.8293, 0.7208, 0.5616, 0.7521, 0.5900, 0.8310, 0.8054,
        0.8048, 0.8290, 0.7162, 0.5983, 0.6112, 0.6253, 0.7495, 0.8877, 0.8647,
        0.8117, 0.9325, 0.6731, 0.8538, 0.7404, 0.8343, 0.8114, 0.8254, 0.8496,
        0.7568, 0.8421, 0.8373, 0.7929, 0.7663, 0.8377, 0.8157, 0.8411, 0.7065,
        0.6267, 0.8253, 0.7334, 0.7527, 0.7192, 0.7585, 0.6553, 0.7817, 0.8820,
        0.8050, 0.6419, 0.7383, 0.6303, 0.9299, 0.8915, 0.9474, 0.8090, 0.8289,
        0.7792, 0.8168, 0.6241, 0.7124, 0.8151, 0.7123, 0.8115, 0.7234, 0.8498,
        0.6377, 0.8708, 0.9170, 0.8696, 0.8784, 0.7808, 0.7729, 0.8299, 0.7489,
        0.7779, 0.6313, 0.6523, 0.8974, 0.4340, 0.9182, 0.8374, 0.7894, 0.8849,
        0.7285, 0.8083, 0.6901, 0.7342, 0.8783, 0.7176, 0.8359, 0.6768, 0.8190,
        0.7955, 0.6122, 0.7903, 0.7143, 0.6156, 0.9498, 0.7008, 0.6338, 0.8739,
        0.6234, 0.7480, 0.7102, 0.6312, 0.6805, 0.7486, 0.5742, 0.7699, 0.8267,
        0.5842, 0.6816, 0.6769, 0.7561, 0.7057, 0.8733, 0.7214, 0.5927, 0.7196,
        0.7729, 0.8662, 0.5308, 0.7661, 0.8106, 0.5871, 0.7747, 0.5444, 0.6843,
        0.8542, 0.7367, 0.5909, 0.8641, 0.7398, 0.8729, 0.6740, 0.8520, 0.9588,
        0.8613, 0.8217, 0.7555, 0.8708, 0.8250, 0.7034, 0.7619, 0.7546, 0.9426,
        0.8180, 0.7490, 0.7957, 0.8332, 0.7361, 0.6260, 0.6426, 0.8402, 0.7583,
        0.7356, 0.8356, 0.7606, 0.7078, 0.4894, 0.7926, 0.8316, 0.6464, 0.8058,
        0.8375, 0.7644, 0.9474, 0.5860, 0.7551, 0.6525, 0.9204, 0.6730, 0.8996,
        0.8957, 0.7449, 0.9656, 0.9004, 0.7232, 0.7470, 0.7611, 0.5883, 0.7784,
        0.8275, 0.6698, 0.8244, 0.8726, 0.8390, 0.6649, 0.8270, 0.6172, 0.7433,
        0.6683, 0.9738, 0.7354, 0.9146, 0.5079, 0.6348, 0.8661, 0.7157, 0.6715,
        0.9702, 0.7345, 0.7121, 0.6635, 0.9596, 0.7195, 0.7780, 0.7895, 0.7373,
        0.7971, 0.8056, 0.6666, 0.5917, 0.8291, 0.7926, 0.7021, 0.7976, 0.7399,
        0.6809, 0.7447, 0.7223, 0.7476, 0.7698, 0.7714, 0.8044, 0.8256, 0.6088,
        0.5650, 0.5117, 0.8270, 0.7578, 0.6561, 0.8246, 0.7429, 0.7001, 0.7656,
        0.8455, 0.9507, 0.8425, 0.7126, 0.6531, 0.9413, 0.7100, 0.6613, 0.8225,
        0.6989, 0.9373, 0.7168, 0.7989, 0.7737, 0.5553, 0.8218, 0.8274, 0.8014,
        0.6659, 0.8884, 0.9528, 0.8435, 0.5498, 0.7261, 0.9466, 0.7635, 0.7906,
        0.7195, 0.7573, 0.7515, 0.8146, 0.7804, 0.8266, 0.7636, 0.7447, 0.8040,
        0.6943, 0.7928, 0.7420, 0.7194, 0.7769, 0.7837, 0.8581, 0.6911, 0.7801,
        0.7591, 0.7605, 0.7573, 0.8267, 0.7226, 0.5453, 0.7732, 0.7976, 0.6837,
        0.8308, 0.8835, 0.7281, 0.6255, 0.9331, 0.7691, 0.7921, 0.7803, 0.9288,
        0.8194, 0.7633, 0.7937, 0.5221, 0.7191, 0.6382, 0.7736, 0.7784, 0.8281,
        0.7248, 0.6913, 0.8396, 0.7375, 0.8302, 0.7112, 0.7958, 0.5346, 0.7328,
        0.7971, 0.9639, 0.7116, 0.8055, 0.6890, 0.7184, 0.8589, 0.6775, 0.7198,
        0.8210, 0.7636, 0.8909, 0.7077, 0.6764, 0.5831, 0.7700, 0.5501, 0.6857,
        0.5668, 0.8256, 0.7552, 0.5568, 0.7652, 0.7707, 0.6829, 0.5861, 0.5985,
        0.5476, 0.7568, 0.7902, 0.7285, 0.6344, 0.5388, 0.5062, 0.8728, 0.8133,
        0.8762, 0.6296, 0.6954, 0.8020, 0.8857, 0.8001, 0.8100, 0.6134, 0.7230,
        0.7692, 0.8054, 0.5066, 0.8671, 0.8227, 0.8313, 0.8426, 0.7937, 0.5770,
        0.8509, 0.5574, 0.7624, 0.7383, 0.7801, 0.7960, 0.7641, 0.8191, 0.7682,
        0.7407, 0.7976, 0.5035, 0.6487, 0.6588, 0.8017, 0.7176, 0.9034, 0.6814,
        0.5767, 0.8083, 0.8028, 0.8481, 0.6709, 0.8362, 0.7209, 0.6759, 0.9501,
        0.7530, 0.7541, 0.8277, 0.5655, 0.6757, 0.7207, 0.8636, 0.9671, 0.8059,
        0.6536, 0.8539, 0.3809, 0.5668, 0.7448, 0.7679, 0.6594, 0.7011, 0.7587,
        0.7594, 0.7496, 0.7967, 0.7470, 0.8258, 0.8535, 0.7880, 0.8465, 0.9622,
        0.3809, 0.8233, 0.7905, 0.6551, 0.9517, 0.6397, 0.6677, 0.9070, 0.8054,
        0.6335, 0.9529, 0.8124, 0.7232, 0.8652, 0.8010, 0.7194, 0.7547, 0.8183,
        0.7801, 0.5449, 0.7387, 0.9483, 0.4902, 0.7970, 0.7980, 0.8184, 0.9337,
        0.5286, 0.7493, 0.8003, 0.7335, 0.7191, 0.6384, 0.7459, 0.7477, 0.8407,
        0.7275, 0.7967, 0.7221, 0.7053, 0.6936, 0.7774, 0.8112, 0.9612, 0.7678,
        0.7909, 0.9275, 0.7438, 0.8230, 0.7021, 0.7107, 0.8492, 0.8016, 0.7646,
        0.5649], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(662.8298, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0010, 0.0031, 0.0058, 0.0095], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([662, 1280])
S-Scores: tensor([0.5169, 1.9123, 3.5963, 6.3764], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([662, 1])
Inertia: tensor([256.5438], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([662, 1280])
Centroid_list: tensor([[-0.0370, -0.0592, -0.0565,  ..., -0.0608,  0.0843, -0.1237],
        [-0.0802, -0.0219, -0.0623,  ..., -0.0075,  0.0709,  0.5888],
        [-0.0802, -0.0219, -0.0623,  ..., -0.0075,  0.0709,  0.5888],
        ...,
        [-0.0370, -0.0592, -0.0565,  ..., -0.0608,  0.0843, -0.1237],
        [-0.0370, -0.0592, -0.0565,  ..., -0.0608,  0.0843, -0.1237],
        [-0.0370, -0.0592, -0.0565,  ..., -0.0608,  0.0843, -0.1237]],
       device='cuda:0')
Computed C_score: tensor([0.7813, 0.5971, 0.8852, 0.8600, 0.8696, 0.8413, 0.8745, 0.7065, 0.6508,
        0.4595, 0.7181, 0.8851, 0.6037, 0.8421, 0.4408, 0.8318, 0.8930, 0.9026,
        0.8759, 0.8745, 0.7934, 0.9334, 0.7477, 0.8627, 0.5323, 0.8150, 0.9106,
        0.8453, 0.5218, 0.5464, 0.5542, 0.7595, 0.8969, 0.9564, 0.7600, 0.8930,
        0.9211, 0.8179, 0.9185, 0.9538, 0.9426, 0.5973, 0.8728, 0.9086, 0.6382,
        0.7780, 0.8386, 0.8453, 0.7780, 0.8380, 0.9135, 0.8077, 0.8991, 0.9363,
        0.8964, 0.9136, 0.8691, 0.7240, 0.8951, 0.7022, 0.7676, 0.9103, 0.8682,
        0.8032, 0.8053, 0.8356, 0.8581, 0.6895, 0.8614, 0.5419, 0.6838, 0.6573,
        0.4069, 0.6592, 0.8747, 0.8623, 0.6907, 0.8136, 0.8827, 0.8584, 0.7282,
        0.7309, 0.5921, 0.8351, 0.9288, 0.9217, 0.8734, 0.6087, 0.6928, 0.9083,
        0.3322, 0.8846, 0.5223, 0.9262, 0.5437, 0.8674, 0.8417, 0.9087, 0.7994,
        0.8811, 0.9052, 0.8840, 0.7527, 0.7699, 0.8547, 0.8312, 0.9071, 0.7924,
        0.7797, 0.9377, 0.5302, 0.9229, 0.3853, 0.6395, 0.9213, 0.8847, 0.7714,
        0.9033, 0.6613, 0.8943, 0.8250, 0.9288, 0.5262, 0.9247, 0.7669, 0.8779,
        0.6232, 0.8405, 0.7883, 0.8311, 0.7422, 0.9293, 0.8126, 0.8945, 0.6824,
        0.7826, 0.4274, 0.6759, 0.8905, 0.7686, 0.9252, 0.9129, 0.8954, 0.9086,
        0.7554, 0.8885, 0.9317, 0.8848, 0.7429, 0.8619, 0.7525, 0.8161, 0.8688,
        0.7174, 0.9305, 0.9059, 0.8828, 0.8949, 0.9078, 0.9256, 0.7574, 0.6142,
        0.8659, 0.8403, 0.8206, 0.4404, 0.6068, 0.7900, 0.8335, 0.7492, 0.6511,
        0.9052, 0.7391, 0.8570, 0.8364, 0.8675, 0.3465, 0.7154, 0.7455, 0.9162,
        0.7392, 0.8417, 0.9154, 0.7797, 0.8268, 0.8569, 0.7660, 0.8375, 0.9037,
        0.9249, 0.7774, 0.6153, 0.5163, 0.9372, 0.7751, 0.9012, 0.8494, 0.6664,
        0.5868, 0.3200, 0.8694, 0.8563, 0.9154, 0.7581, 0.8994, 0.6427, 0.7946,
        0.9199, 0.6422, 0.7873, 0.8314, 0.7920, 0.6432, 0.9489, 0.7006, 0.4919,
        0.8905, 0.8222, 0.9300, 0.8343, 0.7716, 0.8679, 0.6271, 0.9149, 0.8376,
        0.5001, 0.6989, 0.7819, 0.8019, 0.8620, 0.6293, 0.7327, 0.8521, 0.8518,
        0.6194, 0.8707, 0.8271, 0.9290, 0.8246, 0.8586, 0.3843, 0.8362, 0.9072,
        0.9152, 0.8402, 0.9141, 0.7571, 0.7687, 0.4722, 0.6494, 0.5298, 0.6388,
        0.8790, 0.8942, 0.7746, 0.7580, 0.8980, 0.9069, 0.5211, 0.5422, 0.7864,
        0.9112, 0.8910, 0.7188, 0.8883, 0.8215, 0.8203, 0.8554, 0.9249, 0.7926,
        0.9100, 0.8057, 0.5034, 0.9127, 0.8426, 0.9177, 0.5723, 0.5994, 0.6175,
        0.8394, 0.8945, 0.8781, 0.8729, 0.8784, 0.8714, 0.8154, 0.9455, 0.8012,
        0.8859, 0.9131, 0.8394, 0.7603, 0.8572, 0.6015, 0.7792, 0.8495, 0.8663,
        0.8755, 0.8702, 0.9041, 0.7730, 0.6530, 0.8400, 0.8670, 0.3408, 0.7612,
        0.7725, 0.8676, 0.9177, 0.7803, 0.8188, 0.8340, 0.8547, 0.7932, 0.7996,
        0.8175, 0.8369, 0.6357, 0.8233, 0.5907, 0.6380, 0.8073, 0.8670, 0.8583,
        0.6040, 0.9346, 0.8622, 0.8676, 0.8571, 0.8359, 0.7564, 0.5042, 0.6487,
        0.8661, 0.5119, 0.7866, 0.8459, 0.7512, 0.8986, 0.9338, 0.8649, 0.5458,
        0.8928, 0.8588, 0.8851, 0.8717, 0.9098, 0.8305, 0.7027, 0.6148, 0.9286,
        0.9164, 0.5021, 0.6429, 0.9083, 0.8360, 0.8022, 0.6511, 0.7660, 0.7087,
        0.7387, 0.6409, 0.9224, 0.8337, 0.9112, 0.6935, 0.7308, 0.7827, 0.9218,
        0.8204, 0.7196, 0.6822, 0.8740, 0.7301, 0.8168, 0.6621, 0.9065, 0.8277,
        0.6379, 0.8599, 0.7836, 0.7724, 0.7450, 0.7234, 0.8735, 0.9128, 0.9065,
        0.9213, 0.6475, 0.8959, 0.8257, 0.4964, 0.7768, 0.5812, 0.8706, 0.8532,
        0.6356, 0.8868, 0.8015, 0.9053, 0.8176, 0.8263, 0.8885, 0.7160, 0.8443,
        0.5949, 0.9203, 0.9248, 0.9247, 0.8557, 0.9119, 0.9053, 0.7822, 0.6094,
        0.9210, 0.8911, 0.8823, 0.7156, 0.7845, 0.8399, 0.9280, 0.4788, 0.8642,
        0.5597, 0.7323, 0.6487, 0.6736, 0.9256, 0.9010, 0.6885, 0.7704, 0.8982,
        0.8715, 0.8934, 0.7445, 0.8085, 0.8520, 0.7158, 0.7263, 0.5732, 0.8460,
        0.9228, 0.9167, 0.9115, 0.8136, 0.9212, 0.8013, 0.9177, 0.5734, 0.8770,
        0.8547, 0.6808, 0.7585, 0.7373, 0.5813, 0.7167, 0.9169, 0.9450, 0.9178,
        0.6695, 0.8106, 0.9209, 0.9071, 0.6656, 0.8719, 0.7127, 0.9162, 0.8636,
        0.9369, 0.7378, 0.8938, 0.7129, 0.9209, 0.7302, 0.9082, 0.8467, 0.8790,
        0.7400, 0.8513, 0.8763, 0.8967, 0.8855, 0.8542, 0.8991, 0.9062, 0.6976,
        0.7035, 0.6011, 0.6797, 0.8426, 0.7123, 0.8891, 0.8623, 0.7402, 0.5147,
        0.8504, 0.6249, 0.8734, 0.9318, 0.8134, 0.9211, 0.4633, 0.8323, 0.8237,
        0.8597, 0.4144, 0.7884, 0.8803, 0.7019, 0.7400, 0.7841, 0.6069, 0.8977,
        0.7547, 0.9274, 0.8695, 0.8511, 0.6410, 0.6016, 0.6669, 0.9179, 0.8977,
        0.8256, 0.5709, 0.5636, 0.6998, 0.7120, 0.9174, 0.7481, 0.6321, 0.8534,
        0.5774, 0.9025, 0.8452, 0.8655, 0.8009, 0.8968, 0.8599, 0.5234, 0.7863,
        0.7317, 0.9553, 0.8020, 0.7756, 0.6628, 0.8012, 0.6964, 0.8368, 0.4411,
        0.8447, 0.7917, 0.8917, 0.9054, 0.8505, 0.8389, 0.7125, 0.8838, 0.7392,
        0.8209, 0.9267, 0.8701, 0.2153, 0.6905, 0.6604, 0.5459, 0.7300, 0.8159,
        0.8771, 0.8180, 0.6820, 0.6921, 0.8219, 0.7324, 0.9440, 0.8329, 0.6110,
        0.9053, 0.3612, 0.6886, 0.8263, 0.5818, 0.7905, 0.7506, 0.5495, 0.9127,
        0.9262, 0.8119, 0.8354, 0.8863, 0.7193, 0.7486, 0.8953, 0.6276, 0.8150,
        0.5388, 0.9389, 0.7627, 0.8264, 0.7003, 0.9168, 0.6796, 0.7776, 0.7714,
        0.7863, 0.8092, 0.9183, 0.7768, 0.5940, 0.5715, 0.6706, 0.8788, 0.8948,
        0.8969, 0.9186, 0.7809, 0.8009, 0.7565, 0.7678, 0.9142, 0.7841, 0.6916,
        0.8572, 0.7930, 0.7617, 0.8431, 0.6595, 0.9093, 0.8933, 0.7230, 0.8574,
        0.4154, 0.9445, 0.7174, 0.9303, 0.8123, 0.9209, 0.6251, 0.7114, 0.8542,
        0.6369, 0.4494, 0.5721, 0.3205, 0.8971, 0.7607, 0.6311, 0.8400, 0.7536,
        0.7607, 0.8960, 0.7613, 0.7368, 0.8427, 0.9112, 0.8060, 0.8712, 0.9293,
        0.9114, 0.8877, 0.5910, 0.6418, 0.5280], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(519.4507, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([662, 1])
Inertia: tensor([256.4260], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([662, 1280])
Centroid_list: tensor([[-0.0368, -0.0592, -0.0563,  ..., -0.0611,  0.0842, -0.1269],
        [-0.0669, -0.0219, -0.0521,  ..., -0.0115,  0.0743,  0.8642],
        [-0.0669, -0.0219, -0.0521,  ..., -0.0115,  0.0743,  0.8642],
        ...,
        [-0.0368, -0.0592, -0.0563,  ..., -0.0611,  0.0842, -0.1269],
        [-0.0368, -0.0592, -0.0563,  ..., -0.0611,  0.0842, -0.1269],
        [-0.0368, -0.0592, -0.0563,  ..., -0.0611,  0.0842, -0.1269]],
       device='cuda:0')
Computed C_score: tensor([0.7814, 0.6158, 0.9304, 0.8606, 0.8768, 0.8999, 0.9194, 0.7061, 0.6513,
        0.4590, 0.7153, 0.9279, 0.6035, 0.8759, 0.4414, 0.8641, 0.9309, 0.9320,
        0.9366, 0.8930, 0.7943, 0.9486, 0.7466, 0.9011, 0.5306, 0.8154, 0.9452,
        0.8459, 0.5218, 0.5465, 0.5545, 0.7598, 0.9417, 0.9537, 0.7626, 0.8754,
        0.9226, 0.8595, 0.9316, 0.9410, 0.9477, 0.6905, 0.8565, 0.9282, 0.6379,
        0.7789, 0.8501, 0.8345, 0.7780, 0.8389, 0.9024, 0.7980, 0.9205, 0.9346,
        0.8779, 0.9536, 0.8779, 0.7239, 0.9416, 0.7351, 0.8330, 0.9320, 0.9238,
        0.8034, 0.8062, 0.8626, 0.8871, 0.6893, 0.8519, 0.5411, 0.6842, 0.6575,
        0.4066, 0.6599, 0.8634, 0.8664, 0.6884, 0.8143, 0.9364, 0.8916, 0.7284,
        0.7297, 0.5911, 0.8493, 0.9504, 0.9288, 0.8858, 0.6088, 0.6915, 0.9060,
        0.3318, 0.8697, 0.5219, 0.9484, 0.5427, 0.9135, 0.8394, 0.9549, 0.7991,
        0.8964, 0.9216, 0.9082, 0.7534, 0.7708, 0.9142, 0.8321, 0.9005, 0.7932,
        0.7803, 0.9626, 0.5292, 0.9513, 0.3857, 0.6403, 0.9145, 0.8773, 0.7721,
        0.9278, 0.6619, 0.8754, 0.8261, 0.9259, 0.5253, 0.9275, 0.7785, 0.9077,
        0.6230, 0.8776, 0.7896, 0.8320, 0.7421, 0.9365, 0.8027, 0.9291, 0.6833,
        0.7804, 0.4277, 0.6762, 0.9291, 0.8226, 0.9498, 0.9299, 0.8990, 0.9438,
        0.7564, 0.8743, 0.9393, 0.8981, 0.7415, 0.8907, 0.7532, 0.8737, 0.8604,
        0.7164, 0.9515, 0.8964, 0.9309, 0.9202, 0.8922, 0.9179, 0.7882, 0.6129,
        0.8575, 0.8399, 0.8209, 0.4408, 0.6067, 0.8340, 0.8349, 0.7500, 0.6512,
        0.9538, 0.7392, 0.9109, 0.8359, 0.8590, 0.3461, 0.7143, 0.7395, 0.9389,
        0.7393, 0.8956, 0.9158, 0.7795, 0.8973, 0.9092, 0.7660, 0.8669, 0.9273,
        0.9474, 0.7767, 0.6133, 0.5152, 0.9348, 0.7761, 0.9399, 0.8806, 0.6666,
        0.5872, 0.3196, 0.9046, 0.8554, 0.9274, 0.7405, 0.9438, 0.6782, 0.7890,
        0.9079, 0.6423, 0.7878, 0.8327, 0.7923, 0.6431, 0.9534, 0.7010, 0.4911,
        0.9196, 0.8221, 0.9198, 0.8346, 0.7573, 0.8710, 0.6277, 0.9369, 0.8433,
        0.4992, 0.6993, 0.7861, 0.8025, 0.9079, 0.6203, 0.7796, 0.9154, 0.8628,
        0.6185, 0.9238, 0.8603, 0.9492, 0.8662, 0.9088, 0.3839, 0.8365, 0.9467,
        0.9269, 0.8967, 0.9085, 0.7583, 0.7701, 0.4726, 0.6486, 0.5303, 0.6386,
        0.9316, 0.9275, 0.7749, 0.7583, 0.9029, 0.9472, 0.5200, 0.5410, 0.8344,
        0.9529, 0.9204, 0.7191, 0.9049, 0.8224, 0.8204, 0.8976, 0.9306, 0.7916,
        0.9376, 0.8068, 0.5023, 0.8950, 0.8880, 0.8989, 0.5723, 0.6005, 0.6181,
        0.8393, 0.8997, 0.8792, 0.8588, 0.9112, 0.9147, 0.8066, 0.9713, 0.8022,
        0.9354, 0.9134, 0.8695, 0.7581, 0.8851, 0.6007, 0.7793, 0.8784, 0.9138,
        0.8823, 0.8965, 0.9351, 0.7724, 0.6529, 0.8687, 0.8938, 0.3406, 0.7612,
        0.7731, 0.9122, 0.9494, 0.7800, 0.8069, 0.8621, 0.8825, 0.7939, 0.8582,
        0.8181, 0.8932, 0.6348, 0.8793, 0.5916, 0.6063, 0.8260, 0.9305, 0.8975,
        0.6052, 0.9509, 0.8939, 0.9195, 0.9129, 0.8364, 0.7569, 0.5051, 0.6486,
        0.8875, 0.5114, 0.7857, 0.8467, 0.7509, 0.9326, 0.9574, 0.8854, 0.5450,
        0.9088, 0.8564, 0.9304, 0.8959, 0.9036, 0.8770, 0.7034, 0.6152, 0.9539,
        0.9427, 0.5018, 0.6435, 0.9387, 0.8754, 0.8026, 0.6521, 0.7644, 0.7068,
        0.7398, 0.6399, 0.9183, 0.8950, 0.9509, 0.6945, 0.7301, 0.7833, 0.9413,
        0.8043, 0.7204, 0.6692, 0.9220, 0.7273, 0.8176, 0.6611, 0.9238, 0.8560,
        0.6778, 0.8740, 0.7840, 0.7733, 0.7450, 0.7227, 0.9183, 0.8908, 0.9393,
        0.9487, 0.6475, 0.9404, 0.8227, 0.4967, 0.7764, 0.5899, 0.9370, 0.8804,
        0.6355, 0.9331, 0.8355, 0.8905, 0.8183, 0.8272, 0.9344, 0.7360, 0.8539,
        0.5930, 0.9447, 0.9312, 0.9227, 0.9154, 0.9601, 0.9259, 0.7817, 0.6088,
        0.8989, 0.8916, 0.9066, 0.7165, 0.7963, 0.8409, 0.9576, 0.4784, 0.8809,
        0.5511, 0.7327, 0.6488, 0.7033, 0.9405, 0.8871, 0.6880, 0.7779, 0.9466,
        0.8838, 0.9263, 0.7453, 0.8090, 0.8529, 0.6904, 0.7254, 0.5726, 0.8254,
        0.9126, 0.9437, 0.9311, 0.8481, 0.9553, 0.8021, 0.9527, 0.5741, 0.9335,
        0.9054, 0.6819, 0.7596, 0.7365, 0.5814, 0.6938, 0.9421, 0.9220, 0.9223,
        0.6540, 0.8120, 0.9667, 0.8927, 0.7381, 0.9307, 0.7133, 0.9122, 0.9097,
        0.9275, 0.7790, 0.9237, 0.7099, 0.9488, 0.7296, 0.9440, 0.8974, 0.9172,
        0.7394, 0.8853, 0.8969, 0.9188, 0.9293, 0.8550, 0.9167, 0.9403, 0.6982,
        0.7034, 0.6018, 0.7081, 0.8434, 0.7111, 0.9318, 0.8526, 0.7412, 0.5130,
        0.9124, 0.6253, 0.9244, 0.9259, 0.8139, 0.9270, 0.4634, 0.8277, 0.8247,
        0.8745, 0.4136, 0.7894, 0.9129, 0.7019, 0.7409, 0.7890, 0.6069, 0.9432,
        0.7557, 0.9095, 0.8594, 0.8604, 0.6404, 0.6012, 0.6659, 0.9211, 0.8783,
        0.8381, 0.5651, 0.5625, 0.7004, 0.7122, 0.9198, 0.7487, 0.6311, 0.9072,
        0.5779, 0.9213, 0.8461, 0.8976, 0.7736, 0.9029, 0.8609, 0.5234, 0.7872,
        0.7321, 0.9392, 0.8012, 0.7757, 0.6630, 0.8205, 0.6972, 0.8378, 0.4407,
        0.8831, 0.7919, 0.9437, 0.9212, 0.8491, 0.8398, 0.7530, 0.8917, 0.7375,
        0.8857, 0.9394, 0.8710, 0.2157, 0.7253, 0.6601, 0.5457, 0.7302, 0.8168,
        0.9347, 0.8510, 0.6828, 0.6922, 0.8311, 0.7615, 0.9320, 0.8341, 0.6116,
        0.9287, 0.3604, 0.6817, 0.8272, 0.5806, 0.7888, 0.7513, 0.5802, 0.9323,
        0.9443, 0.8263, 0.8339, 0.9282, 0.6963, 0.7438, 0.9258, 0.6272, 0.8159,
        0.5371, 0.9494, 0.7624, 0.8950, 0.7002, 0.9613, 0.6782, 0.8066, 0.8260,
        0.7863, 0.8662, 0.9461, 0.7749, 0.6278, 0.5711, 0.6705, 0.9018, 0.9087,
        0.9386, 0.9536, 0.7805, 0.7998, 0.7470, 0.7690, 0.9102, 0.8054, 0.6926,
        0.9170, 0.8449, 0.7624, 0.8712, 0.6578, 0.9457, 0.9440, 0.7758, 0.9087,
        0.4156, 0.9424, 0.7165, 0.9348, 0.8133, 0.9119, 0.6249, 0.6976, 0.8611,
        0.6373, 0.4496, 0.5716, 0.3202, 0.9363, 0.7616, 0.6312, 0.8406, 0.7535,
        0.7613, 0.9245, 0.7858, 0.7472, 0.8448, 0.9127, 0.8063, 0.9237, 0.9568,
        0.8982, 0.9058, 0.5898, 0.6422, 0.5267], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(527.4817, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([662, 1])
Inertia: tensor([136.7371], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([662, 1280])
Centroid_list: tensor([[-0.0425, -0.0666, -0.0560,  ..., -0.0553,  0.0878, -0.1544],
        [-0.0687, -0.0196, -0.0499,  ..., -0.0086,  0.0742,  0.9376],
        [-0.0687, -0.0196, -0.0499,  ..., -0.0086,  0.0742,  0.9376],
        ...,
        [-0.0350, -0.0522, -0.0581,  ..., -0.0612,  0.0803, -0.0539],
        [-0.0350, -0.0522, -0.0581,  ..., -0.0612,  0.0803, -0.0539],
        [-0.0350, -0.0522, -0.0581,  ..., -0.0612,  0.0803, -0.0539]],
       device='cuda:0')
Computed C_score: tensor([0.8880, 0.6105, 0.9318, 0.9192, 0.8761, 0.8992, 0.9248, 0.8084, 0.6886,
        0.6182, 0.7602, 0.9271, 0.7647, 0.8766, 0.4716, 0.8594, 0.9300, 0.9369,
        0.9415, 0.8919, 0.8207, 0.9492, 0.8570, 0.9007, 0.6616, 0.7532, 0.9460,
        0.8203, 0.6104, 0.6709, 0.6221, 0.6925, 0.9410, 0.9542, 0.7606, 0.8777,
        0.9223, 0.8576, 0.9320, 0.9413, 0.9484, 0.7060, 0.8494, 0.9257, 0.6931,
        0.8356, 0.8424, 0.8215, 0.8787, 0.7989, 0.9077, 0.7846, 0.9212, 0.9352,
        0.8805, 0.9533, 0.8785, 0.7043, 0.9406, 0.7358, 0.8307, 0.9321, 0.9227,
        0.8112, 0.8511, 0.8629, 0.8870, 0.7537, 0.8534, 0.6282, 0.7702, 0.6474,
        0.5791, 0.6153, 0.8610, 0.8654, 0.7730, 0.8360, 0.9416, 0.8852, 0.8613,
        0.7548, 0.6929, 0.8487, 0.9504, 0.9286, 0.8854, 0.5950, 0.6350, 0.9054,
        0.4538, 0.8713, 0.5606, 0.9488, 0.5742, 0.9176, 0.8305, 0.9541, 0.8905,
        0.8957, 0.9216, 0.9094, 0.7118, 0.8443, 0.9217, 0.8337, 0.8981, 0.7371,
        0.8432, 0.9625, 0.6648, 0.9503, 0.5502, 0.6001, 0.9153, 0.8779, 0.8267,
        0.9281, 0.6731, 0.8717, 0.8380, 0.9268, 0.5928, 0.9339, 0.7229, 0.9077,
        0.6133, 0.8796, 0.8244, 0.8913, 0.7332, 0.9368, 0.8036, 0.9327, 0.6785,
        0.8313, 0.5027, 0.6382, 0.9287, 0.8240, 0.9493, 0.9327, 0.8995, 0.9431,
        0.7549, 0.8747, 0.9398, 0.8975, 0.7187, 0.8909, 0.7162, 0.8809, 0.8615,
        0.8018, 0.9520, 0.8997, 0.9304, 0.9199, 0.8870, 0.9187, 0.7841, 0.6141,
        0.8583, 0.9236, 0.9261, 0.6258, 0.6347, 0.8304, 0.8484, 0.7663, 0.6639,
        0.9570, 0.7399, 0.9170, 0.8348, 0.8594, 0.4658, 0.7050, 0.7583, 0.9388,
        0.7291, 0.9000, 0.9168, 0.8932, 0.9047, 0.9119, 0.8887, 0.8665, 0.9271,
        0.9475, 0.8827, 0.6653, 0.5403, 0.9359, 0.7676, 0.9391, 0.8805, 0.6538,
        0.6730, 0.4544, 0.9039, 0.8572, 0.9276, 0.7169, 0.9432, 0.5669, 0.7859,
        0.9085, 0.6347, 0.7905, 0.8172, 0.7433, 0.7438, 0.9541, 0.6622, 0.5638,
        0.9196, 0.9254, 0.9213, 0.9176, 0.6648, 0.8715, 0.6245, 0.9369, 0.8429,
        0.5936, 0.7930, 0.7862, 0.8254, 0.9099, 0.6797, 0.7698, 0.9202, 0.8628,
        0.7501, 0.9281, 0.8548, 0.9495, 0.8666, 0.9169, 0.4639, 0.8158, 0.9464,
        0.9268, 0.8989, 0.9089, 0.7310, 0.8221, 0.5496, 0.6589, 0.6105, 0.7313,
        0.9314, 0.9266, 0.9096, 0.8809, 0.9031, 0.9467, 0.6486, 0.6512, 0.8345,
        0.9521, 0.9201, 0.8031, 0.9046, 0.8938, 0.9116, 0.8974, 0.9311, 0.7514,
        0.9395, 0.8215, 0.6091, 0.8959, 0.8874, 0.9003, 0.6959, 0.6200, 0.6272,
        0.8522, 0.9005, 0.8792, 0.8592, 0.9056, 0.9162, 0.8056, 0.9713, 0.7826,
        0.9403, 0.9220, 0.8700, 0.8154, 0.8915, 0.6657, 0.8911, 0.8780, 0.9175,
        0.8836, 0.8969, 0.9392, 0.7993, 0.7222, 0.8688, 0.8998, 0.4726, 0.8841,
        0.7188, 0.9114, 0.9491, 0.8593, 0.8029, 0.8499, 0.8830, 0.8356, 0.8564,
        0.7901, 0.9011, 0.6093, 0.8842, 0.5999, 0.6121, 0.8263, 0.9350, 0.9014,
        0.6296, 0.9513, 0.8938, 0.9185, 0.9195, 0.8224, 0.7754, 0.5309, 0.7345,
        0.8874, 0.6726, 0.7506, 0.8492, 0.8416, 0.9314, 0.9637, 0.8859, 0.6901,
        0.9098, 0.8572, 0.9297, 0.8957, 0.9084, 0.8810, 0.7356, 0.7028, 0.9538,
        0.9424, 0.5143, 0.6798, 0.9383, 0.8717, 0.8607, 0.6265, 0.8525, 0.7760,
        0.6822, 0.7265, 0.9199, 0.8941, 0.9507, 0.7543, 0.8403, 0.8285, 0.9410,
        0.8010, 0.7258, 0.6465, 0.9216, 0.7800, 0.8613, 0.6923, 0.9241, 0.8561,
        0.6030, 0.8737, 0.7824, 0.8405, 0.8645, 0.7683, 0.9177, 0.8930, 0.9392,
        0.9478, 0.7745, 0.9396, 0.8120, 0.6186, 0.8181, 0.5590, 0.9436, 0.8851,
        0.7004, 0.9353, 0.8276, 0.8898, 0.8069, 0.7901, 0.9348, 0.7358, 0.8549,
        0.7014, 0.9502, 0.9358, 0.9196, 0.9258, 0.9595, 0.9266, 0.7502, 0.6531,
        0.9000, 0.8936, 0.9069, 0.7405, 0.7963, 0.8099, 0.9622, 0.5838, 0.8814,
        0.5642, 0.7931, 0.7319, 0.7087, 0.9399, 0.8873, 0.7898, 0.7760, 0.9521,
        0.8845, 0.9291, 0.7794, 0.8375, 0.8534, 0.6720, 0.7915, 0.6434, 0.8270,
        0.9129, 0.9438, 0.9307, 0.8470, 0.9547, 0.8993, 0.9557, 0.6466, 0.9329,
        0.9034, 0.6235, 0.7206, 0.7297, 0.4944, 0.7064, 0.9421, 0.9231, 0.9224,
        0.7108, 0.7791, 0.9659, 0.8942, 0.7361, 0.9362, 0.7669, 0.9118, 0.9083,
        0.9282, 0.7735, 0.9232, 0.7285, 0.9483, 0.6747, 0.9437, 0.9018, 0.9198,
        0.8387, 0.8854, 0.8970, 0.9170, 0.9316, 0.8321, 0.9171, 0.9418, 0.7024,
        0.8378, 0.6154, 0.6471, 0.8180, 0.7881, 0.9385, 0.8439, 0.7483, 0.6260,
        0.9189, 0.6667, 0.9301, 0.9290, 0.7696, 0.9315, 0.4741, 0.8223, 0.8766,
        0.8795, 0.5665, 0.7900, 0.9131, 0.6620, 0.6793, 0.7894, 0.6841, 0.9419,
        0.7111, 0.9047, 0.8579, 0.8590, 0.7011, 0.6706, 0.6631, 0.9228, 0.8821,
        0.8390, 0.4652, 0.6505, 0.6763, 0.8392, 0.9200, 0.7108, 0.7197, 0.9130,
        0.5131, 0.9216, 0.8285, 0.8963, 0.7918, 0.9033, 0.8623, 0.6164, 0.7829,
        0.6847, 0.9416, 0.8017, 0.8839, 0.6611, 0.8119, 0.6668, 0.8735, 0.5604,
        0.8864, 0.8903, 0.9428, 0.9266, 0.8491, 0.9191, 0.7421, 0.8928, 0.7352,
        0.8923, 0.9447, 0.8933, 0.3427, 0.7195, 0.6371, 0.6487, 0.7364, 0.7575,
        0.9337, 0.8447, 0.6400, 0.8058, 0.8317, 0.7611, 0.9320, 0.8819, 0.7006,
        0.9288, 0.5022, 0.6426, 0.8893, 0.6457, 0.8488, 0.7122, 0.6036, 0.9315,
        0.9484, 0.8265, 0.8350, 0.9313, 0.6728, 0.7453, 0.9255, 0.6528, 0.8254,
        0.5438, 0.9517, 0.8167, 0.8982, 0.8371, 0.9606, 0.6865, 0.8158, 0.8266,
        0.7759, 0.8732, 0.9458, 0.8485, 0.5352, 0.6684, 0.7239, 0.9026, 0.9135,
        0.9382, 0.9528, 0.8518, 0.7571, 0.7518, 0.8288, 0.9131, 0.7898, 0.7286,
        0.9223, 0.8421, 0.7572, 0.8748, 0.6709, 0.9454, 0.9501, 0.7760, 0.9091,
        0.5269, 0.9430, 0.8091, 0.9351, 0.7860, 0.9119, 0.6381, 0.6371, 0.8619,
        0.6712, 0.6236, 0.6410, 0.5049, 0.9429, 0.7634, 0.6372, 0.9128, 0.7777,
        0.7490, 0.9246, 0.7855, 0.7479, 0.8449, 0.9182, 0.8062, 0.9228, 0.9563,
        0.8982, 0.9098, 0.7244, 0.6714, 0.6570], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(539.5898, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([662, 1])
Inertia: tensor([136.6091], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([662, 1280])
Centroid_list: tensor([[-0.0429, -0.0667, -0.0565,  ..., -0.0552,  0.0880, -0.1522],
        [-0.0896, -0.0230, -0.0654,  ..., -0.0233,  0.0726,  0.6580],
        [-0.0622, -0.0181, -0.0451,  ..., -0.0047,  0.0744,  1.0124],
        ...,
        [-0.0326, -0.0527, -0.0569,  ..., -0.0621,  0.0803, -0.0780],
        [-0.0326, -0.0527, -0.0569,  ..., -0.0621,  0.0803, -0.0780],
        [-0.0326, -0.0527, -0.0569,  ..., -0.0621,  0.0803, -0.0780]],
       device='cuda:0')
Computed C_score: tensor([0.8879, 0.6178, 0.9321, 0.9190, 0.8782, 0.8978, 0.9264, 0.8088, 0.6956,
        0.6115, 0.7602, 0.9324, 0.7624, 0.8757, 0.4729, 0.8571, 0.9398, 0.9401,
        0.9522, 0.8930, 0.8207, 0.9394, 0.8570, 0.9145, 0.6615, 0.7593, 0.9401,
        0.8183, 0.6073, 0.6695, 0.6242, 0.7018, 0.9481, 0.9637, 0.7789, 0.8989,
        0.9208, 0.8626, 0.9287, 0.9426, 0.9413, 0.6979, 0.8817, 0.9173, 0.6961,
        0.8360, 0.8573, 0.8350, 0.8789, 0.7976, 0.9004, 0.8238, 0.9188, 0.9488,
        0.8775, 0.9552, 0.8795, 0.7076, 0.9564, 0.7452, 0.8373, 0.9332, 0.9278,
        0.8114, 0.8515, 0.8672, 0.8798, 0.7571, 0.8815, 0.6245, 0.7714, 0.6524,
        0.5723, 0.6211, 0.9074, 0.8742, 0.7718, 0.8355, 0.9538, 0.8765, 0.8620,
        0.7494, 0.6916, 0.8640, 0.9525, 0.9324, 0.8711, 0.5989, 0.7232, 0.9101,
        0.4472, 0.8944, 0.5615, 0.9473, 0.5733, 0.9252, 0.8376, 0.9634, 0.8913,
        0.8838, 0.9197, 0.9004, 0.7179, 0.8453, 0.9272, 0.8431, 0.9211, 0.7454,
        0.8442, 0.9631, 0.6579, 0.9601, 0.5445, 0.6077, 0.9120, 0.8860, 0.8268,
        0.9299, 0.6807, 0.8754, 0.8376, 0.9390, 0.5917, 0.9268, 0.7766, 0.9036,
        0.6164, 0.8854, 0.8247, 0.8919, 0.7396, 0.9342, 0.8509, 0.9316, 0.6788,
        0.8309, 0.5031, 0.6453, 0.9354, 0.8362, 0.9439, 0.9252, 0.8966, 0.9512,
        0.7558, 0.8925, 0.9331, 0.9045, 0.7194, 0.8840, 0.7215, 0.8932, 0.8982,
        0.7952, 0.9523, 0.8940, 0.9416, 0.9225, 0.9221, 0.9308, 0.7842, 0.6123,
        0.8783, 0.9236, 0.9268, 0.6201, 0.6393, 0.8399, 0.8486, 0.7659, 0.6669,
        0.9593, 0.7388, 0.9326, 0.8332, 0.8602, 0.4662, 0.7053, 0.7512, 0.9395,
        0.7321, 0.9071, 0.9286, 0.8938, 0.9169, 0.9127, 0.8894, 0.8589, 0.9243,
        0.9397, 0.8837, 0.6651, 0.5420, 0.9344, 0.7754, 0.9539, 0.8651, 0.6545,
        0.6742, 0.4429, 0.9070, 0.8775, 0.9173, 0.8066, 0.9538, 0.5524, 0.7971,
        0.9092, 0.6356, 0.7901, 0.8163, 0.7499, 0.7440, 0.9482, 0.6715, 0.5624,
        0.9164, 0.9261, 0.9409, 0.9176, 0.8128, 0.8847, 0.6311, 0.9390, 0.8465,
        0.5924, 0.7941, 0.7922, 0.8253, 0.9124, 0.6695, 0.7778, 0.9316, 0.8547,
        0.7463, 0.9387, 0.8494, 0.9527, 0.8669, 0.9326, 0.4625, 0.8161, 0.9463,
        0.9188, 0.9064, 0.9080, 0.7300, 0.8230, 0.5510, 0.6589, 0.6154, 0.7373,
        0.9277, 0.9410, 0.9105, 0.8821, 0.9040, 0.9559, 0.6448, 0.6454, 0.8384,
        0.9644, 0.9257, 0.8043, 0.9050, 0.8948, 0.9123, 0.9095, 0.9278, 0.7566,
        0.9366, 0.8206, 0.6031, 0.9061, 0.8868, 0.9183, 0.6965, 0.6264, 0.6296,
        0.8524, 0.9055, 0.8745, 0.8535, 0.8965, 0.9138, 0.8109, 0.9719, 0.7811,
        0.9466, 0.9154, 0.8682, 0.8157, 0.8896, 0.6636, 0.8915, 0.8716, 0.9149,
        0.8794, 0.8924, 0.9414, 0.7993, 0.7234, 0.8662, 0.8955, 0.4622, 0.8842,
        0.7283, 0.9288, 0.9504, 0.8594, 0.8252, 0.8466, 0.8746, 0.8352, 0.8599,
        0.7889, 0.9102, 0.6109, 0.8891, 0.6028, 0.5988, 0.8250, 0.9470, 0.8967,
        0.6370, 0.9457, 0.8907, 0.9173, 0.9329, 0.8210, 0.7812, 0.5374, 0.7347,
        0.8954, 0.6668, 0.7516, 0.8485, 0.8408, 0.9394, 0.9599, 0.8848, 0.6865,
        0.9084, 0.8825, 0.9363, 0.8950, 0.9055, 0.8801, 0.7429, 0.7057, 0.9594,
        0.9361, 0.5136, 0.6828, 0.9430, 0.8722, 0.8614, 0.6355, 0.8528, 0.7766,
        0.6909, 0.7191, 0.9115, 0.8955, 0.9498, 0.7550, 0.8404, 0.8285, 0.9435,
        0.8262, 0.7261, 0.6352, 0.9256, 0.7802, 0.8622, 0.6937, 0.9131, 0.8415,
        0.5915, 0.8805, 0.7873, 0.8411, 0.8640, 0.7667, 0.9270, 0.9185, 0.9408,
        0.9558, 0.7742, 0.9525, 0.8060, 0.6170, 0.8175, 0.5469, 0.9565, 0.8777,
        0.7046, 0.9405, 0.8272, 0.8872, 0.8059, 0.7881, 0.9380, 0.7408, 0.8760,
        0.6963, 0.9463, 0.9319, 0.9264, 0.9406, 0.9620, 0.9262, 0.7539, 0.6531,
        0.9317, 0.8840, 0.9006, 0.7407, 0.8203, 0.8096, 0.9596, 0.5802, 0.8759,
        0.5573, 0.7930, 0.7320, 0.7171, 0.9494, 0.8953, 0.7873, 0.7846, 0.9640,
        0.8848, 0.9265, 0.7799, 0.8382, 0.8689, 0.7169, 0.7910, 0.6427, 0.8505,
        0.9324, 0.9474, 0.9382, 0.8436, 0.9597, 0.8989, 0.9591, 0.6479, 0.9328,
        0.9134, 0.6333, 0.7291, 0.7295, 0.5012, 0.7419, 0.9445, 0.9272, 0.9206,
        0.7031, 0.7786, 0.9745, 0.9122, 0.7515, 0.9458, 0.7692, 0.9180, 0.9174,
        0.9277, 0.7721, 0.9307, 0.7281, 0.9555, 0.6762, 0.9445, 0.9082, 0.9243,
        0.8391, 0.8787, 0.8950, 0.9136, 0.9328, 0.8316, 0.9164, 0.9365, 0.7032,
        0.8380, 0.6203, 0.6395, 0.8173, 0.7832, 0.9451, 0.8526, 0.7479, 0.6175,
        0.9245, 0.6701, 0.9395, 0.9204, 0.7684, 0.9263, 0.4769, 0.8463, 0.8769,
        0.8682, 0.5563, 0.7893, 0.9202, 0.6721, 0.6853, 0.8164, 0.6876, 0.9464,
        0.7234, 0.9144, 0.8653, 0.8574, 0.7001, 0.6756, 0.6631, 0.9192, 0.8878,
        0.8588, 0.5829, 0.6497, 0.6838, 0.8397, 0.9157, 0.7188, 0.7144, 0.9261,
        0.5185, 0.9162, 0.8276, 0.9008, 0.8430, 0.9028, 0.8609, 0.6180, 0.7819,
        0.6699, 0.9386, 0.8335, 0.8851, 0.6647, 0.7992, 0.6716, 0.8719, 0.5552,
        0.8948, 0.8906, 0.9511, 0.9187, 0.8514, 0.9189, 0.7515, 0.9019, 0.7484,
        0.9059, 0.9433, 0.8925, 0.3384, 0.7299, 0.6397, 0.6480, 0.7414, 0.7660,
        0.9470, 0.8446, 0.6458, 0.8058, 0.8294, 0.7518, 0.9214, 0.8818, 0.7061,
        0.9375, 0.4913, 0.6912, 0.8895, 0.6480, 0.8490, 0.7174, 0.5919, 0.9365,
        0.9385, 0.8269, 0.8467, 0.9369, 0.6634, 0.7804, 0.9261, 0.6523, 0.8242,
        0.5410, 0.9432, 0.8213, 0.9162, 0.8374, 0.9691, 0.6857, 0.8241, 0.8316,
        0.8113, 0.8810, 0.9518, 0.8488, 0.5212, 0.6588, 0.7254, 0.8911, 0.9055,
        0.9432, 0.9615, 0.8519, 0.7577, 0.7507, 0.8293, 0.9180, 0.7775, 0.7282,
        0.9310, 0.8485, 0.7573, 0.8745, 0.6745, 0.9456, 0.9592, 0.7531, 0.9205,
        0.5232, 0.9473, 0.8092, 0.9324, 0.7855, 0.9120, 0.6387, 0.7485, 0.8562,
        0.6774, 0.6185, 0.6403, 0.5008, 0.9494, 0.7626, 0.6386, 0.9134, 0.7834,
        0.7558, 0.9242, 0.7955, 0.7839, 0.8506, 0.9150, 0.8050, 0.9273, 0.9637,
        0.8960, 0.9009, 0.7210, 0.6763, 0.6495], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(542.0123, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0010, 0.0036, 0.0066, 0.0116], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([3389, 1280])
S-Scores: tensor([0.6503, 2.0486, 4.0045, 6.6344], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([3389, 1])
Inertia: tensor([154.5155], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([3389, 1280])
Centroid_list: tensor([[-0.0290, -0.0578, -0.0477,  ..., -0.0571,  0.0816, -0.3534],
        [ 0.0022, -0.0390, -0.0461,  ..., -0.0477,  0.0417, -0.2103],
        [-0.0290, -0.0578, -0.0477,  ..., -0.0571,  0.0816, -0.3534],
        ...,
        [-0.0290, -0.0578, -0.0477,  ..., -0.0571,  0.0816, -0.3534],
        [ 0.0022, -0.0390, -0.0461,  ..., -0.0477,  0.0417, -0.2103],
        [-0.0290, -0.0578, -0.0477,  ..., -0.0571,  0.0816, -0.3534]],
       device='cuda:0')
Computed C_score: tensor([0.8075, 0.6671, 0.8084,  ..., 0.5488, 0.7654, 0.8476], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2549.6294, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3389, 1])
Inertia: tensor([166.7722], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([3389, 1280])
Centroid_list: tensor([[-0.0341, -0.0614, -0.0502,  ..., -0.0510,  0.0841, -0.3311],
        [ 0.0127, -0.0334, -0.0449,  ..., -0.0440,  0.0326, -0.1428],
        [-0.0341, -0.0614, -0.0502,  ..., -0.0510,  0.0841, -0.3311],
        ...,
        [-0.0203, -0.0513, -0.0471,  ..., -0.0587,  0.0664, -0.3604],
        [ 0.0127, -0.0334, -0.0449,  ..., -0.0440,  0.0326, -0.1428],
        [-0.0341, -0.0614, -0.0502,  ..., -0.0510,  0.0841, -0.3311]],
       device='cuda:0')
Computed C_score: tensor([0.7920, 0.6533, 0.7715,  ..., 0.6103, 0.7693, 0.8994], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2602.5056, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3389, 1])
Inertia: tensor([192.4286], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([3389, 1280])
Centroid_list: tensor([[-0.0532, -0.0704, -0.0647,  ..., -0.0350,  0.0785, -0.4734],
        [ 0.0124, -0.0324, -0.0448,  ..., -0.0455,  0.0362, -0.1493],
        [-0.0091, -0.0447, -0.0371,  ..., -0.0643,  0.0864, -0.2582],
        ...,
        [-0.0299, -0.0607, -0.0516,  ..., -0.0547,  0.0559, -0.3857],
        [ 0.0124, -0.0324, -0.0448,  ..., -0.0455,  0.0362, -0.1493],
        [-0.0532, -0.0704, -0.0647,  ..., -0.0350,  0.0785, -0.4734]],
       device='cuda:0')
Computed C_score: tensor([0.7836, 0.6642, 0.8109,  ..., 0.6434, 0.7698, 0.9290], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2642.3079, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3389, 1])
Inertia: tensor([195.2880], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([3389, 1280])
Centroid_list: tensor([[-0.0535, -0.0698, -0.0642,  ..., -0.0343,  0.0789, -0.4635],
        [ 0.0111, -0.0318, -0.0367,  ..., -0.0611,  0.0586, -0.2262],
        [-0.0077, -0.0469, -0.0373,  ..., -0.0639,  0.0869, -0.2632],
        ...,
        [-0.0328, -0.0628, -0.0522,  ..., -0.0555,  0.0561, -0.3764],
        [ 0.0099, -0.0334, -0.0503,  ..., -0.0360,  0.0241, -0.1272],
        [-0.0535, -0.0698, -0.0642,  ..., -0.0343,  0.0789, -0.4635]],
       device='cuda:0')
Computed C_score: tensor([0.7810, 0.7311, 0.8128,  ..., 0.6428, 0.7474, 0.9305], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2682.6133, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0003, 0.0008, 0.0015, 0.0025], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([11, 1280])
S-Scores: tensor([0.5551, 1.1586, 2.4207, 4.0941], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([226.3476], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0299, -0.0433, -0.0783,  ..., -0.0447,  0.0920, -0.1021],
        [-0.0299, -0.0433, -0.0783,  ..., -0.0447,  0.0920, -0.1021],
        [-0.0299, -0.0433, -0.0783,  ..., -0.0447,  0.0920, -0.1021],
        ...,
        [-0.0299, -0.0433, -0.0783,  ..., -0.0447,  0.0920, -0.1021],
        [-0.0299, -0.0433, -0.0783,  ..., -0.0447,  0.0920, -0.1021],
        [-0.0299, -0.0433, -0.0783,  ..., -0.0447,  0.0920, -0.1021]],
       device='cuda:0')
Computed C_score: tensor([0.6476, 0.7119, 0.7099, 0.9107, 0.5771, 0.9052, 0.7097, 0.6856, 0.5469,
        0.6995, 0.4672], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(7.5713, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([201.4924], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0318, -0.0386, -0.0610,  ..., -0.0570,  0.0978,  0.1252],
        [-0.0318, -0.0386, -0.0610,  ..., -0.0570,  0.0978,  0.1252],
        [-0.0318, -0.0386, -0.0610,  ..., -0.0570,  0.0978,  0.1252],
        ...,
        [-0.0243, -0.0574, -0.1302,  ..., -0.0077,  0.0745, -0.7841],
        [-0.0318, -0.0386, -0.0610,  ..., -0.0570,  0.0978,  0.1252],
        [-0.0243, -0.0574, -0.1302,  ..., -0.0077,  0.0745, -0.7841]],
       device='cuda:0')
Computed C_score: tensor([0.6950, 0.8156, 0.7725, 0.9107, 0.7447, 0.9052, 0.6914, 0.6821, 0.8830,
        0.7736, 0.7294], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(8.6033, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([199.5273], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0231, -0.0500, -0.0504,  ..., -0.0514,  0.0945,  0.0735],
        [-0.0231, -0.0500, -0.0504,  ..., -0.0514,  0.0945,  0.0735],
        [-0.0231, -0.0500, -0.0504,  ..., -0.0514,  0.0945,  0.0735],
        ...,
        [-0.0243, -0.0574, -0.1302,  ..., -0.0077,  0.0745, -0.7841],
        [-0.0345, -0.0069, -0.0971,  ..., -0.0482,  0.1194,  0.3884],
        [-0.0243, -0.0574, -0.1302,  ..., -0.0077,  0.0745, -0.7841]],
       device='cuda:0')
Computed C_score: tensor([0.6986, 0.7827, 0.7747, 1.0000, 0.7447, 0.9290, 0.7309, 0.7273, 0.8830,
        0.9288, 0.7294], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(8.9291, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([0.0002], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0466, -0.0598, -0.0266,  ..., -0.0444,  0.1431, -0.2145],
        [-0.0172, -0.0475, -0.0563,  ..., -0.0532,  0.0824,  0.1455],
        [-0.0172, -0.0475, -0.0563,  ..., -0.0532,  0.0824,  0.1455],
        ...,
        [-0.0243, -0.0574, -0.1302,  ..., -0.0077,  0.0745, -0.7841],
        [-0.0345, -0.0069, -0.0971,  ..., -0.0482,  0.1194,  0.3884],
        [-0.0243, -0.0574, -0.1302,  ..., -0.0077,  0.0745, -0.7841]],
       device='cuda:0')
Computed C_score: tensor([1.0000, 0.7629, 0.7726, 1.0000, 0.7447, 0.9290, 0.7923, 0.7735, 0.8830,
        0.9288, 0.7294], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(9.3163, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0683, 0.1187, 0.2133, 0.3053], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1953, 1280])
S-Scores: tensor([0.6417, 1.8412, 3.9954, 6.2258], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1953, 1])
Inertia: tensor([309.8611], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1953, 1280])
Centroid_list: tensor([[-0.0156, -0.0705, -0.0514,  ..., -0.0750,  0.0846, -0.2878],
        [-0.0057, -0.0338, -0.0540,  ..., -0.0752,  0.0949, -0.5073],
        [-0.0057, -0.0338, -0.0540,  ..., -0.0752,  0.0949, -0.5073],
        ...,
        [-0.0156, -0.0705, -0.0514,  ..., -0.0750,  0.0846, -0.2878],
        [-0.0156, -0.0705, -0.0514,  ..., -0.0750,  0.0846, -0.2878],
        [-0.0057, -0.0338, -0.0540,  ..., -0.0752,  0.0949, -0.5073]],
       device='cuda:0')
Computed C_score: tensor([0.7028, 0.5933, 0.8768,  ..., 0.5858, 0.6844, 0.6988], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1433.6799, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1953, 1])
Inertia: tensor([230.8055], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1953, 1280])
Centroid_list: tensor([[-2.4639e-02, -7.4420e-02, -5.3488e-02,  ..., -6.5703e-02,
          8.8279e-02, -2.9613e-01],
        [ 3.2342e-04, -5.7046e-02, -4.8563e-02,  ..., -8.7027e-02,
          8.1668e-02, -1.7203e-01],
        [-1.5150e-02, -2.5167e-02, -5.8298e-02,  ..., -6.4857e-02,
          1.0345e-01, -8.1479e-01],
        ...,
        [ 3.2342e-04, -5.7046e-02, -4.8563e-02,  ..., -8.7027e-02,
          8.1668e-02, -1.7203e-01],
        [-2.4639e-02, -7.4420e-02, -5.3488e-02,  ..., -6.5703e-02,
          8.8279e-02, -2.9613e-01],
        [-1.5150e-02, -2.5167e-02, -5.8298e-02,  ..., -6.4857e-02,
          1.0345e-01, -8.1479e-01]], device='cuda:0')
Computed C_score: tensor([0.7890, 0.6415, 0.8852,  ..., 0.5706, 0.7320, 0.6583], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1488.0869, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1953, 1])
Inertia: tensor([230.5084], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1953, 1280])
Centroid_list: tensor([[-0.0248, -0.0748, -0.0538,  ..., -0.0656,  0.0882, -0.2905],
        [ 0.0035, -0.0564, -0.0476,  ..., -0.0869,  0.0810, -0.1314],
        [-0.0347, -0.0470, -0.0595,  ..., -0.0733,  0.0986, -0.9248],
        ...,
        [ 0.0035, -0.0564, -0.0476,  ..., -0.0869,  0.0810, -0.1314],
        [-0.0248, -0.0748, -0.0538,  ..., -0.0656,  0.0882, -0.2905],
        [-0.0074, -0.0189, -0.0575,  ..., -0.0638,  0.1041, -0.7283]],
       device='cuda:0')
Computed C_score: tensor([0.7892, 0.6476, 0.9299,  ..., 0.5742, 0.7329, 0.6911], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1500.9163, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1953, 1])
Inertia: tensor([217.8564], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1953, 1280])
Centroid_list: tensor([[-0.0233, -0.0749, -0.0527,  ..., -0.0640,  0.0898, -0.3021],
        [ 0.0161, -0.0438, -0.0438,  ..., -0.0899,  0.0847, -0.0476],
        [-0.0162, -0.0243, -0.0590,  ..., -0.0632,  0.1048, -0.8739],
        ...,
        [ 0.0161, -0.0438, -0.0438,  ..., -0.0899,  0.0847, -0.0476],
        [-0.0233, -0.0749, -0.0527,  ..., -0.0640,  0.0898, -0.3021],
        [ 0.0161, -0.0438, -0.0438,  ..., -0.0899,  0.0847, -0.0476]],
       device='cuda:0')
Computed C_score: tensor([0.8013, 0.6854, 0.8866,  ..., 0.5422, 0.7369, 0.6454], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1520.9631, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0004, 0.0012, 0.0027, 0.0041], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([969, 1280])
S-Scores: tensor([0.6374, 2.0338, 4.0664, 6.4652], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([969, 1])
Inertia: tensor([137.7713], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([969, 1280])
Centroid_list: tensor([[-0.0593, -0.0661, -0.0695,  ..., -0.0455,  0.0933, -0.2927],
        [-0.1066, -0.0261, -0.0853,  ..., -0.0341,  0.0925,  0.0884],
        [-0.0593, -0.0661, -0.0695,  ..., -0.0455,  0.0933, -0.2927],
        ...,
        [-0.1066, -0.0261, -0.0853,  ..., -0.0341,  0.0925,  0.0884],
        [-0.1066, -0.0261, -0.0853,  ..., -0.0341,  0.0925,  0.0884],
        [-0.1066, -0.0261, -0.0853,  ..., -0.0341,  0.0925,  0.0884]],
       device='cuda:0')
Computed C_score: tensor([0.7639, 0.8227, 0.6400, 0.8837, 0.8810, 0.8657, 0.8101, 0.8263, 0.7462,
        0.7666, 0.6050, 0.7164, 0.8363, 0.5158, 0.8278, 0.8847, 0.5780, 0.4680,
        0.8098, 0.8711, 0.5930, 0.7605, 0.7456, 0.4462, 0.8287, 0.7793, 0.8843,
        0.7814, 0.7829, 0.7132, 0.7295, 0.6930, 0.7808, 0.7617, 0.7666, 0.8024,
        0.8434, 0.6869, 0.7366, 0.8790, 0.8215, 0.7880, 0.7194, 0.7625, 0.8785,
        0.6453, 0.8547, 0.7890, 0.8828, 0.6710, 0.7858, 0.7545, 0.9045, 0.8324,
        0.8064, 0.8487, 0.8168, 0.7887, 0.8146, 0.8363, 0.8208, 0.8906, 0.7820,
        0.8636, 0.8499, 0.8743, 0.8504, 0.7500, 0.8686, 0.7568, 0.7814, 0.8761,
        0.7771, 0.8164, 0.8450, 0.7066, 0.7873, 0.8754, 0.7643, 0.8327, 0.8097,
        0.7854, 0.7633, 0.9056, 0.7522, 0.6684, 0.9089, 0.8842, 0.8158, 0.4394,
        0.7437, 0.6420, 0.4295, 0.3575, 0.8180, 0.8114, 0.8677, 0.7988, 0.8567,
        0.8155, 0.7500, 0.7242, 0.6925, 0.6518, 0.7937, 0.5807, 0.8864, 0.7096,
        0.8764, 0.5525, 0.7715, 0.8093, 0.7701, 0.7779, 0.8168, 0.3569, 0.8716,
        0.6021, 0.8051, 0.6742, 0.8492, 0.7868, 0.6875, 0.8857, 0.7821, 0.7708,
        0.8473, 0.8399, 0.7352, 0.6386, 0.7858, 0.7525, 0.7886, 0.8590, 0.8439,
        0.7120, 0.7627, 0.8136, 0.8204, 0.7899, 0.5575, 0.8198, 0.8071, 0.5189,
        0.7803, 0.8689, 0.8811, 0.7694, 0.8515, 0.7402, 0.6419, 0.7160, 0.4173,
        0.9025, 0.8617, 0.5614, 0.8231, 0.7364, 0.8121, 0.7422, 0.8356, 0.7437,
        0.6679, 0.8395, 0.8317, 0.6326, 0.7785, 0.8728, 0.4481, 0.7667, 0.8450,
        0.8376, 0.7896, 0.8121, 0.6143, 0.5733, 0.4850, 0.8537, 0.8705, 0.8492,
        0.5206, 0.6546, 0.7732, 0.8881, 0.8875, 0.8721, 0.4690, 0.8900, 0.8827,
        0.8956, 0.5608, 0.7720, 0.7670, 0.8254, 0.7996, 0.7645, 0.7103, 0.4918,
        0.8491, 0.7773, 0.4601, 0.7755, 0.5608, 0.9054, 0.7829, 0.8509, 0.8704,
        0.7565, 0.8911, 0.8001, 0.9144, 0.8149, 0.8166, 0.5840, 0.7838, 0.8990,
        0.6768, 0.8508, 0.8971, 0.4570, 0.7108, 0.7631, 0.8166, 0.7444, 0.4285,
        0.6069, 0.5010, 0.7599, 0.7374, 0.8271, 0.8917, 0.8253, 0.7610, 0.8882,
        0.6193, 0.8301, 0.7029, 0.8790, 0.8716, 0.8691, 0.8255, 0.6599, 0.8218,
        0.8324, 0.7161, 0.8088, 0.8658, 0.8150, 0.8226, 0.7390, 0.7407, 0.7898,
        0.7588, 0.8409, 0.8661, 0.8476, 0.9054, 0.5858, 0.5162, 0.8283, 0.8630,
        0.8329, 0.8744, 0.8294, 0.8542, 0.8572, 0.8196, 0.8176, 0.8508, 0.6076,
        0.7004, 0.5249, 0.7122, 0.6296, 0.8747, 0.7985, 0.6388, 0.7704, 0.7966,
        0.8574, 0.8096, 0.8779, 0.7593, 0.8354, 0.7748, 0.7531, 0.5254, 0.8216,
        0.8014, 0.7968, 0.9110, 0.8729, 0.8463, 0.8264, 0.7982, 0.8656, 0.6905,
        0.7537, 0.8717, 0.7820, 0.7184, 0.7896, 0.8581, 0.6284, 0.8344, 0.7431,
        0.7266, 0.5376, 0.8273, 0.8561, 0.7007, 0.7986, 0.8277, 0.6898, 0.7985,
        0.7679, 0.8326, 0.7509, 0.8136, 0.8441, 0.8502, 0.6124, 0.8290, 0.7321,
        0.8078, 0.6482, 0.8474, 0.7868, 0.8889, 0.8370, 0.7413, 0.8206, 0.6005,
        0.7717, 0.8820, 0.8071, 0.6402, 0.8442, 0.4659, 0.6823, 0.8403, 0.8608,
        0.8347, 0.7454, 0.7007, 0.4709, 0.7403, 0.7363, 0.3526, 0.6252, 0.6356,
        0.8225, 0.8128, 0.7940, 0.7594, 0.7968, 0.7282, 0.7886, 0.8368, 0.5913,
        0.8211, 0.7110, 0.8650, 0.8226, 0.8520, 0.8556, 0.8286, 0.7140, 0.6937,
        0.8123, 0.6604, 0.6884, 0.8030, 0.7267, 0.8194, 0.7609, 0.8200, 0.8665,
        0.7673, 0.8020, 0.5824, 0.8127, 0.7681, 0.8670, 0.7986, 0.7855, 0.5986,
        0.8776, 0.7285, 0.7912, 0.6928, 0.7825, 0.8256, 0.6895, 0.8700, 0.8349,
        0.6775, 0.8582, 0.6960, 0.7186, 0.8023, 0.9292, 0.6748, 0.4581, 0.7090,
        0.8103, 0.6521, 0.8270, 0.7546, 0.8890, 0.7388, 0.7238, 0.8398, 0.8610,
        0.8540, 0.5090, 0.7189, 0.7009, 0.8858, 0.3686, 0.7068, 0.8562, 0.7567,
        0.6814, 0.7529, 0.8710, 0.5053, 0.5147, 0.7785, 0.7992, 0.8803, 0.7745,
        0.8541, 0.8606, 0.8945, 0.8701, 0.8945, 0.9034, 0.8690, 0.8047, 0.7976,
        0.7176, 0.7904, 0.8106, 0.8605, 0.8603, 0.6840, 0.7951, 0.8804, 0.8166,
        0.8695, 0.8774, 0.8876, 0.7672, 0.9129, 0.6823, 0.8346, 0.7945, 0.7371,
        0.8111, 0.7394, 0.8346, 0.8134, 0.7797, 0.8426, 0.8618, 0.8182, 0.8941,
        0.7788, 0.6681, 0.8663, 0.8463, 0.7176, 0.8739, 0.7559, 0.7866, 0.8405,
        0.7387, 0.8640, 0.7774, 0.9111, 0.7640, 0.8354, 0.7927, 0.8499, 0.8479,
        0.6417, 0.7902, 0.6527, 0.8501, 0.8276, 0.8124, 0.8579, 0.7522, 0.7780,
        0.7608, 0.7867, 0.7659, 0.8302, 0.8448, 0.7017, 0.8610, 0.8560, 0.7914,
        0.8604, 0.6948, 0.5883, 0.7965, 0.7322, 0.8012, 0.7556, 0.8039, 0.7914,
        0.7757, 0.8840, 0.6406, 0.8395, 0.8290, 0.8299, 0.7828, 0.4711, 0.6879,
        0.5963, 0.8020, 0.8675, 0.7037, 0.7906, 0.8576, 0.8434, 0.6759, 0.5870,
        0.9005, 0.7162, 0.9105, 0.8441, 0.7219, 0.7455, 0.6683, 0.8485, 0.7365,
        0.7188, 0.7785, 0.7523, 0.8751, 0.6850, 0.8020, 0.8621, 0.5520, 0.8676,
        0.8369, 0.8652, 0.9113, 0.8334, 0.8014, 0.8890, 0.7843, 0.5032, 0.7133,
        0.8442, 0.7341, 0.7972, 0.7007, 0.8807, 0.7957, 0.8122, 0.7232, 0.7247,
        0.8744, 0.8619, 0.8270, 0.3981, 0.7390, 0.7978, 0.8101, 0.7895, 0.6279,
        0.8058, 0.7652, 0.6970, 0.7886, 0.8900, 0.8258, 0.9153, 0.7405, 0.8237,
        0.4996, 0.7413, 0.8479, 0.6054, 0.7910, 0.5280, 0.7450, 0.6213, 0.8662,
        0.8471, 0.8280, 0.6977, 0.7875, 0.6962, 0.7639, 0.7410, 0.7782, 0.7451,
        0.8795, 0.8229, 0.7677, 0.8131, 0.7998, 0.8426, 0.8793, 0.8723, 0.8617,
        0.8210, 0.8579, 0.7136, 0.8634, 0.8269, 0.8587, 0.7715, 0.8967, 0.6694,
        0.7708, 0.7741, 0.8621, 0.8228, 0.7693, 0.3936, 0.7939, 0.8257, 0.7832,
        0.6958, 0.3812, 0.8016, 0.7957, 0.8336, 0.6828, 0.7642, 0.8043, 0.7781,
        0.7821, 0.8884, 0.6723, 0.7763, 0.7781, 0.7916, 0.4918, 0.8268, 0.8290,
        0.8047, 0.5576, 0.8582, 0.8083, 0.8632, 0.8670, 0.8850, 0.8484, 0.8863,
        0.7318, 0.8342, 0.6610, 0.8681, 0.8641, 0.5013, 0.8708, 0.8821, 0.4442,
        0.6988, 0.8027, 0.8289, 0.8346, 0.8271, 0.7340, 0.6669, 0.8957, 0.7028,
        0.7637, 0.7436, 0.8160, 0.8434, 0.5126, 0.6996, 0.8629, 0.7413, 0.8326,
        0.6930, 0.8636, 0.5583, 0.8099, 0.6054, 0.5503, 0.7584, 0.8615, 0.8965,
        0.8381, 0.7033, 0.7987, 0.8016, 0.8599, 0.8909, 0.8699, 0.7372, 0.6882,
        0.8626, 0.7011, 0.8423, 0.7250, 0.8340, 0.6114, 0.9143, 0.6368, 0.8792,
        0.8003, 0.7761, 0.7241, 0.5693, 0.4779, 0.7031, 0.7244, 0.8417, 0.7725,
        0.8179, 0.7760, 0.8861, 0.7582, 0.8709, 0.8904, 0.7828, 0.8393, 0.7392,
        0.7797, 0.7599, 0.7347, 0.8767, 0.5551, 0.8587, 0.8323, 0.7232, 0.7265,
        0.7982, 0.8320, 0.8642, 0.8155, 0.6094, 0.7137, 0.7893, 0.8861, 0.7896,
        0.7681, 0.6535, 0.8147, 0.8492, 0.8940, 0.8989, 0.7232, 0.6313, 0.5267,
        0.7874, 0.8657, 0.5206, 0.8502, 0.7410, 0.6388, 0.7190, 0.7966, 0.7963,
        0.7969, 0.7385, 0.7041, 0.8594, 0.6791, 0.8443, 0.8346, 0.6141, 0.8464,
        0.8510, 0.7473, 0.8334, 0.8106, 0.6918, 0.8235, 0.7528, 0.7949, 0.8409,
        0.8436, 0.9154, 0.8592, 0.7764, 0.4558, 0.6875, 0.8189, 0.7879, 0.6370,
        0.7746, 0.6242, 0.7796, 0.7518, 0.7406, 0.8733, 0.7927, 0.8690, 0.8451,
        0.5079, 0.7346, 0.9061, 0.8574, 0.6292, 0.8084, 0.8259, 0.7345, 0.8797,
        0.8220, 0.6841, 0.8264, 0.7551, 0.5916, 0.8314, 0.8590, 0.7282, 0.7810,
        0.7596, 0.8821, 0.8489, 0.7590, 0.8500, 0.6544, 0.7532, 0.8772, 0.8028,
        0.5483, 0.8423, 0.9118, 0.8268, 0.8117, 0.8301, 0.7257, 0.6506, 0.7336,
        0.8707, 0.7829, 0.8355, 0.6848, 0.8579, 0.7708, 0.8460, 0.7937, 0.8096,
        0.7567, 0.8746, 0.6687, 0.3847, 0.8047, 0.7855, 0.8635, 0.8381, 0.8611,
        0.8050, 0.7570, 0.9032, 0.8006, 0.8631, 0.8864, 0.8229, 0.8456, 0.8646,
        0.4949, 0.8172, 0.8433, 0.7612, 0.7837, 0.9274, 0.7450, 0.7161, 0.8543,
        0.7684, 0.8871, 0.8146, 0.4842, 0.7579, 0.6213, 0.7410, 0.6737, 0.8048,
        0.7839, 0.8003, 0.8514, 0.7179, 0.7127, 0.8844, 0.8890, 0.8427, 0.7191,
        0.5503, 0.8778, 0.7349, 0.7383, 0.7451, 0.7561, 0.6010, 0.7810, 0.8597,
        0.6981, 0.5765, 0.8079, 0.8978, 0.9088, 0.8495, 0.8038, 0.8028, 0.7897,
        0.8281, 0.8733, 0.8221, 0.8369, 0.8452, 0.7847, 0.8284, 0.3728, 0.5824,
        0.8437, 0.7881, 0.3682, 0.8139, 0.7778, 0.8164, 0.6788, 0.5105, 0.8311,
        0.7571, 0.8531, 0.8525, 0.9028, 0.7201, 0.7724, 0.7555, 0.9190, 0.8680,
        0.8719, 0.7647, 0.7451, 0.7648, 0.6492, 0.7567, 0.7695, 0.8535, 0.8221,
        0.3977, 0.7993, 0.7714, 0.8795, 0.8488, 0.8439, 0.7106, 0.8084, 0.6584,
        0.6829, 0.8964, 0.5025, 0.7799, 0.7127, 0.8386, 0.7794, 0.5889, 0.5602,
        0.7022, 0.8530, 0.8691, 0.8331, 0.5643, 0.8081], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(745.1407, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([969, 1])
Inertia: tensor([151.2507], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([969, 1280])
Centroid_list: tensor([[-0.0569, -0.0673, -0.0674,  ..., -0.0463,  0.0952, -0.2897],
        [-0.0562, -0.0463, -0.0928,  ..., -0.0297,  0.0895, -0.1834],
        [-0.1235, -0.0224, -0.0804,  ..., -0.0375,  0.0931,  0.1529],
        ...,
        [-0.1235, -0.0224, -0.0804,  ..., -0.0375,  0.0931,  0.1529],
        [-0.0562, -0.0463, -0.0928,  ..., -0.0297,  0.0895, -0.1834],
        [-0.1235, -0.0224, -0.0804,  ..., -0.0375,  0.0931,  0.1529]],
       device='cuda:0')
Computed C_score: tensor([0.7464, 0.8084, 0.6485, 0.8771, 0.8775, 0.8935, 0.8094, 0.8147, 0.7803,
        0.7802, 0.7468, 0.7754, 0.8597, 0.5203, 0.8401, 0.8700, 0.6085, 0.4549,
        0.8269, 0.8874, 0.7516, 0.7572, 0.8265, 0.5137, 0.8239, 0.8043, 0.9038,
        0.7987, 0.8075, 0.7438, 0.7393, 0.6626, 0.7464, 0.7880, 0.8042, 0.8166,
        0.8543, 0.6530, 0.7941, 0.8665, 0.8554, 0.8043, 0.6972, 0.7623, 0.8897,
        0.7291, 0.8529, 0.8112, 0.8654, 0.7743, 0.8218, 0.8055, 0.9281, 0.8289,
        0.8602, 0.8491, 0.8601, 0.7761, 0.8322, 0.8551, 0.8107, 0.8993, 0.8170,
        0.8713, 0.8725, 0.8784, 0.8769, 0.7888, 0.8785, 0.7838, 0.8427, 0.8777,
        0.7681, 0.8501, 0.8762, 0.6754, 0.7773, 0.8808, 0.7961, 0.8472, 0.8405,
        0.7981, 0.7698, 0.9163, 0.7865, 0.6790, 0.8858, 0.8959, 0.8292, 0.4881,
        0.7977, 0.6438, 0.5435, 0.4198, 0.8048, 0.8400, 0.8684, 0.8151, 0.8447,
        0.8151, 0.8070, 0.7413, 0.7244, 0.6562, 0.8112, 0.5943, 0.8925, 0.6647,
        0.8460, 0.6921, 0.7528, 0.8364, 0.7815, 0.7619, 0.7978, 0.4166, 0.8665,
        0.5841, 0.8425, 0.6904, 0.8689, 0.7951, 0.6841, 0.8880, 0.8151, 0.8285,
        0.8454, 0.8687, 0.7306, 0.6412, 0.8618, 0.7309, 0.8092, 0.8670, 0.8619,
        0.7224, 0.7450, 0.8359, 0.8298, 0.7915, 0.6260, 0.8233, 0.8288, 0.6104,
        0.8036, 0.8932, 0.8933, 0.7638, 0.8455, 0.7281, 0.6684, 0.7179, 0.5145,
        0.8926, 0.8677, 0.5680, 0.8433, 0.7535, 0.8069, 0.8332, 0.8407, 0.7571,
        0.7679, 0.8423, 0.8446, 0.7467, 0.7793, 0.8978, 0.6080, 0.7849, 0.8230,
        0.8178, 0.8208, 0.8378, 0.7505, 0.7521, 0.5574, 0.8634, 0.8784, 0.8445,
        0.7225, 0.7173, 0.8041, 0.9102, 0.8958, 0.8800, 0.4488, 0.9021, 0.9036,
        0.8890, 0.6569, 0.8236, 0.7828, 0.8557, 0.8280, 0.7410, 0.7319, 0.4833,
        0.8658, 0.7537, 0.6382, 0.8379, 0.7627, 0.9023, 0.8433, 0.8357, 0.8613,
        0.7881, 0.8733, 0.7861, 0.9002, 0.8306, 0.8549, 0.5421, 0.8138, 0.8964,
        0.6571, 0.8715, 0.9035, 0.5878, 0.7713, 0.7755, 0.8403, 0.7044, 0.4865,
        0.6545, 0.6131, 0.8664, 0.7725, 0.8087, 0.8997, 0.8222, 0.7799, 0.8968,
        0.6395, 0.8659, 0.7042, 0.8677, 0.8860, 0.8931, 0.8241, 0.6586, 0.8137,
        0.8291, 0.7105, 0.8760, 0.8414, 0.8453, 0.8331, 0.7602, 0.7262, 0.8015,
        0.7762, 0.8738, 0.8551, 0.8733, 0.8993, 0.5982, 0.6662, 0.8006, 0.8633,
        0.8535, 0.8851, 0.8049, 0.8527, 0.8467, 0.8060, 0.8670, 0.8415, 0.7436,
        0.7189, 0.5226, 0.7398, 0.6661, 0.8819, 0.8099, 0.6490, 0.7617, 0.8318,
        0.8480, 0.8267, 0.8835, 0.8016, 0.8194, 0.7900, 0.7883, 0.7216, 0.7936,
        0.8013, 0.8312, 0.8959, 0.8923, 0.8453, 0.8317, 0.7811, 0.8652, 0.6821,
        0.8198, 0.8547, 0.7330, 0.7228, 0.8402, 0.8774, 0.6374, 0.8418, 0.7644,
        0.7566, 0.6668, 0.8304, 0.8467, 0.7138, 0.8173, 0.8147, 0.7700, 0.7761,
        0.8060, 0.8382, 0.8099, 0.8366, 0.8489, 0.8694, 0.5568, 0.8030, 0.7608,
        0.8266, 0.6302, 0.8778, 0.8413, 0.8887, 0.8529, 0.7485, 0.8279, 0.5914,
        0.7989, 0.8925, 0.7917, 0.7129, 0.8402, 0.6203, 0.7707, 0.8637, 0.8365,
        0.8309, 0.8423, 0.8174, 0.5250, 0.7319, 0.7302, 0.4375, 0.6760, 0.6476,
        0.8176, 0.8080, 0.8308, 0.8900, 0.8363, 0.7609, 0.8144, 0.8205, 0.6787,
        0.8361, 0.7868, 0.8540, 0.8131, 0.8409, 0.8760, 0.8329, 0.7230, 0.7062,
        0.7800, 0.6706, 0.7892, 0.8044, 0.6862, 0.8397, 0.8059, 0.8122, 0.8857,
        0.7842, 0.8273, 0.5684, 0.8150, 0.7880, 0.8445, 0.8186, 0.7901, 0.6941,
        0.8956, 0.7615, 0.7726, 0.7329, 0.8171, 0.8377, 0.6848, 0.8803, 0.8402,
        0.7799, 0.8582, 0.7122, 0.7269, 0.8195, 0.9248, 0.7810, 0.4647, 0.8087,
        0.8037, 0.6035, 0.8572, 0.7639, 0.8678, 0.7747, 0.7393, 0.8520, 0.8379,
        0.8664, 0.5187, 0.7093, 0.6582, 0.8856, 0.4926, 0.7707, 0.8656, 0.8513,
        0.6703, 0.7530, 0.8873, 0.5981, 0.6303, 0.8143, 0.8191, 0.8828, 0.7954,
        0.8767, 0.8692, 0.8948, 0.8745, 0.8936, 0.9110, 0.8886, 0.8181, 0.8093,
        0.7218, 0.8176, 0.7906, 0.8803, 0.8811, 0.8063, 0.8265, 0.8851, 0.8102,
        0.8757, 0.8866, 0.9135, 0.7987, 0.9276, 0.6859, 0.8810, 0.8109, 0.7343,
        0.8459, 0.7538, 0.8229, 0.8276, 0.7712, 0.8513, 0.8844, 0.8274, 0.8698,
        0.7989, 0.7779, 0.8650, 0.8549, 0.7123, 0.8532, 0.8024, 0.8105, 0.8670,
        0.7351, 0.8630, 0.8880, 0.9178, 0.7815, 0.8155, 0.7841, 0.8295, 0.8519,
        0.6639, 0.7928, 0.5959, 0.8556, 0.8141, 0.8391, 0.8466, 0.7183, 0.8292,
        0.7795, 0.8055, 0.8306, 0.8491, 0.8684, 0.7051, 0.8864, 0.8857, 0.8402,
        0.8744, 0.6437, 0.6068, 0.7938, 0.7541, 0.8204, 0.7979, 0.8012, 0.7741,
        0.8262, 0.9000, 0.6255, 0.8452, 0.8273, 0.8523, 0.7913, 0.6364, 0.6805,
        0.6925, 0.7964, 0.8789, 0.7962, 0.7918, 0.8722, 0.8225, 0.7010, 0.6067,
        0.9152, 0.6868, 0.9000, 0.8464, 0.7416, 0.7558, 0.7587, 0.8717, 0.7714,
        0.7318, 0.7926, 0.7736, 0.8938, 0.6914, 0.7865, 0.8545, 0.7085, 0.8497,
        0.8247, 0.8703, 0.8911, 0.8294, 0.8184, 0.9062, 0.8086, 0.6611, 0.7708,
        0.8382, 0.7642, 0.7866, 0.6878, 0.8836, 0.8237, 0.8478, 0.7035, 0.6873,
        0.8621, 0.8913, 0.8578, 0.3738, 0.7568, 0.7967, 0.8007, 0.8445, 0.6146,
        0.8136, 0.7467, 0.7257, 0.8152, 0.8916, 0.8158, 0.8991, 0.7360, 0.8272,
        0.4908, 0.7244, 0.8663, 0.6031, 0.7899, 0.5484, 0.7458, 0.6290, 0.9051,
        0.8623, 0.8646, 0.7085, 0.8164, 0.6395, 0.7752, 0.7265, 0.8121, 0.7601,
        0.8764, 0.8423, 0.8042, 0.8354, 0.8150, 0.8329, 0.9012, 0.8940, 0.8844,
        0.8354, 0.8744, 0.7136, 0.8384, 0.8041, 0.8683, 0.7638, 0.8983, 0.7934,
        0.7993, 0.7887, 0.8831, 0.7923, 0.7950, 0.4851, 0.8497, 0.8415, 0.7597,
        0.6511, 0.4123, 0.8242, 0.8001, 0.8122, 0.7055, 0.7759, 0.7889, 0.8184,
        0.7697, 0.8924, 0.6649, 0.8006, 0.8266, 0.8163, 0.4833, 0.8173, 0.8342,
        0.8067, 0.5664, 0.8342, 0.8621, 0.8526, 0.8809, 0.8924, 0.8528, 0.9007,
        0.7905, 0.8337, 0.7402, 0.8582, 0.8734, 0.4665, 0.8437, 0.8833, 0.6606,
        0.7035, 0.7758, 0.8009, 0.8631, 0.8037, 0.7471, 0.7433, 0.8928, 0.6829,
        0.7744, 0.7625, 0.8422, 0.8437, 0.5384, 0.7714, 0.8918, 0.7694, 0.7977,
        0.6726, 0.8728, 0.6254, 0.8078, 0.5936, 0.5211, 0.7272, 0.8738, 0.9005,
        0.8678, 0.7938, 0.8085, 0.7840, 0.8563, 0.9024, 0.8946, 0.7096, 0.6948,
        0.8569, 0.7299, 0.8276, 0.6870, 0.8659, 0.6133, 0.9101, 0.6530, 0.9002,
        0.8344, 0.7741, 0.7454, 0.5306, 0.6835, 0.6925, 0.7202, 0.8371, 0.7975,
        0.8420, 0.8439, 0.8979, 0.7799, 0.8881, 0.8927, 0.8039, 0.8128, 0.7359,
        0.7800, 0.7753, 0.8008, 0.8797, 0.5550, 0.8809, 0.8485, 0.6832, 0.7252,
        0.8125, 0.8133, 0.8832, 0.8446, 0.5937, 0.6494, 0.8280, 0.8611, 0.7627,
        0.7803, 0.6481, 0.8303, 0.8657, 0.8895, 0.8964, 0.7763, 0.6428, 0.6365,
        0.8170, 0.8738, 0.5100, 0.8593, 0.7057, 0.6031, 0.7835, 0.8395, 0.8288,
        0.8284, 0.7874, 0.7521, 0.8520, 0.7102, 0.8435, 0.9217, 0.6001, 0.8300,
        0.8157, 0.8342, 0.8634, 0.7726, 0.6727, 0.8552, 0.7651, 0.8095, 0.8511,
        0.8770, 0.9360, 0.8878, 0.7721, 0.5233, 0.6426, 0.8360, 0.8235, 0.6460,
        0.7606, 0.6105, 0.8131, 0.7634, 0.7744, 0.8409, 0.7938, 0.8920, 0.8534,
        0.6665, 0.7377, 0.9289, 0.8332, 0.6282, 0.7944, 0.8712, 0.7356, 0.8907,
        0.7938, 0.7919, 0.8190, 0.7859, 0.7317, 0.8178, 0.8703, 0.7317, 0.8053,
        0.7645, 0.8808, 0.8735, 0.7890, 0.8362, 0.7999, 0.7697, 0.8972, 0.8064,
        0.6477, 0.8131, 0.9235, 0.8624, 0.8411, 0.8166, 0.7083, 0.6335, 0.7766,
        0.8568, 0.8293, 0.8260, 0.6948, 0.8627, 0.7996, 0.8720, 0.8143, 0.7955,
        0.7991, 0.8697, 0.6145, 0.4413, 0.8299, 0.8349, 0.8823, 0.8431, 0.8528,
        0.8028, 0.8105, 0.8968, 0.8407, 0.8604, 0.8716, 0.8187, 0.8781, 0.8798,
        0.6034, 0.8235, 0.8210, 0.7825, 0.7352, 0.9168, 0.7945, 0.7486, 0.8644,
        0.7517, 0.8664, 0.8277, 0.4477, 0.7403, 0.6019, 0.7546, 0.6924, 0.8485,
        0.7880, 0.7890, 0.8546, 0.7310, 0.7369, 0.8799, 0.9057, 0.8606, 0.7061,
        0.5540, 0.8559, 0.7044, 0.7479, 0.7664, 0.7832, 0.5701, 0.7363, 0.8992,
        0.8368, 0.5879, 0.8389, 0.9015, 0.9230, 0.8339, 0.7993, 0.7935, 0.8297,
        0.8045, 0.8949, 0.8143, 0.8458, 0.8447, 0.7955, 0.8308, 0.4393, 0.5657,
        0.8453, 0.8183, 0.5415, 0.8408, 0.8127, 0.8268, 0.6640, 0.6587, 0.8089,
        0.7547, 0.8788, 0.8697, 0.8891, 0.8281, 0.8011, 0.8480, 0.9116, 0.8570,
        0.8843, 0.7925, 0.7607, 0.7862, 0.6246, 0.7587, 0.7899, 0.8619, 0.8182,
        0.5072, 0.7982, 0.7890, 0.8607, 0.8640, 0.8726, 0.7077, 0.7646, 0.6540,
        0.7045, 0.8762, 0.5408, 0.7767, 0.7293, 0.8078, 0.7915, 0.6893, 0.5114,
        0.7294, 0.8712, 0.8973, 0.8608, 0.6875, 0.7960], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(762.1362, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([969, 1])
Inertia: tensor([159.9342], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([969, 1280])
Centroid_list: tensor([[-0.0592, -0.0638, -0.0675,  ..., -0.0423,  0.0993, -0.2772],
        [-0.0765, -0.0697, -0.0747,  ..., -0.0513,  0.0838, -0.2440],
        [-0.0765, -0.0697, -0.0747,  ..., -0.0513,  0.0838, -0.2440],
        ...,
        [-0.1288, -0.0189, -0.0791,  ..., -0.0362,  0.0936,  0.1936],
        [-0.0765, -0.0697, -0.0747,  ..., -0.0513,  0.0838, -0.2440],
        [-0.1288, -0.0189, -0.0791,  ..., -0.0362,  0.0936,  0.1936]],
       device='cuda:0')
Computed C_score: tensor([0.7459, 0.7980, 0.6684, 0.8734, 0.8735, 0.9002, 0.7981, 0.8025, 0.8375,
        0.8504, 0.7247, 0.8199, 0.8733, 0.4733, 0.8448, 0.8629, 0.7297, 0.4331,
        0.8297, 0.9143, 0.7167, 0.7558, 0.8697, 0.4923, 0.8203, 0.8062, 0.9111,
        0.8045, 0.8288, 0.8014, 0.8391, 0.6599, 0.7559, 0.7942, 0.8235, 0.8117,
        0.8458, 0.6643, 0.8454, 0.8658, 0.8717, 0.8087, 0.7325, 0.7690, 0.8937,
        0.8362, 0.8186, 0.8235, 0.8526, 0.7778, 0.8368, 0.8304, 0.9324, 0.8193,
        0.8924, 0.8513, 0.8870, 0.8844, 0.8299, 0.8587, 0.8861, 0.9007, 0.8475,
        0.8687, 0.8890, 0.8787, 0.8822, 0.8076, 0.8813, 0.7960, 0.8863, 0.8780,
        0.7861, 0.8615, 0.8869, 0.7516, 0.7943, 0.8740, 0.8032, 0.8542, 0.8472,
        0.8016, 0.7429, 0.9141, 0.8000, 0.6824, 0.8972, 0.9001, 0.8470, 0.5071,
        0.8508, 0.7336, 0.6114, 0.4089, 0.7867, 0.8475, 0.8667, 0.8225, 0.8370,
        0.8084, 0.8331, 0.7483, 0.7185, 0.6516, 0.8355, 0.5968, 0.8907, 0.8083,
        0.9036, 0.6759, 0.7501, 0.8415, 0.7839, 0.7952, 0.8081, 0.3730, 0.8638,
        0.6429, 0.8584, 0.7226, 0.8748, 0.7861, 0.6885, 0.8875, 0.8258, 0.8767,
        0.8354, 0.8854, 0.7198, 0.6429, 0.8643, 0.7021, 0.8164, 0.8848, 0.8701,
        0.6994, 0.7689, 0.8409, 0.8105, 0.8213, 0.7350, 0.8230, 0.8390, 0.5368,
        0.8284, 0.9021, 0.8980, 0.8228, 0.8724, 0.7492, 0.6894, 0.6887, 0.5719,
        0.8863, 0.8635, 0.7479, 0.8452, 0.7688, 0.8017, 0.8638, 0.8368, 0.8513,
        0.7728, 0.8658, 0.8517, 0.7409, 0.7550, 0.9078, 0.5643, 0.7899, 0.8291,
        0.8379, 0.8358, 0.8410, 0.7394, 0.6787, 0.5116, 0.8565, 0.8845, 0.8130,
        0.6835, 0.7048, 0.8069, 0.9139, 0.8934, 0.8771, 0.5172, 0.9065, 0.9138,
        0.8846, 0.5945, 0.8538, 0.8112, 0.8637, 0.8392, 0.8371, 0.7330, 0.4894,
        0.8715, 0.7901, 0.5692, 0.8979, 0.7064, 0.8997, 0.8722, 0.8346, 0.8502,
        0.7932, 0.8673, 0.7771, 0.8901, 0.8257, 0.8727, 0.6932, 0.8196, 0.8942,
        0.6185, 0.8788, 0.9077, 0.5419, 0.7772, 0.7781, 0.8424, 0.7669, 0.4883,
        0.6793, 0.6086, 0.8549, 0.8203, 0.8046, 0.8967, 0.8147, 0.7682, 0.9004,
        0.8173, 0.8872, 0.6890, 0.8578, 0.8823, 0.9025, 0.8203, 0.6663, 0.8746,
        0.8112, 0.6971, 0.8505, 0.9012, 0.8628, 0.8373, 0.8059, 0.7421, 0.8234,
        0.8065, 0.8790, 0.8491, 0.8864, 0.8950, 0.6007, 0.6686, 0.8440, 0.8597,
        0.8588, 0.8804, 0.8456, 0.8498, 0.8337, 0.8190, 0.9053, 0.8331, 0.7284,
        0.7226, 0.4651, 0.7456, 0.6959, 0.8763, 0.8673, 0.6486, 0.7678, 0.8447,
        0.8342, 0.8108, 0.8759, 0.8341, 0.8108, 0.8251, 0.8045, 0.6606, 0.8266,
        0.8540, 0.8397, 0.8896, 0.8999, 0.8603, 0.8060, 0.7836, 0.8567, 0.6960,
        0.8601, 0.8688, 0.8548, 0.7235, 0.8757, 0.8858, 0.6563, 0.8394, 0.7717,
        0.8046, 0.6302, 0.8260, 0.8331, 0.7239, 0.8428, 0.8096, 0.6978, 0.8129,
        0.8386, 0.8383, 0.8646, 0.8389, 0.8503, 0.8805, 0.7141, 0.8235, 0.7691,
        0.8294, 0.6951, 0.8927, 0.8865, 0.8855, 0.8451, 0.7649, 0.8286, 0.6163,
        0.8107, 0.8973, 0.8274, 0.6731, 0.8372, 0.5735, 0.7992, 0.8677, 0.8603,
        0.8175, 0.8774, 0.8005, 0.5568, 0.8239, 0.7208, 0.4686, 0.6259, 0.6209,
        0.8215, 0.8681, 0.8568, 0.8656, 0.8730, 0.7685, 0.8667, 0.8058, 0.7081,
        0.8358, 0.8057, 0.8488, 0.7879, 0.8221, 0.8812, 0.8203, 0.6971, 0.6735,
        0.7670, 0.7034, 0.8323, 0.7688, 0.7109, 0.9032, 0.8403, 0.8020, 0.8923,
        0.8231, 0.8306, 0.6142, 0.8119, 0.7955, 0.8592, 0.8190, 0.7861, 0.6236,
        0.8951, 0.7748, 0.7758, 0.7666, 0.8452, 0.8371, 0.7209, 0.8803, 0.8292,
        0.7834, 0.8636, 0.7191, 0.7403, 0.7957, 0.9212, 0.7462, 0.5133, 0.8223,
        0.7949, 0.7659, 0.8648, 0.7598, 0.8870, 0.7908, 0.7091, 0.8539, 0.8606,
        0.8821, 0.6800, 0.7296, 0.7324, 0.8827, 0.4600, 0.7553, 0.8651, 0.8369,
        0.6411, 0.7492, 0.8862, 0.7096, 0.5973, 0.8340, 0.8207, 0.8794, 0.8082,
        0.8871, 0.8665, 0.8921, 0.8678, 0.8887, 0.9080, 0.8937, 0.8463, 0.8316,
        0.7247, 0.8319, 0.7579, 0.8847, 0.8922, 0.8298, 0.8409, 0.8889, 0.8537,
        0.8768, 0.8820, 0.9196, 0.8496, 0.9303, 0.6828, 0.9043, 0.8182, 0.7251,
        0.8560, 0.7633, 0.8163, 0.8240, 0.8267, 0.8480, 0.8936, 0.8627, 0.8798,
        0.7947, 0.7931, 0.8636, 0.8544, 0.6886, 0.8637, 0.8364, 0.8483, 0.8778,
        0.7545, 0.8660, 0.8621, 0.9173, 0.7825, 0.8405, 0.7702, 0.8389, 0.8461,
        0.6689, 0.7901, 0.7697, 0.8189, 0.8045, 0.8384, 0.8394, 0.8102, 0.8686,
        0.8068, 0.8234, 0.8107, 0.8535, 0.8743, 0.6767, 0.8942, 0.8931, 0.8863,
        0.8782, 0.8107, 0.5936, 0.8561, 0.7916, 0.8312, 0.8297, 0.8365, 0.7796,
        0.8600, 0.9010, 0.8171, 0.8388, 0.8242, 0.8554, 0.8199, 0.5903, 0.6351,
        0.6354, 0.7903, 0.8738, 0.7898, 0.7461, 0.8780, 0.8516, 0.8703, 0.6646,
        0.9186, 0.7717, 0.8970, 0.8346, 0.7419, 0.8372, 0.7139, 0.8812, 0.8137,
        0.7312, 0.7992, 0.7756, 0.8959, 0.7254, 0.7729, 0.8437, 0.6692, 0.8418,
        0.8140, 0.8633, 0.8761, 0.7868, 0.8208, 0.9119, 0.8187, 0.6074, 0.8136,
        0.8327, 0.7563, 0.8439, 0.6642, 0.8879, 0.8371, 0.8716, 0.7091, 0.7200,
        0.8615, 0.8984, 0.8589, 0.4887, 0.7740, 0.7584, 0.7981, 0.8786, 0.6351,
        0.8153, 0.7300, 0.7457, 0.8790, 0.8881, 0.8182, 0.8915, 0.8352, 0.8216,
        0.5095, 0.7585, 0.8499, 0.8053, 0.7833, 0.7202, 0.7252, 0.6032, 0.9104,
        0.8710, 0.8799, 0.6472, 0.8287, 0.8042, 0.7759, 0.7257, 0.8231, 0.7754,
        0.8668, 0.8498, 0.8428, 0.8418, 0.8172, 0.8525, 0.9072, 0.8947, 0.8835,
        0.8441, 0.8793, 0.8306, 0.9079, 0.8306, 0.8711, 0.7582, 0.8928, 0.7736,
        0.8053, 0.8145, 0.8867, 0.8279, 0.7993, 0.4370, 0.8539, 0.8536, 0.8124,
        0.7697, 0.4248, 0.8341, 0.7471, 0.8288, 0.6951, 0.8048, 0.7784, 0.8319,
        0.7654, 0.8920, 0.6554, 0.8094, 0.8646, 0.8092, 0.4894, 0.8059, 0.8414,
        0.8445, 0.5756, 0.8401, 0.8962, 0.8454, 0.8792, 0.8871, 0.8568, 0.9047,
        0.8209, 0.8322, 0.7309, 0.8432, 0.8705, 0.6515, 0.8733, 0.8829, 0.6173,
        0.6346, 0.8207, 0.8760, 0.8723, 0.8304, 0.7371, 0.7796, 0.8875, 0.6842,
        0.7889, 0.7791, 0.8455, 0.8417, 0.6012, 0.7927, 0.9046, 0.7628, 0.8735,
        0.8484, 0.8708, 0.6776, 0.7699, 0.6006, 0.5456, 0.7711, 0.8660, 0.9008,
        0.8681, 0.8175, 0.8027, 0.7948, 0.8551, 0.8984, 0.9045, 0.7278, 0.6805,
        0.9157, 0.7193, 0.8264, 0.7857, 0.8710, 0.6140, 0.9048, 0.6727, 0.9068,
        0.8463, 0.7702, 0.7565, 0.6363, 0.6552, 0.6266, 0.7112, 0.8256, 0.8058,
        0.8500, 0.8943, 0.8955, 0.7798, 0.8889, 0.8911, 0.8467, 0.8387, 0.7580,
        0.7953, 0.7847, 0.7768, 0.8843, 0.5559, 0.8843, 0.8480, 0.7661, 0.7203,
        0.8424, 0.8169, 0.8834, 0.8479, 0.5850, 0.8270, 0.8455, 0.8790, 0.8179,
        0.7661, 0.6284, 0.8673, 0.8701, 0.8844, 0.8927, 0.8179, 0.6756, 0.6104,
        0.8237, 0.8700, 0.6742, 0.8510, 0.7824, 0.6693, 0.8218, 0.8597, 0.8552,
        0.8368, 0.8176, 0.7819, 0.8956, 0.7265, 0.8682, 0.8901, 0.7413, 0.8069,
        0.8726, 0.8745, 0.8779, 0.8492, 0.6676, 0.8633, 0.8933, 0.8475, 0.8577,
        0.8860, 0.9380, 0.8952, 0.7923, 0.5382, 0.8099, 0.8434, 0.8615, 0.6144,
        0.7595, 0.5835, 0.8508, 0.7913, 0.7915, 0.9071, 0.8394, 0.8942, 0.8416,
        0.6026, 0.7352, 0.9368, 0.8577, 0.5853, 0.8096, 0.8955, 0.7353, 0.8917,
        0.8421, 0.7592, 0.8991, 0.7905, 0.7586, 0.8092, 0.8754, 0.8409, 0.8168,
        0.8598, 0.8779, 0.8767, 0.7993, 0.8355, 0.7937, 0.8422, 0.9050, 0.8061,
        0.6297, 0.8628, 0.9265, 0.8787, 0.8547, 0.8107, 0.7780, 0.6516, 0.7970,
        0.8590, 0.8660, 0.8208, 0.6912, 0.8532, 0.8047, 0.8804, 0.8128, 0.7787,
        0.8204, 0.8613, 0.7400, 0.4534, 0.8367, 0.8668, 0.8851, 0.8548, 0.8403,
        0.7495, 0.8424, 0.8923, 0.8694, 0.8564, 0.8698, 0.8157, 0.8838, 0.8837,
        0.5596, 0.8081, 0.8502, 0.7873, 0.8702, 0.9112, 0.8336, 0.7853, 0.8710,
        0.7409, 0.8685, 0.8279, 0.6094, 0.7515, 0.5970, 0.7526, 0.7315, 0.8309,
        0.7847, 0.7972, 0.8484, 0.7245, 0.7431, 0.8701, 0.9115, 0.8560, 0.7481,
        0.6642, 0.8704, 0.8032, 0.8389, 0.7622, 0.7851, 0.7702, 0.8661, 0.9157,
        0.8390, 0.5794, 0.8544, 0.9016, 0.9267, 0.8287, 0.7567, 0.7818, 0.8599,
        0.8340, 0.9022, 0.8063, 0.8436, 0.8407, 0.7927, 0.8369, 0.4733, 0.6010,
        0.8335, 0.8480, 0.5211, 0.8453, 0.8219, 0.8561, 0.6606, 0.6009, 0.8107,
        0.8098, 0.8870, 0.8808, 0.8828, 0.8021, 0.8088, 0.8007, 0.9076, 0.8465,
        0.8898, 0.7940, 0.7788, 0.8001, 0.5912, 0.7923, 0.8034, 0.8602, 0.8178,
        0.4458, 0.7684, 0.7899, 0.8782, 0.8650, 0.8821, 0.6866, 0.8157, 0.6317,
        0.6992, 0.8900, 0.5298, 0.8187, 0.8032, 0.8303, 0.8195, 0.7056, 0.6770,
        0.7600, 0.8762, 0.9075, 0.8662, 0.6613, 0.7862], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(775.0542, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([969, 1])
Inertia: tensor([130.5084], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([969, 1280])
Centroid_list: tensor([[-0.0382, -0.0556, -0.0599,  ..., -0.0508,  0.1011, -0.2516],
        [-0.0949, -0.0703, -0.0789,  ..., -0.0509,  0.0821, -0.2384],
        [-0.0949, -0.0703, -0.0789,  ..., -0.0509,  0.0821, -0.2384],
        ...,
        [-0.1282, -0.0162, -0.0787,  ..., -0.0359,  0.0938,  0.2248],
        [-0.0949, -0.0703, -0.0789,  ..., -0.0509,  0.0821, -0.2384],
        [-0.0604, -0.0293, -0.0968,  ..., -0.0250,  0.0937, -0.0796]],
       device='cuda:0')
Computed C_score: tensor([0.7807, 0.8348, 0.6485, 0.8749, 0.8735, 0.8969, 0.8097, 0.7941, 0.8367,
        0.8644, 0.7268, 0.8212, 0.8806, 0.6126, 0.8454, 0.8649, 0.7116, 0.4113,
        0.8326, 0.9139, 0.7188, 0.8230, 0.8680, 0.4684, 0.8209, 0.8043, 0.9169,
        0.8091, 0.8969, 0.8036, 0.8381, 0.6584, 0.7449, 0.7955, 0.8315, 0.8046,
        0.8347, 0.6404, 0.8458, 0.8676, 0.8808, 0.8123, 0.7353, 0.7992, 0.8968,
        0.8446, 0.8259, 0.8314, 0.8545, 0.7741, 0.8435, 0.8638, 0.9313, 0.8159,
        0.9263, 0.8537, 0.9418, 0.9030, 0.8439, 0.8608, 0.9121, 0.9038, 0.9361,
        0.8662, 0.9441, 0.8795, 0.8825, 0.8165, 0.8846, 0.8804, 0.9108, 0.8805,
        0.7799, 0.8633, 0.8939, 0.7323, 0.7853, 0.8696, 0.7998, 0.8555, 0.8432,
        0.8285, 0.7741, 0.9094, 0.7948, 0.6850, 0.8984, 0.9036, 0.8478, 0.4823,
        0.8518, 0.7168, 0.5960, 0.4107, 0.8253, 0.8482, 0.8688, 0.8259, 0.8372,
        0.8054, 0.8340, 0.7517, 0.8033, 0.7588, 0.9116, 0.5842, 0.8888, 0.7887,
        0.9044, 0.6681, 0.6983, 0.8392, 0.7845, 0.8305, 0.8100, 0.3646, 0.8688,
        0.6446, 0.8638, 0.7204, 0.8762, 0.8066, 0.7426, 0.8917, 0.8249, 0.9351,
        0.8740, 0.9112, 0.7478, 0.6827, 0.8905, 0.6911, 0.8220, 0.9401, 0.8754,
        0.6800, 0.7539, 0.8412, 0.8064, 0.8053, 0.7398, 0.8237, 0.8406, 0.5310,
        0.9004, 0.9064, 0.9000, 0.8632, 0.8695, 0.7518, 0.7312, 0.7798, 0.5685,
        0.8840, 0.8646, 0.7348, 0.8395, 0.8087, 0.8015, 0.8636, 0.8472, 0.8721,
        0.7742, 0.9210, 0.8593, 0.7358, 0.8775, 0.9136, 0.5635, 0.7917, 0.8252,
        0.8383, 0.8420, 0.9152, 0.7399, 0.6776, 0.5129, 0.8475, 0.8890, 0.8145,
        0.6811, 0.7103, 0.8014, 0.9129, 0.8921, 0.8790, 0.5258, 0.9088, 0.9185,
        0.8862, 0.5928, 0.8531, 0.8815, 0.8700, 0.8448, 0.8587, 0.7305, 0.4766,
        0.8753, 0.7931, 0.5693, 0.9116, 0.7068, 0.9008, 0.8691, 0.8377, 0.8447,
        0.7904, 0.8688, 0.7703, 0.8835, 0.8181, 0.8759, 0.6903, 0.8213, 0.8963,
        0.6814, 0.8826, 0.9116, 0.5388, 0.7720, 0.7757, 0.8425, 0.7717, 0.4712,
        0.6610, 0.6082, 0.8701, 0.8010, 0.8019, 0.8938, 0.8152, 0.8706, 0.9019,
        0.8168, 0.8881, 0.8158, 0.8562, 0.8806, 0.9090, 0.8160, 0.6752, 0.8757,
        0.8242, 0.6628, 0.8513, 0.9002, 0.8710, 0.8424, 0.8319, 0.7742, 0.8674,
        0.8074, 0.8724, 0.8499, 0.8938, 0.8961, 0.6044, 0.6701, 0.8437, 0.8592,
        0.8546, 0.8768, 0.8459, 0.8501, 0.8684, 0.8166, 0.8990, 0.8287, 0.7309,
        0.7082, 0.5143, 0.8044, 0.7243, 0.8747, 0.8679, 0.6488, 0.8385, 0.8488,
        0.8508, 0.8175, 0.8665, 0.8345, 0.8126, 0.9154, 0.8078, 0.6614, 0.8290,
        0.8572, 0.8417, 0.8916, 0.9025, 0.8559, 0.8210, 0.7878, 0.8535, 0.7219,
        0.8592, 0.8656, 0.8401, 0.7243, 0.8627, 0.8913, 0.6610, 0.8364, 0.7778,
        0.8062, 0.6312, 0.8252, 0.8349, 0.7725, 0.8479, 0.8114, 0.7036, 0.8112,
        0.8354, 0.8380, 0.8643, 0.8359, 0.8545, 0.8872, 0.7014, 0.8240, 0.7781,
        0.8321, 0.6521, 0.9005, 0.9213, 0.8866, 0.8490, 0.8274, 0.8267, 0.6157,
        0.8152, 0.8955, 0.8266, 0.6560, 0.8387, 0.5757, 0.7958, 0.8635, 0.8601,
        0.8118, 0.8786, 0.7993, 0.5421, 0.8569, 0.6872, 0.4473, 0.6198, 0.6884,
        0.8612, 0.8692, 0.8562, 0.8609, 0.8766, 0.7657, 0.8652, 0.8063, 0.7069,
        0.8371, 0.8002, 0.8487, 0.7740, 0.8471, 0.8865, 0.8347, 0.8142, 0.7929,
        0.7855, 0.6885, 0.8327, 0.7883, 0.7101, 0.9012, 0.8424, 0.7954, 0.8953,
        0.8420, 0.8258, 0.5843, 0.8114, 0.7998, 0.8599, 0.8148, 0.7843, 0.6206,
        0.8879, 0.7809, 0.7777, 0.7705, 0.7933, 0.8362, 0.7423, 0.8779, 0.8631,
        0.7806, 0.8672, 0.7221, 0.8018, 0.8535, 0.9225, 0.7473, 0.5471, 0.8234,
        0.7943, 0.7440, 0.8666, 0.7559, 0.8886, 0.7849, 0.8437, 0.8588, 0.8612,
        0.8470, 0.6758, 0.7571, 0.7272, 0.8831, 0.4637, 0.7480, 0.8638, 0.8336,
        0.7045, 0.7473, 0.8848, 0.6972, 0.5977, 0.8429, 0.8136, 0.8821, 0.8163,
        0.8923, 0.8651, 0.8912, 0.8666, 0.8915, 0.9022, 0.8973, 0.8448, 0.9015,
        0.7263, 0.8372, 0.7444, 0.8852, 0.8982, 0.8300, 0.8477, 0.8934, 0.8848,
        0.8782, 0.8789, 0.9165, 0.8884, 0.9279, 0.6848, 0.8522, 0.8250, 0.7200,
        0.8559, 0.7695, 0.8084, 0.8194, 0.8561, 0.8460, 0.8987, 0.8618, 0.8807,
        0.7860, 0.7934, 0.8645, 0.8567, 0.7028, 0.8654, 0.9370, 0.8495, 0.8828,
        0.7874, 0.8730, 0.8606, 0.9176, 0.7799, 0.8440, 0.7581, 0.8418, 0.8479,
        0.7030, 0.7891, 0.7682, 0.8446, 0.8053, 0.8382, 0.8396, 0.7945, 0.9144,
        0.8090, 0.8785, 0.8093, 0.8544, 0.8720, 0.7002, 0.8977, 0.8933, 0.8867,
        0.8775, 0.8050, 0.6140, 0.8897, 0.8129, 0.8515, 0.9152, 0.8340, 0.7796,
        0.8718, 0.8967, 0.8121, 0.8295, 0.8234, 0.8489, 0.8944, 0.5884, 0.7473,
        0.6340, 0.7887, 0.8691, 0.7908, 0.8188, 0.8783, 0.8546, 0.8744, 0.6489,
        0.9227, 0.7596, 0.9001, 0.8629, 0.8205, 0.8367, 0.7090, 0.8840, 0.7820,
        0.7429, 0.8049, 0.7719, 0.8920, 0.6786, 0.7720, 0.8424, 0.6697, 0.8441,
        0.8121, 0.8587, 0.8704, 0.8097, 0.8764, 0.9107, 0.8250, 0.6086, 0.8998,
        0.8357, 0.8320, 0.8800, 0.6422, 0.8898, 0.8423, 0.8477, 0.7133, 0.6792,
        0.8641, 0.8949, 0.8739, 0.4626, 0.7707, 0.8146, 0.7991, 0.8595, 0.6789,
        0.8172, 0.7402, 0.7491, 0.8774, 0.8902, 0.8223, 0.8910, 0.8433, 0.8207,
        0.5578, 0.7531, 0.8725, 0.8080, 0.7801, 0.7282, 0.8389, 0.7092, 0.8845,
        0.8765, 0.8859, 0.6396, 0.8291, 0.7975, 0.7768, 0.7038, 0.8242, 0.8572,
        0.8598, 0.8099, 0.8444, 0.8418, 0.8176, 0.8874, 0.9086, 0.8893, 0.8743,
        0.8462, 0.8807, 0.8324, 0.9068, 0.8330, 0.8713, 0.7566, 0.8854, 0.7738,
        0.8000, 0.8251, 0.8850, 0.8302, 0.8924, 0.4293, 0.8526, 0.8782, 0.8147,
        0.7812, 0.4532, 0.8424, 0.8376, 0.8331, 0.7763, 0.8960, 0.7778, 0.8961,
        0.7674, 0.8918, 0.7581, 0.8168, 0.8289, 0.7780, 0.4766, 0.8019, 0.8456,
        0.8421, 0.5757, 0.8413, 0.8699, 0.8432, 0.8731, 0.8845, 0.8578, 0.9070,
        0.8214, 0.8350, 0.7295, 0.8496, 0.8661, 0.6162, 0.8751, 0.8848, 0.6173,
        0.7703, 0.8222, 0.8769, 0.8756, 0.8321, 0.7239, 0.7804, 0.8895, 0.6867,
        0.8437, 0.7829, 0.8419, 0.8382, 0.5537, 0.7926, 0.9110, 0.8682, 0.8762,
        0.8423, 0.8669, 0.6778, 0.7982, 0.5762, 0.5379, 0.7730, 0.8547, 0.9029,
        0.8249, 0.8178, 0.7942, 0.7974, 0.8555, 0.8897, 0.9090, 0.7372, 0.7523,
        0.9170, 0.8053, 0.8253, 0.7717, 0.8676, 0.6528, 0.9064, 0.6722, 0.9076,
        0.8441, 0.7689, 0.7871, 0.6307, 0.6548, 0.7923, 0.7057, 0.8219, 0.8014,
        0.8564, 0.8944, 0.8910, 0.8039, 0.8853, 0.8946, 0.8615, 0.8411, 0.7347,
        0.8382, 0.7903, 0.7766, 0.8876, 0.5106, 0.8858, 0.8572, 0.7604, 0.7179,
        0.9229, 0.8175, 0.8765, 0.8412, 0.6224, 0.8199, 0.8516, 0.8800, 0.8178,
        0.8086, 0.7464, 0.8814, 0.8735, 0.8856, 0.8923, 0.9260, 0.6739, 0.6047,
        0.8786, 0.8639, 0.6702, 0.8391, 0.7761, 0.6763, 0.8197, 0.9228, 0.8572,
        0.8462, 0.9162, 0.7763, 0.8970, 0.7322, 0.8680, 0.8877, 0.7470, 0.7902,
        0.8743, 0.8750, 0.8847, 0.8393, 0.6434, 0.8593, 0.9014, 0.8786, 0.8602,
        0.8842, 0.9376, 0.8957, 0.7431, 0.5136, 0.8145, 0.8467, 0.8613, 0.6478,
        0.7595, 0.6877, 0.8547, 0.8135, 0.7971, 0.9072, 0.8402, 0.8881, 0.8463,
        0.6006, 0.7338, 0.9368, 0.8595, 0.7083, 0.8102, 0.8884, 0.7357, 0.8930,
        0.8420, 0.7556, 0.9012, 0.7907, 0.7578, 0.8103, 0.8809, 0.8637, 0.8254,
        0.8994, 0.8777, 0.8707, 0.8025, 0.8357, 0.7929, 0.8421, 0.9099, 0.8051,
        0.6265, 0.8634, 0.9301, 0.8845, 0.8571, 0.8145, 0.7791, 0.6255, 0.9005,
        0.8602, 0.8642, 0.8191, 0.6894, 0.8420, 0.7999, 0.8813, 0.8034, 0.8177,
        0.8276, 0.8553, 0.7379, 0.4367, 0.8344, 0.9418, 0.8821, 0.8846, 0.8552,
        0.8042, 0.8088, 0.8929, 0.9474, 0.8568, 0.8719, 0.8148, 0.8781, 0.8869,
        0.5618, 0.8026, 0.8496, 0.7892, 0.8572, 0.9114, 0.9337, 0.7850, 0.8756,
        0.7409, 0.8707, 0.8247, 0.5905, 0.7333, 0.5772, 0.7501, 0.7267, 0.8657,
        0.8288, 0.8341, 0.8771, 0.7932, 0.7443, 0.8627, 0.9115, 0.8443, 0.7515,
        0.6647, 0.8684, 0.8102, 0.8572, 0.7466, 0.7793, 0.7780, 0.8755, 0.8825,
        0.8368, 0.6282, 0.8605, 0.9055, 0.9271, 0.8277, 0.7896, 0.7951, 0.8602,
        0.8352, 0.9050, 0.8031, 0.8417, 0.8402, 0.7912, 0.8580, 0.4682, 0.6088,
        0.8750, 0.9065, 0.5219, 0.8466, 0.8214, 0.8574, 0.6857, 0.6004, 0.8279,
        0.8351, 0.8861, 0.8879, 0.8844, 0.7996, 0.8114, 0.8164, 0.9100, 0.8407,
        0.8949, 0.7840, 0.7865, 0.7679, 0.6917, 0.7920, 0.8592, 0.8567, 0.8032,
        0.4384, 0.7718, 0.7898, 0.8798, 0.8612, 0.8833, 0.7725, 0.8071, 0.7515,
        0.8207, 0.8913, 0.5339, 0.8406, 0.8132, 0.8255, 0.8591, 0.7060, 0.6696,
        0.7438, 0.8794, 0.9126, 0.8649, 0.6512, 0.7869], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(783.1583, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0009, 0.0027, 0.0052, 0.0082], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([146, 1280])
S-Scores: tensor([0.6211, 1.8983, 3.8514, 6.2325], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([146, 1])
Inertia: tensor([147.7355], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([146, 1280])
Centroid_list: tensor([[-0.0393, -0.0672, -0.0549,  ..., -0.0956,  0.0518, -0.0914],
        [-0.0353, -0.0631, -0.0492,  ..., -0.0713,  0.0826, -0.1304],
        [-0.0393, -0.0672, -0.0549,  ..., -0.0956,  0.0518, -0.0914],
        ...,
        [-0.0353, -0.0631, -0.0492,  ..., -0.0713,  0.0826, -0.1304],
        [-0.0393, -0.0672, -0.0549,  ..., -0.0956,  0.0518, -0.0914],
        [-0.0393, -0.0672, -0.0549,  ..., -0.0956,  0.0518, -0.0914]],
       device='cuda:0')
Computed C_score: tensor([0.7703, 0.6892, 0.8264, 0.5897, 0.6322, 0.8010, 0.8467, 0.8478, 0.8649,
        0.8674, 0.6035, 0.6130, 0.7262, 0.6583, 0.8357, 0.8505, 0.8194, 0.5685,
        0.6917, 0.7559, 0.7714, 0.5597, 0.6846, 0.5535, 0.7620, 0.8095, 0.5869,
        0.8316, 0.8111, 0.8284, 0.7878, 0.6386, 0.7896, 0.7943, 0.8001, 0.8270,
        0.7320, 0.7920, 0.6366, 0.7239, 0.7952, 0.7630, 0.7210, 0.7204, 0.6510,
        0.5122, 0.7960, 0.5773, 0.4789, 0.8690, 0.3808, 0.8277, 0.8631, 0.6237,
        0.7647, 0.8593, 0.7165, 0.5457, 0.8505, 0.5723, 0.6803, 0.6559, 0.7399,
        0.8551, 0.6308, 0.7282, 0.7173, 0.8078, 0.5269, 0.5441, 0.7078, 0.7497,
        0.8311, 0.8401, 0.8120, 0.7963, 0.5473, 0.6543, 0.7337, 0.4582, 0.7735,
        0.8026, 0.6072, 0.4408, 0.6892, 0.4508, 0.7414, 0.8136, 0.7075, 0.6490,
        0.8189, 0.8438, 0.7566, 0.8047, 0.7773, 0.7674, 0.7735, 0.5141, 0.6811,
        0.6056, 0.5230, 0.8231, 0.5508, 0.7381, 0.7568, 0.7886, 0.6638, 0.8469,
        0.7960, 0.6041, 0.7128, 0.8332, 0.7376, 0.5496, 0.8265, 0.7358, 0.8318,
        0.6785, 0.8120, 0.6969, 0.8119, 0.8068, 0.6032, 0.8145, 0.8623, 0.5668,
        0.8656, 0.7633, 0.6454, 0.8232, 0.8429, 0.7850, 0.8540, 0.7813, 0.6540,
        0.8560, 0.8920, 0.7486, 0.6285, 0.5812, 0.7926, 0.7223, 0.7104, 0.6233,
        0.4212, 0.7888], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(105.2537, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([146, 1])
Inertia: tensor([142.3513], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([146, 1280])
Centroid_list: tensor([[-0.0517, -0.0690, -0.0625,  ..., -0.1027,  0.0445, -0.0004],
        [-0.0211, -0.0647, -0.0457,  ..., -0.0830,  0.0667, -0.2154],
        [-0.0517, -0.0690, -0.0625,  ..., -0.1027,  0.0445, -0.0004],
        ...,
        [-0.0211, -0.0647, -0.0457,  ..., -0.0830,  0.0667, -0.2154],
        [-0.0211, -0.0647, -0.0457,  ..., -0.0830,  0.0667, -0.2154],
        [-0.0517, -0.0690, -0.0625,  ..., -0.1027,  0.0445, -0.0004]],
       device='cuda:0')
Computed C_score: tensor([0.7807, 0.6813, 0.8362, 0.6442, 0.6141, 0.8430, 0.8847, 0.8916, 0.8861,
        0.9026, 0.5217, 0.5981, 0.7942, 0.7827, 0.8655, 0.8305, 0.8008, 0.6008,
        0.6954, 0.8151, 0.7736, 0.6648, 0.7080, 0.5368, 0.8192, 0.8143, 0.6691,
        0.8663, 0.8321, 0.7827, 0.7618, 0.6236, 0.7990, 0.8635, 0.8534, 0.8922,
        0.7749, 0.8346, 0.6608, 0.6831, 0.8439, 0.7682, 0.7210, 0.7019, 0.5883,
        0.6467, 0.8630, 0.6923, 0.5653, 0.8702, 0.3705, 0.7876, 0.8263, 0.6865,
        0.7382, 0.9147, 0.7764, 0.6037, 0.8854, 0.5995, 0.8030, 0.7843, 0.7757,
        0.8444, 0.7943, 0.8498, 0.7789, 0.8001, 0.5760, 0.6155, 0.7578, 0.8256,
        0.8884, 0.9049, 0.7624, 0.7842, 0.6212, 0.6627, 0.7743, 0.5943, 0.7908,
        0.8815, 0.7020, 0.4688, 0.5597, 0.5317, 0.7887, 0.8004, 0.7715, 0.7695,
        0.8240, 0.8745, 0.8273, 0.7868, 0.8048, 0.7695, 0.8079, 0.5448, 0.6918,
        0.5613, 0.5371, 0.8595, 0.5659, 0.7883, 0.8057, 0.8480, 0.7209, 0.8815,
        0.8217, 0.6737, 0.7224, 0.8020, 0.7839, 0.6074, 0.9037, 0.7111, 0.8457,
        0.7916, 0.8323, 0.7272, 0.8372, 0.7786, 0.6890, 0.8371, 0.8728, 0.6545,
        0.8438, 0.7614, 0.6961, 0.8367, 0.8594, 0.8137, 0.8917, 0.7747, 0.7285,
        0.8943, 0.8885, 0.7764, 0.7093, 0.6633, 0.7945, 0.7047, 0.6867, 0.5982,
        0.4343, 0.7791], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(109.7222, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([146, 1])
Inertia: tensor([144.1995], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([146, 1280])
Centroid_list: tensor([[-0.0505, -0.0695, -0.0630,  ..., -0.1029,  0.0456,  0.0065],
        [-0.0280, -0.0774, -0.0513,  ..., -0.0870,  0.0611, -0.3344],
        [-0.0505, -0.0695, -0.0630,  ..., -0.1029,  0.0456,  0.0065],
        ...,
        [-0.0280, -0.0774, -0.0513,  ..., -0.0870,  0.0611, -0.3344],
        [-0.0194, -0.0480, -0.0371,  ..., -0.0771,  0.0710, -0.0707],
        [-0.0505, -0.0695, -0.0630,  ..., -0.1029,  0.0456,  0.0065]],
       device='cuda:0')
Computed C_score: tensor([0.7776, 0.7689, 0.8337, 0.6436, 0.6992, 0.8454, 0.8863, 0.8907, 0.8861,
        0.9032, 0.6026, 0.5716, 0.8099, 0.8000, 0.8663, 0.8296, 0.8118, 0.6967,
        0.6973, 0.8151, 0.7716, 0.6745, 0.7180, 0.5717, 0.8227, 0.8138, 0.6673,
        0.8698, 0.8313, 0.7830, 0.7608, 0.6622, 0.7918, 0.8663, 0.8560, 0.8912,
        0.7736, 0.8346, 0.6660, 0.7375, 0.8475, 0.7652, 0.7167, 0.7013, 0.5877,
        0.6381, 0.8699, 0.7299, 0.6013, 0.8674, 0.4615, 0.7953, 0.8250, 0.7637,
        0.7369, 0.9153, 0.8116, 0.6678, 0.8834, 0.6362, 0.8331, 0.7662, 0.7834,
        0.8478, 0.8054, 0.8957, 0.8038, 0.7971, 0.5834, 0.6945, 0.7686, 0.8271,
        0.8894, 0.9050, 0.7585, 0.7904, 0.6608, 0.7722, 0.7783, 0.5998, 0.7896,
        0.8824, 0.7218, 0.4624, 0.5955, 0.5177, 0.7936, 0.7911, 0.8200, 0.8128,
        0.8287, 0.8792, 0.8264, 0.7630, 0.8044, 0.7624, 0.8113, 0.5491, 0.6948,
        0.6001, 0.5646, 0.8597, 0.6938, 0.7891, 0.8069, 0.8490, 0.7353, 0.8819,
        0.8217, 0.7053, 0.7712, 0.8019, 0.8430, 0.6600, 0.9055, 0.7683, 0.8470,
        0.8414, 0.8363, 0.7291, 0.8361, 0.8067, 0.6675, 0.8442, 0.8710, 0.6780,
        0.8410, 0.7600, 0.7606, 0.8358, 0.8646, 0.8173, 0.8929, 0.7686, 0.7289,
        0.8959, 0.8876, 0.7773, 0.7805, 0.7296, 0.7971, 0.6930, 0.6837, 0.6775,
        0.5090, 0.7772], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(111.9803, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([146, 1])
Inertia: tensor([144.9695], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([146, 1280])
Centroid_list: tensor([[-0.0569, -0.0652, -0.0601,  ..., -0.1022,  0.0432,  0.0597],
        [-0.0250, -0.0719, -0.0577,  ..., -0.0805,  0.0713, -0.1412],
        [-0.0569, -0.0652, -0.0601,  ..., -0.1022,  0.0432,  0.0597],
        ...,
        [-0.0250, -0.0719, -0.0577,  ..., -0.0805,  0.0713, -0.1412],
        [-0.0301, -0.0672, -0.0426,  ..., -0.0920,  0.0610, -0.2538],
        [-0.0569, -0.0652, -0.0601,  ..., -0.1022,  0.0432,  0.0597]],
       device='cuda:0')
Computed C_score: tensor([0.7780, 0.7171, 0.8270, 0.6549, 0.7624, 0.8469, 0.8885, 0.8930, 0.8928,
        0.9072, 0.6483, 0.6817, 0.8108, 0.7748, 0.8637, 0.8162, 0.8243, 0.6346,
        0.6974, 0.8178, 0.7720, 0.6568, 0.7059, 0.6820, 0.8254, 0.8036, 0.6570,
        0.8825, 0.8245, 0.8109, 0.7563, 0.6902, 0.7877, 0.8662, 0.8654, 0.9007,
        0.7616, 0.8396, 0.6267, 0.7760, 0.8542, 0.7752, 0.7164, 0.6724, 0.6355,
        0.6457, 0.8612, 0.7128, 0.5304, 0.8650, 0.6954, 0.8276, 0.8297, 0.7245,
        0.7432, 0.9235, 0.8028, 0.6270, 0.8878, 0.5853, 0.8090, 0.7993, 0.7857,
        0.8559, 0.7792, 0.8406, 0.7537, 0.7866, 0.5770, 0.6238, 0.7619, 0.8365,
        0.8917, 0.9096, 0.7876, 0.7995, 0.6037, 0.6854, 0.7762, 0.6378, 0.7875,
        0.8865, 0.7186, 0.5355, 0.7139, 0.5976, 0.7989, 0.7938, 0.8146, 0.7654,
        0.8414, 0.8846, 0.8362, 0.7999, 0.8013, 0.7657, 0.8478, 0.5514, 0.8806,
        0.7462, 0.5302, 0.8556, 0.5957, 0.8350, 0.8117, 0.8591, 0.7927, 0.8838,
        0.8308, 0.6900, 0.7379, 0.7988, 0.7725, 0.6362, 0.9122, 0.7446, 0.8503,
        0.7733, 0.8350, 0.8109, 0.8321, 0.7788, 0.7217, 0.8447, 0.8673, 0.6646,
        0.8366, 0.7728, 0.6824, 0.8357, 0.8670, 0.8601, 0.8958, 0.7678, 0.7342,
        0.8928, 0.8795, 0.7843, 0.6932, 0.6873, 0.7962, 0.7348, 0.7094, 0.7850,
        0.4707, 0.7672], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(112.5303, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0059, 0.0170, 0.0332, 0.0525], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1182, 1280])
S-Scores: tensor([0.7114, 2.0572, 4.1487, 6.9797], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1182, 1])
Inertia: tensor([251.9787], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1182, 1280])
Centroid_list: tensor([[ 0.0153, -0.0625, -0.0404,  ..., -0.0853,  0.0802,  0.0415],
        [ 0.0153, -0.0625, -0.0404,  ..., -0.0853,  0.0802,  0.0415],
        [-0.0264, -0.0807, -0.0543,  ..., -0.0753,  0.0799, -0.2704],
        ...,
        [ 0.0153, -0.0625, -0.0404,  ..., -0.0853,  0.0802,  0.0415],
        [ 0.0153, -0.0625, -0.0404,  ..., -0.0853,  0.0802,  0.0415],
        [ 0.0153, -0.0625, -0.0404,  ..., -0.0853,  0.0802,  0.0415]],
       device='cuda:0')
Computed C_score: tensor([0.6414, 0.6799, 0.7538,  ..., 0.5900, 0.4325, 0.6498], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(835.9644, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1182, 1])
Inertia: tensor([237.0947], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1182, 1280])
Centroid_list: tensor([[ 0.0237, -0.0566, -0.0375,  ..., -0.0855,  0.0810,  0.1101],
        [ 0.0237, -0.0566, -0.0375,  ..., -0.0855,  0.0810,  0.1101],
        [-0.0258, -0.0853, -0.0520,  ..., -0.0814,  0.0750, -0.2837],
        ...,
        [ 0.0237, -0.0566, -0.0375,  ..., -0.0855,  0.0810,  0.1101],
        [ 0.0237, -0.0566, -0.0375,  ..., -0.0855,  0.0810,  0.1101],
        [ 0.0237, -0.0566, -0.0375,  ..., -0.0855,  0.0810,  0.1101]],
       device='cuda:0')
Computed C_score: tensor([0.6680, 0.6986, 0.8647,  ..., 0.5930, 0.4343, 0.6734], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(865.8939, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1182, 1])
Inertia: tensor([231.7702], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1182, 1280])
Centroid_list: tensor([[ 0.0019, -0.0555, -0.0507,  ..., -0.0896,  0.0848,  0.2576],
        [ 0.0019, -0.0555, -0.0507,  ..., -0.0896,  0.0848,  0.2576],
        [-0.0288, -0.0875, -0.0535,  ..., -0.0828,  0.0740, -0.2901],
        ...,
        [ 0.0019, -0.0555, -0.0507,  ..., -0.0896,  0.0848,  0.2576],
        [ 0.0019, -0.0555, -0.0507,  ..., -0.0896,  0.0848,  0.2576],
        [ 0.0019, -0.0555, -0.0507,  ..., -0.0896,  0.0848,  0.2576]],
       device='cuda:0')
Computed C_score: tensor([0.6777, 0.7408, 0.8719,  ..., 0.6275, 0.4617, 0.6790], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(881.4290, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1182, 1])
Inertia: tensor([238.2213], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1182, 1280])
Centroid_list: tensor([[ 0.0240, -0.0593, -0.0369,  ..., -0.0934,  0.0773,  0.3408],
        [-0.0262, -0.0534, -0.0664,  ..., -0.0859,  0.0933,  0.0599],
        [-0.0287, -0.0878, -0.0534,  ..., -0.0824,  0.0736, -0.2918],
        ...,
        [-0.0262, -0.0534, -0.0664,  ..., -0.0859,  0.0933,  0.0599],
        [ 0.0240, -0.0593, -0.0369,  ..., -0.0934,  0.0773,  0.3408],
        [ 0.0240, -0.0593, -0.0369,  ..., -0.0934,  0.0773,  0.3408]],
       device='cuda:0')
Computed C_score: tensor([0.6661, 0.7828, 0.8727,  ..., 0.6037, 0.4565, 0.6508], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(888.9069, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0009, 0.0024, 0.0047, 0.0078], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([2201, 1280])
S-Scores: tensor([0.6885, 1.9776, 2.7437, 6.6811], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([2201, 1])
Inertia: tensor([185.4596], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([2201, 1280])
Centroid_list: tensor([[-0.0025, -0.0492, -0.0740,  ..., -0.0395,  0.0402, -0.3433],
        [-0.0369, -0.0680, -0.0691,  ..., -0.0533,  0.0741, -0.3942],
        [-0.0025, -0.0492, -0.0740,  ..., -0.0395,  0.0402, -0.3433],
        ...,
        [-0.0025, -0.0492, -0.0740,  ..., -0.0395,  0.0402, -0.3433],
        [-0.0025, -0.0492, -0.0740,  ..., -0.0395,  0.0402, -0.3433],
        [-0.0025, -0.0492, -0.0740,  ..., -0.0395,  0.0402, -0.3433]],
       device='cuda:0')
Computed C_score: tensor([0.7146, 0.6834, 0.5434,  ..., 0.6824, 0.7241, 0.5001], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1596.7151, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2201, 1])
Inertia: tensor([178.4132], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([2201, 1280])
Centroid_list: tensor([[-0.0250, -0.0635, -0.0712,  ..., -0.0565,  0.0609, -0.3883],
        [-0.0250, -0.0635, -0.0712,  ..., -0.0565,  0.0609, -0.3883],
        [ 0.0081, -0.0413, -0.0740,  ..., -0.0322,  0.0327, -0.3192],
        ...,
        [ 0.0081, -0.0413, -0.0740,  ..., -0.0322,  0.0327, -0.3192],
        [ 0.0081, -0.0413, -0.0740,  ..., -0.0322,  0.0327, -0.3192],
        [-0.0250, -0.0635, -0.0712,  ..., -0.0565,  0.0609, -0.3883]],
       device='cuda:0')
Computed C_score: tensor([0.7268, 0.7305, 0.5781,  ..., 0.7195, 0.7765, 0.5463], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1635.7266, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2201, 1])
Inertia: tensor([177.8616], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([2201, 1280])
Centroid_list: tensor([[-0.0248, -0.0636, -0.0714,  ..., -0.0570,  0.0605, -0.3849],
        [-0.0248, -0.0636, -0.0714,  ..., -0.0570,  0.0605, -0.3849],
        [ 0.0084, -0.0410, -0.0739,  ..., -0.0315,  0.0325, -0.3204],
        ...,
        [ 0.0084, -0.0410, -0.0739,  ..., -0.0315,  0.0325, -0.3204],
        [ 0.0084, -0.0410, -0.0739,  ..., -0.0315,  0.0325, -0.3204],
        [-0.0248, -0.0636, -0.0714,  ..., -0.0570,  0.0605, -0.3849]],
       device='cuda:0')
Computed C_score: tensor([0.7278, 0.7298, 0.5802,  ..., 0.7184, 0.7784, 0.5492], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1636.6368, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2201, 1])
Inertia: tensor([132.5467], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([2201, 1280])
Centroid_list: tensor([[-0.0300, -0.0763, -0.0729,  ..., -0.0566,  0.0499, -0.4419],
        [-0.0300, -0.0763, -0.0729,  ..., -0.0566,  0.0499, -0.4419],
        [ 0.0103, -0.0428, -0.0740,  ..., -0.0244,  0.0207, -0.3260],
        ...,
        [ 0.0103, -0.0428, -0.0740,  ..., -0.0244,  0.0207, -0.3260],
        [ 0.0103, -0.0428, -0.0740,  ..., -0.0244,  0.0207, -0.3260],
        [-0.0091, -0.0376, -0.0769,  ..., -0.0567,  0.0756, -0.2913]],
       device='cuda:0')
Computed C_score: tensor([0.8061, 0.7651, 0.5977,  ..., 0.7220, 0.7912, 0.5306], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1693.1174, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0004, 0.0012, 0.0017, 0.0039], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([146, 1280])
S-Scores: tensor([0.4523, 1.5858, 3.2781, 5.5347], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([146, 1])
Inertia: tensor([173.0792], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([146, 1280])
Centroid_list: tensor([[-0.0592, -0.0542, -0.0662,  ..., -0.0884,  0.0504, -0.0315],
        [-0.0592, -0.0542, -0.0662,  ..., -0.0884,  0.0504, -0.0315],
        [-0.0592, -0.0542, -0.0662,  ..., -0.0884,  0.0504, -0.0315],
        ...,
        [-0.0592, -0.0542, -0.0662,  ..., -0.0884,  0.0504, -0.0315],
        [-0.0592, -0.0542, -0.0662,  ..., -0.0884,  0.0504, -0.0315],
        [-0.0351, -0.0780, -0.0612,  ..., -0.0724,  0.0770, -0.4350]],
       device='cuda:0')
Computed C_score: tensor([0.8109, 0.7197, 0.7766, 0.4890, 0.7829, 0.7030, 0.4947, 0.7889, 0.8207,
        0.8234, 0.7245, 0.8258, 0.7901, 0.7954, 0.7066, 0.8581, 0.5207, 0.6727,
        0.5001, 0.8208, 0.4588, 0.6735, 0.7146, 0.6481, 0.8743, 0.7324, 0.7944,
        0.6652, 0.8151, 0.5942, 0.7481, 0.7690, 0.8074, 0.6414, 0.8304, 0.5998,
        0.6537, 0.6490, 0.4237, 0.7671, 0.7173, 0.8140, 0.7076, 0.8012, 0.7394,
        0.8318, 0.8165, 0.7138, 0.7985, 0.7186, 0.7917, 0.6934, 0.7410, 0.6427,
        0.7328, 0.7921, 0.6840, 0.7074, 0.6612, 0.5747, 0.7996, 0.8104, 0.8289,
        0.4889, 0.8149, 0.8659, 0.7990, 0.5759, 0.5416, 0.8173, 0.6864, 0.7261,
        0.3795, 0.7774, 0.7499, 0.7080, 0.7578, 0.5254, 0.7866, 0.8307, 0.6030,
        0.8891, 0.7108, 0.6735, 0.8295, 0.7918, 0.6867, 0.7499, 0.6714, 0.7894,
        0.5382, 0.8240, 0.7906, 0.7380, 0.7740, 0.7526, 0.8658, 0.8217, 0.6955,
        0.7388, 0.6559, 0.8082, 0.4535, 0.7896, 0.7753, 0.7971, 0.7326, 0.6968,
        0.5331, 0.4437, 0.7813, 0.3907, 0.8081, 0.7158, 0.7678, 0.8009, 0.5383,
        0.5070, 0.8923, 0.7926, 0.8191, 0.6431, 0.8720, 0.7047, 0.7742, 0.6585,
        0.8062, 0.5319, 0.7545, 0.5710, 0.8566, 0.7814, 0.8471, 0.8740, 0.8276,
        0.4834, 0.4404, 0.7802, 0.7578, 0.7211, 0.6834, 0.7476, 0.8084, 0.6913,
        0.7681, 0.6955], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(104.7491, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([146, 1])
Inertia: tensor([162.5712], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([146, 1280])
Centroid_list: tensor([[-0.0503, -0.0540, -0.0354,  ..., -0.0656,  0.0693, -0.1368],
        [-0.0687, -0.0573, -0.1060,  ..., -0.1174,  0.0265,  0.0802],
        [-0.0503, -0.0540, -0.0354,  ..., -0.0656,  0.0693, -0.1368],
        ...,
        [-0.0503, -0.0540, -0.0354,  ..., -0.0656,  0.0693, -0.1368],
        [-0.0503, -0.0540, -0.0354,  ..., -0.0656,  0.0693, -0.1368],
        [-0.0356, -0.0756, -0.0591,  ..., -0.0705,  0.0795, -0.4399]],
       device='cuda:0')
Computed C_score: tensor([0.8263, 0.7577, 0.8212, 0.5607, 0.7882, 0.8155, 0.5584, 0.8038, 0.8907,
        0.8371, 0.7206, 0.8365, 0.9016, 0.8069, 0.7491, 0.8657, 0.5085, 0.8125,
        0.6236, 0.8111, 0.5679, 0.7172, 0.7564, 0.6511, 0.8842, 0.7649, 0.9141,
        0.7288, 0.8187, 0.6423, 0.7283, 0.8520, 0.7848, 0.6387, 0.9002, 0.5859,
        0.7082, 0.7161, 0.4485, 0.8241, 0.7887, 0.8089, 0.7491, 0.7901, 0.7338,
        0.8243, 0.8254, 0.6971, 0.8039, 0.8447, 0.8000, 0.7796, 0.7562, 0.6329,
        0.8422, 0.8436, 0.6829, 0.7128, 0.7031, 0.5889, 0.7752, 0.7835, 0.8414,
        0.5289, 0.8005, 0.8775, 0.8761, 0.6563, 0.5765, 0.8064, 0.7310, 0.8673,
        0.4102, 0.8556, 0.7683, 0.8461, 0.8532, 0.4888, 0.7749, 0.8376, 0.6207,
        0.8925, 0.7031, 0.7283, 0.8264, 0.8818, 0.7478, 0.7913, 0.7491, 0.8230,
        0.6239, 0.7763, 0.7840, 0.8547, 0.8032, 0.8241, 0.8759, 0.7779, 0.7270,
        0.7892, 0.6703, 0.8228, 0.5294, 0.7929, 0.7670, 0.8378, 0.7935, 0.8376,
        0.5744, 0.4331, 0.8006, 0.4117, 0.8851, 0.7248, 0.7759, 0.8139, 0.5569,
        0.4982, 0.9002, 0.8302, 0.8438, 0.7098, 0.8859, 0.7222, 0.7609, 0.7422,
        0.7931, 0.6173, 0.8169, 0.5738, 0.8689, 0.8253, 0.8389, 0.8783, 0.8236,
        0.4993, 0.5154, 0.8060, 0.8070, 0.8166, 0.6758, 0.7525, 0.8002, 0.7703,
        0.7804, 0.6754], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(109.5479, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([146, 1])
Inertia: tensor([110.3679], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([146, 1280])
Centroid_list: tensor([[-0.0567, -0.0354, -0.0302,  ..., -0.0699,  0.0700,  0.0214],
        [-0.0675, -0.0599, -0.1096,  ..., -0.1190,  0.0250,  0.0638],
        [-0.0567, -0.0354, -0.0302,  ..., -0.0699,  0.0700,  0.0214],
        ...,
        [-0.0567, -0.0354, -0.0302,  ..., -0.0699,  0.0700,  0.0214],
        [-0.0567, -0.0354, -0.0302,  ..., -0.0699,  0.0700,  0.0214],
        [-0.0468, -0.0754, -0.0477,  ..., -0.0630,  0.0654, -0.3276]],
       device='cuda:0')
Computed C_score: tensor([0.8803, 0.7492, 0.8476, 0.6120, 0.7876, 0.8206, 0.6272, 0.8928, 0.8925,
        0.8251, 0.7215, 0.8477, 0.8976, 0.8206, 0.7654, 0.8648, 0.7146, 0.8213,
        0.7025, 0.8253, 0.6278, 0.7370, 0.7712, 0.7856, 0.8860, 0.7681, 0.9167,
        0.7726, 0.8160, 0.6755, 0.7171, 0.8548, 0.8546, 0.6499, 0.8923, 0.7187,
        0.7340, 0.7174, 0.4953, 0.8129, 0.8002, 0.8753, 0.7706, 0.8783, 0.7407,
        0.8403, 0.8259, 0.6886, 0.8051, 0.8486, 0.7875, 0.7908, 0.7599, 0.5872,
        0.8535, 0.8327, 0.6892, 0.7250, 0.7114, 0.7545, 0.8209, 0.8570, 0.8576,
        0.5315, 0.7894, 0.8932, 0.8709, 0.7431, 0.6632, 0.7957, 0.7405, 0.8810,
        0.5038, 0.8999, 0.7866, 0.8561, 0.8537, 0.6468, 0.7545, 0.8332, 0.6170,
        0.8864, 0.7079, 0.6852, 0.9049, 0.8812, 0.7234, 0.7874, 0.7651, 0.8875,
        0.7850, 0.8120, 0.8276, 0.8621, 0.8541, 0.8631, 0.8636, 0.8083, 0.8053,
        0.7909, 0.6261, 0.8262, 0.5241, 0.8081, 0.7800, 0.8356, 0.8035, 0.8479,
        0.6209, 0.4561, 0.7887, 0.4450, 0.8842, 0.7393, 0.7790, 0.8016, 0.5626,
        0.5246, 0.8917, 0.8148, 0.8392, 0.7212, 0.9031, 0.7337, 0.7511, 0.7550,
        0.7995, 0.6577, 0.8131, 0.6478, 0.8777, 0.8178, 0.8849, 0.8905, 0.8140,
        0.5974, 0.7088, 0.8425, 0.8214, 0.8214, 0.6827, 0.7611, 0.7901, 0.7573,
        0.7950, 0.7235], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(112.9492, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([146, 1])
Inertia: tensor([110.0239], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([146, 1280])
Centroid_list: tensor([[-0.0565, -0.0364, -0.0300,  ..., -0.0693,  0.0702,  0.0083],
        [-0.0683, -0.0586, -0.1084,  ..., -0.1186,  0.0253,  0.0897],
        [-0.0565, -0.0364, -0.0300,  ..., -0.0693,  0.0702,  0.0083],
        ...,
        [-0.0565, -0.0364, -0.0300,  ..., -0.0693,  0.0702,  0.0083],
        [-0.0565, -0.0364, -0.0300,  ..., -0.0693,  0.0702,  0.0083],
        [-0.0528, -0.0689, -0.0390,  ..., -0.0724,  0.0591, -0.2737]],
       device='cuda:0')
Computed C_score: tensor([0.8805, 0.7516, 0.8498, 0.6290, 0.7876, 0.8186, 0.6046, 0.8921, 0.8942,
        0.8287, 0.7215, 0.8477, 0.8994, 0.8206, 0.7624, 0.8648, 0.6849, 0.8185,
        0.8077, 0.8264, 0.7112, 0.7399, 0.7687, 0.8200, 0.8860, 0.7675, 0.9168,
        0.7761, 0.8160, 0.7234, 0.7670, 0.8551, 0.8525, 0.6499, 0.8940, 0.7779,
        0.7363, 0.7149, 0.5216, 0.8176, 0.7650, 0.8726, 0.7703, 0.8737, 0.7407,
        0.8353, 0.8259, 0.7430, 0.8051, 0.8499, 0.7851, 0.7954, 0.7551, 0.6718,
        0.8510, 0.8344, 0.6892, 0.7231, 0.7109, 0.7831, 0.8157, 0.8519, 0.8576,
        0.4809, 0.7906, 0.8932, 0.8723, 0.7311, 0.6796, 0.8020, 0.7363, 0.8788,
        0.4882, 0.9040, 0.7900, 0.8550, 0.8546, 0.6879, 0.7545, 0.8332, 0.7263,
        0.8864, 0.7079, 0.6864, 0.9026, 0.8821, 0.7552, 0.7892, 0.7595, 0.8869,
        0.7883, 0.8090, 0.8261, 0.8624, 0.8514, 0.8671, 0.8663, 0.8044, 0.8073,
        0.7889, 0.7551, 0.8260, 0.6415, 0.8081, 0.7797, 0.8349, 0.8055, 0.8456,
        0.6582, 0.4784, 0.7921, 0.5220, 0.8862, 0.7369, 0.7789, 0.8020, 0.7297,
        0.5705, 0.8917, 0.8199, 0.8383, 0.7252, 0.9031, 0.7339, 0.7511, 0.7529,
        0.7981, 0.7815, 0.8137, 0.8006, 0.8777, 0.8214, 0.8838, 0.8905, 0.8140,
        0.6904, 0.6629, 0.8449, 0.8178, 0.8219, 0.6827, 0.7611, 0.7907, 0.7604,
        0.7981, 0.7835], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(114.5582, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0043, 0.0143, 0.0282, 0.0461], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([6338, 1280])
S-Scores: tensor([0.6313, 2.0144, 4.0648, 6.3537], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([6338, 1])
Inertia: tensor([263.5738], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([6338, 1280])
Centroid_list: tensor([[-0.0435, -0.0503, -0.0711,  ..., -0.0614,  0.0794, -0.1161],
        [-0.0482, -0.0730, -0.0698,  ..., -0.0640,  0.0880, -0.2316],
        [-0.0435, -0.0503, -0.0711,  ..., -0.0614,  0.0794, -0.1161],
        ...,
        [-0.0435, -0.0503, -0.0711,  ..., -0.0614,  0.0794, -0.1161],
        [-0.0435, -0.0503, -0.0711,  ..., -0.0614,  0.0794, -0.1161],
        [-0.0435, -0.0503, -0.0711,  ..., -0.0614,  0.0794, -0.1161]],
       device='cuda:0')
Computed C_score: tensor([0.5399, 0.7303, 0.7117,  ..., 0.6097, 0.6981, 0.8098], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4479.8657, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6338, 1])
Inertia: tensor([275.8304], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([6338, 1280])
Centroid_list: tensor([[-0.0350, -0.0383, -0.0702,  ..., -0.0564,  0.0801, -0.0289],
        [-0.0601, -0.0747, -0.0733,  ..., -0.0716,  0.0783, -0.2897],
        [-0.0350, -0.0383, -0.0702,  ..., -0.0564,  0.0801, -0.0289],
        ...,
        [-0.0350, -0.0383, -0.0702,  ..., -0.0564,  0.0801, -0.0289],
        [-0.0601, -0.0747, -0.0733,  ..., -0.0716,  0.0783, -0.2897],
        [-0.0601, -0.0747, -0.0733,  ..., -0.0716,  0.0783, -0.2897]],
       device='cuda:0')
Computed C_score: tensor([0.5150, 0.8265, 0.7457,  ..., 0.6450, 0.7512, 0.8741], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4642.6880, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6338, 1])
Inertia: tensor([262.1275], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([6338, 1280])
Centroid_list: tensor([[-0.0506, -0.0399, -0.0710,  ..., -0.0565,  0.0798,  0.0790],
        [-0.0640, -0.0765, -0.0738,  ..., -0.0737,  0.0776, -0.2790],
        [-0.0172, -0.0404, -0.0693,  ..., -0.0568,  0.0810, -0.1958],
        ...,
        [-0.0506, -0.0399, -0.0710,  ..., -0.0565,  0.0798,  0.0790],
        [-0.0640, -0.0765, -0.0738,  ..., -0.0737,  0.0776, -0.2790],
        [-0.0640, -0.0765, -0.0738,  ..., -0.0737,  0.0776, -0.2790]],
       device='cuda:0')
Computed C_score: tensor([0.5424, 0.8383, 0.7450,  ..., 0.6579, 0.7563, 0.8752], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4740.0273, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6338, 1])
Inertia: tensor([269.3952], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([6338, 1280])
Centroid_list: tensor([[-0.0529, -0.0393, -0.0721,  ..., -0.0535,  0.0790,  0.0862],
        [-0.0645, -0.0770, -0.0739,  ..., -0.0729,  0.0771, -0.2807],
        [-0.0174, -0.0401, -0.0694,  ..., -0.0564,  0.0810, -0.1970],
        ...,
        [-0.0529, -0.0393, -0.0721,  ..., -0.0535,  0.0790,  0.0862],
        [-0.0645, -0.0770, -0.0739,  ..., -0.0729,  0.0771, -0.2807],
        [-0.0645, -0.0770, -0.0739,  ..., -0.0729,  0.0771, -0.2807]],
       device='cuda:0')
Computed C_score: tensor([0.5308, 0.8312, 0.7455,  ..., 0.6592, 0.7588, 0.8783], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4800.6016, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0001, 0.0004, 0.0009, 0.0013], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1579, 1280])
S-Scores: tensor([0.7334, 2.2378, 4.1666, 6.7920], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1579, 1])
Inertia: tensor([155.4268], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1579, 1280])
Centroid_list: tensor([[ 0.0072, -0.0382, -0.0468,  ..., -0.0664,  0.0752, -0.1039],
        [-0.0165, -0.0588, -0.0469,  ..., -0.0621,  0.0825, -0.4124],
        [-0.0165, -0.0588, -0.0469,  ..., -0.0621,  0.0825, -0.4124],
        ...,
        [-0.0165, -0.0588, -0.0469,  ..., -0.0621,  0.0825, -0.4124],
        [ 0.0072, -0.0382, -0.0468,  ..., -0.0664,  0.0752, -0.1039],
        [-0.0165, -0.0588, -0.0469,  ..., -0.0621,  0.0825, -0.4124]],
       device='cuda:0')
Computed C_score: tensor([0.7877, 0.7653, 0.7874,  ..., 0.8846, 0.6752, 0.6775], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1163.0015, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1579, 1])
Inertia: tensor([142.3886], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1579, 1280])
Centroid_list: tensor([[ 0.0171, -0.0286, -0.0436,  ..., -0.0657,  0.0754, -0.0334],
        [-0.0208, -0.0657, -0.0563,  ..., -0.0684,  0.0751, -0.3119],
        [-0.0145, -0.0561, -0.0436,  ..., -0.0601,  0.0843, -0.4287],
        ...,
        [-0.0145, -0.0561, -0.0436,  ..., -0.0601,  0.0843, -0.4287],
        [ 0.0171, -0.0286, -0.0436,  ..., -0.0657,  0.0754, -0.0334],
        [-0.0145, -0.0561, -0.0436,  ..., -0.0601,  0.0843, -0.4287]],
       device='cuda:0')
Computed C_score: tensor([0.8100, 0.7266, 0.7890,  ..., 0.9064, 0.6919, 0.6799], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1194.6803, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1579, 1])
Inertia: tensor([142.3138], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1579, 1280])
Centroid_list: tensor([[ 0.0184, -0.0278, -0.0441,  ..., -0.0651,  0.0746,  0.0049],
        [ 0.0014, -0.0442, -0.0415,  ..., -0.0690,  0.0829, -0.3539],
        [ 0.0014, -0.0442, -0.0415,  ..., -0.0690,  0.0829, -0.3539],
        ...,
        [-0.0406, -0.0732, -0.0550,  ..., -0.0402,  0.0831, -0.4704],
        [ 0.0184, -0.0278, -0.0441,  ..., -0.0651,  0.0746,  0.0049],
        [ 0.0014, -0.0442, -0.0415,  ..., -0.0690,  0.0829, -0.3539]],
       device='cuda:0')
Computed C_score: tensor([0.8094, 0.7480, 0.8676,  ..., 0.9694, 0.7083, 0.6946], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1209.7258, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1579, 1])
Inertia: tensor([159.2306], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1579, 1280])
Centroid_list: tensor([[ 4.0026e-03, -2.9138e-02, -4.6061e-02,  ..., -6.4280e-02,
          8.0524e-02,  3.6669e-02],
        [ 1.7040e-04, -4.5975e-02, -3.9582e-02,  ..., -7.0825e-02,
          8.4251e-02, -3.8551e-01],
        [ 1.7040e-04, -4.5975e-02, -3.9582e-02,  ..., -7.0825e-02,
          8.4251e-02, -3.8551e-01],
        ...,
        [-4.2343e-02, -7.4022e-02, -5.5586e-02,  ..., -3.9004e-02,
          8.2939e-02, -4.8218e-01],
        [ 4.0026e-03, -2.9138e-02, -4.6061e-02,  ..., -6.4280e-02,
          8.0524e-02,  3.6669e-02],
        [ 1.7040e-04, -4.5975e-02, -3.9582e-02,  ..., -7.0825e-02,
          8.4251e-02, -3.8551e-01]], device='cuda:0')
Computed C_score: tensor([0.7769, 0.7471, 0.8712,  ..., 0.9686, 0.7580, 0.7056], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1229.4122, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0006, 0.0019, 0.0034, 0.0055], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([2331, 1280])
S-Scores: tensor([0.6848, 2.0616, 4.1758, 7.0535], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([2331, 1])
Inertia: tensor([172.5052], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([2331, 1280])
Centroid_list: tensor([[-0.0162, -0.0685, -0.0712,  ..., -0.0384,  0.0538,  0.1845],
        [-0.0162, -0.0685, -0.0712,  ..., -0.0384,  0.0538,  0.1845],
        [-0.0162, -0.0685, -0.0712,  ..., -0.0384,  0.0538,  0.1845],
        ...,
        [-0.0162, -0.0685, -0.0712,  ..., -0.0384,  0.0538,  0.1845],
        [-0.0362, -0.0694, -0.0660,  ..., -0.0545,  0.0750, -0.3412],
        [-0.0162, -0.0685, -0.0712,  ..., -0.0384,  0.0538,  0.1845]],
       device='cuda:0')
Computed C_score: tensor([0.7402, 0.6292, 0.6429,  ..., 0.8723, 0.7734, 0.5462], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1673.8894, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2331, 1])
Inertia: tensor([129.4712], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([2331, 1280])
Centroid_list: tensor([[-0.0047, -0.0679, -0.0758,  ..., -0.0264,  0.0499,  0.3754],
        [-0.0308, -0.0691, -0.0659,  ..., -0.0549,  0.0604, -0.1193],
        [-0.0308, -0.0691, -0.0659,  ..., -0.0549,  0.0604, -0.1193],
        ...,
        [-0.0047, -0.0679, -0.0758,  ..., -0.0264,  0.0499,  0.3754],
        [-0.0370, -0.0697, -0.0658,  ..., -0.0508,  0.0781, -0.3099],
        [-0.0308, -0.0691, -0.0659,  ..., -0.0549,  0.0604, -0.1193]],
       device='cuda:0')
Computed C_score: tensor([0.8150, 0.7105, 0.6885,  ..., 0.8716, 0.7599, 0.6444], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1726.5662, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2331, 1])
Inertia: tensor([133.9756], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([2331, 1280])
Centroid_list: tensor([[ 0.0066, -0.0615, -0.0863,  ..., -0.0258,  0.0587,  0.2129],
        [-0.0314, -0.0668, -0.0664,  ..., -0.0591,  0.0662, -0.2501],
        [-0.0314, -0.0668, -0.0664,  ..., -0.0591,  0.0662, -0.2501],
        ...,
        [-0.0224, -0.0757, -0.0627,  ..., -0.0316,  0.0406,  0.4658],
        [-0.0394, -0.0710, -0.0657,  ..., -0.0517,  0.0783, -0.3002],
        [-0.0314, -0.0668, -0.0664,  ..., -0.0591,  0.0662, -0.2501]],
       device='cuda:0')
Computed C_score: tensor([0.8067, 0.7078, 0.6911,  ..., 0.8630, 0.7503, 0.6405], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1754.1729, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2331, 1])
Inertia: tensor([133.3791], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([2331, 1280])
Centroid_list: tensor([[ 0.0081, -0.0617, -0.0892,  ..., -0.0248,  0.0593,  0.2074],
        [-0.0120, -0.0473, -0.0584,  ..., -0.0572,  0.0677, -0.2104],
        [-0.0120, -0.0473, -0.0584,  ..., -0.0572,  0.0677, -0.2104],
        ...,
        [-0.0208, -0.0758, -0.0618,  ..., -0.0295,  0.0387,  0.5336],
        [-0.0405, -0.0717, -0.0663,  ..., -0.0514,  0.0786, -0.3001],
        [-0.0120, -0.0473, -0.0584,  ..., -0.0572,  0.0677, -0.2104]],
       device='cuda:0')
Computed C_score: tensor([0.8069, 0.7074, 0.7209,  ..., 0.8658, 0.7387, 0.6798], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1777.9583, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0004, 0.0012, 0.0024, 0.0040], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([66, 1280])
S-Scores: tensor([0.7362, 1.9236, 3.6543, 6.5661], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([66, 1])
Inertia: tensor([223.3810], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([66, 1280])
Centroid_list: tensor([[-0.0224, -0.0631, -0.0415,  ..., -0.0812,  0.0681, -0.3268],
        [-0.0414, -0.0692, -0.0488,  ..., -0.0714,  0.0762, -0.3576],
        [-0.0414, -0.0692, -0.0488,  ..., -0.0714,  0.0762, -0.3576],
        ...,
        [-0.0224, -0.0631, -0.0415,  ..., -0.0812,  0.0681, -0.3268],
        [-0.0224, -0.0631, -0.0415,  ..., -0.0812,  0.0681, -0.3268],
        [-0.0224, -0.0631, -0.0415,  ..., -0.0812,  0.0681, -0.3268]],
       device='cuda:0')
Computed C_score: tensor([0.6709, 0.6534, 0.6790, 0.7555, 0.6381, 0.8323, 0.8110, 0.6433, 0.5693,
        0.6645, 0.7382, 0.6881, 0.7286, 0.6870, 0.6796, 0.7353, 0.8197, 0.6738,
        0.6166, 0.7658, 0.7464, 0.6998, 0.5799, 0.6271, 0.6936, 0.7603, 0.7702,
        0.5762, 0.8004, 0.6632, 0.8896, 0.7673, 0.4453, 0.6842, 0.7870, 0.7861,
        0.7654, 0.7259, 0.5683, 0.8287, 0.6883, 0.6931, 0.8202, 0.7209, 0.8129,
        0.6847, 0.7882, 0.7817, 0.6416, 0.7793, 0.6563, 0.6567, 0.8282, 0.8128,
        0.6730, 0.6548, 0.7441, 0.6742, 0.7155, 0.7813, 0.6074, 0.4207, 0.6593,
        0.4263, 0.7338, 0.6600], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(46.3302, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([66, 1])
Inertia: tensor([233.6726], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([66, 1280])
Centroid_list: tensor([[-0.0138, -0.0603, -0.0445,  ..., -0.0740,  0.0732, -0.2459],
        [-0.0379, -0.0690, -0.0376,  ..., -0.0897,  0.0660, -0.4793],
        [-0.0379, -0.0690, -0.0376,  ..., -0.0897,  0.0660, -0.4793],
        ...,
        [-0.0138, -0.0603, -0.0445,  ..., -0.0740,  0.0732, -0.2459],
        [-0.0138, -0.0603, -0.0445,  ..., -0.0740,  0.0732, -0.2459],
        [-0.0379, -0.0690, -0.0376,  ..., -0.0897,  0.0660, -0.4793]],
       device='cuda:0')
Computed C_score: tensor([0.6520, 0.5827, 0.7209, 0.7632, 0.6432, 0.8646, 0.7791, 0.6947, 0.5965,
        0.6996, 0.8115, 0.7483, 0.7498, 0.7202, 0.6779, 0.8175, 0.8672, 0.7109,
        0.6962, 0.7726, 0.7482, 0.6482, 0.6345, 0.6868, 0.6812, 0.7610, 0.8817,
        0.5732, 0.7710, 0.6914, 0.9116, 0.8414, 0.4466, 0.6691, 0.8061, 0.8382,
        0.7890, 0.7424, 0.6013, 0.7602, 0.6490, 0.7653, 0.9015, 0.8300, 0.8085,
        0.7239, 0.8426, 0.8856, 0.6766, 0.8217, 0.6350, 0.7546, 0.8974, 0.9062,
        0.7205, 0.7195, 0.8526, 0.6856, 0.7212, 0.7970, 0.6525, 0.5050, 0.6645,
        0.5165, 0.7654, 0.6988], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(48.4485, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([66, 1])
Inertia: tensor([216.9849], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([66, 1280])
Centroid_list: tensor([[-0.0162, -0.0557, -0.0312,  ..., -0.0845,  0.0701, -0.3563],
        [-0.0400, -0.0783, -0.0437,  ..., -0.0866,  0.0677, -0.4906],
        [-0.0162, -0.0557, -0.0312,  ..., -0.0845,  0.0701, -0.3563],
        ...,
        [-0.0158, -0.0635, -0.0673,  ..., -0.0598,  0.0747, -0.0511],
        [-0.0162, -0.0557, -0.0312,  ..., -0.0845,  0.0701, -0.3563],
        [-0.0162, -0.0557, -0.0312,  ..., -0.0845,  0.0701, -0.3563]],
       device='cuda:0')
Computed C_score: tensor([0.6835, 0.5701, 0.7000, 0.7703, 0.6979, 0.8543, 0.7658, 0.6585, 0.6712,
        0.6763, 0.8422, 0.7258, 0.7431, 0.7482, 0.7209, 0.8143, 0.8678, 0.7075,
        0.6914, 0.7379, 0.6818, 0.6061, 0.7190, 0.7407, 0.7191, 0.7686, 0.8832,
        0.5998, 0.8018, 0.7700, 0.9143, 0.8790, 0.5857, 0.6593, 0.8441, 0.8721,
        0.7800, 0.7882, 0.6510, 0.8114, 0.6458, 0.7345, 0.9068, 0.8681, 0.8282,
        0.7111, 0.7984, 0.8750, 0.7032, 0.8298, 0.6472, 0.8078, 0.9090, 0.8950,
        0.7550, 0.7492, 0.8906, 0.7233, 0.7240, 0.7525, 0.6509, 0.7216, 0.6695,
        0.7146, 0.7620, 0.6866], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(49.6818, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([66, 1])
Inertia: tensor([214.3920], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([66, 1280])
Centroid_list: tensor([[-0.0172, -0.0557, -0.0216,  ..., -0.0964,  0.0659, -0.4651],
        [-0.0515, -0.0682, -0.0490,  ..., -0.0708,  0.0821, -0.3627],
        [-0.0172, -0.0557, -0.0216,  ..., -0.0964,  0.0659, -0.4651],
        ...,
        [-0.0123, -0.0666, -0.0645,  ..., -0.0498,  0.0746,  0.0153],
        [-0.0172, -0.0557, -0.0216,  ..., -0.0964,  0.0659, -0.4651],
        [-0.0172, -0.0557, -0.0216,  ..., -0.0964,  0.0659, -0.4651]],
       device='cuda:0')
Computed C_score: tensor([0.6887, 0.6884, 0.7274, 0.7749, 0.7137, 0.8731, 0.7849, 0.6503, 0.6326,
        0.7316, 0.8180, 0.7168, 0.7245, 0.7739, 0.7268, 0.8028, 0.8691, 0.7052,
        0.6870, 0.7098, 0.7626, 0.7311, 0.6898, 0.7928, 0.7381, 0.7542, 0.8760,
        0.5610, 0.7774, 0.7394, 0.9072, 0.8915, 0.5090, 0.6625, 0.8439, 0.8593,
        0.7746, 0.7790, 0.6586, 0.8152, 0.6754, 0.7374, 0.8605, 0.8934, 0.7930,
        0.7031, 0.8283, 0.8936, 0.7367, 0.8102, 0.6319, 0.8358, 0.9029, 0.9058,
        0.7382, 0.8187, 0.9054, 0.7079, 0.7237, 0.7663, 0.6680, 0.6530, 0.6966,
        0.6475, 0.7644, 0.7058], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(49.9260, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0156, 0.0382, 0.0685, 0.1162], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([176, 1280])
S-Scores: tensor([0.7229, 1.9515, 3.8951, 6.4000], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([176, 1])
Inertia: tensor([105.8361], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([176, 1280])
Centroid_list: tensor([[ 0.0085, -0.0311, -0.0810,  ..., -0.0535,  0.0646, -0.4902],
        [ 0.0085, -0.0311, -0.0810,  ..., -0.0535,  0.0646, -0.4902],
        [ 0.0085, -0.0311, -0.0810,  ..., -0.0535,  0.0646, -0.4902],
        ...,
        [ 0.0085, -0.0311, -0.0810,  ..., -0.0535,  0.0646, -0.4902],
        [-0.0418, -0.0661, -0.0601,  ..., -0.0648,  0.0738, -0.4066],
        [ 0.0085, -0.0311, -0.0810,  ..., -0.0535,  0.0646, -0.4902]],
       device='cuda:0')
Computed C_score: tensor([0.8016, 0.5281, 0.8564, 0.7415, 0.8191, 0.5390, 0.7143, 0.7251, 0.7565,
        0.7599, 0.7531, 0.6851, 0.6635, 0.5113, 0.4499, 0.6143, 0.6313, 0.7526,
        0.6488, 0.6900, 0.7621, 0.5153, 0.5634, 0.7778, 0.6841, 0.4488, 0.6095,
        0.5746, 0.7591, 0.7078, 0.7658, 0.7418, 0.6599, 0.7293, 0.4985, 0.7575,
        0.8544, 0.6458, 0.7821, 0.7096, 0.6749, 0.6198, 0.8018, 0.7295, 0.6174,
        0.7385, 0.7441, 0.7496, 0.5495, 0.8545, 0.5704, 0.5347, 0.7111, 0.7832,
        0.7244, 0.7277, 0.7769, 0.7511, 0.7177, 0.7240, 0.6034, 0.7934, 0.6939,
        0.5846, 0.7691, 0.5950, 0.7863, 0.8189, 0.5742, 0.6767, 0.8283, 0.7461,
        0.7640, 0.8300, 0.6971, 0.6677, 0.8648, 0.7800, 0.8144, 0.7111, 0.7850,
        0.8627, 0.7930, 0.6487, 0.7125, 0.5900, 0.5259, 0.7503, 0.6927, 0.6762,
        0.7471, 0.8089, 0.6334, 0.6987, 0.7867, 0.8238, 0.7182, 0.7466, 0.5740,
        0.7084, 0.7407, 0.7413, 0.6533, 0.6778, 0.5723, 0.7493, 0.7697, 0.8383,
        0.8009, 0.7656, 0.6398, 0.7223, 0.6399, 0.8104, 0.8272, 0.6533, 0.7280,
        0.7438, 0.7047, 0.6025, 0.7557, 0.5686, 0.7957, 0.5677, 0.7452, 0.6053,
        0.6494, 0.7454, 0.6936, 0.6768, 0.4675, 0.6548, 0.5632, 0.7953, 0.5653,
        0.6538, 0.5358, 0.7744, 0.7486, 0.7852, 0.4969, 0.7828, 0.7456, 0.6126,
        0.7095, 0.6272, 0.5405, 0.5585, 0.5842, 0.6742, 0.7333, 0.6108, 0.6564,
        0.5354, 0.7521, 0.7455, 0.8602, 0.7941, 0.8027, 0.8154, 0.7971, 0.6870,
        0.7147, 0.5915, 0.7256, 0.7081, 0.6526, 0.7499, 0.6805, 0.7480, 0.8026,
        0.6572, 0.8060, 0.7571, 0.7119, 0.7883], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(123.1157, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([176, 1])
Inertia: tensor([79.5029], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([176, 1280])
Centroid_list: tensor([[ 0.0134, -0.0215, -0.0944,  ..., -0.0435,  0.0562, -0.3780],
        [-0.0153, -0.0565, -0.0624,  ..., -0.0715,  0.0740, -0.6298],
        [ 0.0134, -0.0215, -0.0944,  ..., -0.0435,  0.0562, -0.3780],
        ...,
        [-0.0153, -0.0565, -0.0624,  ..., -0.0715,  0.0740, -0.6298],
        [-0.0446, -0.0621, -0.0572,  ..., -0.0571,  0.0767, -0.2770],
        [ 0.0134, -0.0215, -0.0944,  ..., -0.0435,  0.0562, -0.3780]],
       device='cuda:0')
Computed C_score: tensor([0.8541, 0.6012, 0.8798, 0.8163, 0.9191, 0.6920, 0.7574, 0.7298, 0.8186,
        0.7981, 0.7166, 0.6792, 0.6687, 0.6214, 0.4780, 0.7329, 0.6609, 0.7807,
        0.6922, 0.7861, 0.8030, 0.6546, 0.6577, 0.8348, 0.6269, 0.4256, 0.5856,
        0.6177, 0.8062, 0.7392, 0.8006, 0.8482, 0.7309, 0.8244, 0.4695, 0.6957,
        0.7703, 0.7110, 0.7883, 0.6934, 0.6481, 0.7199, 0.8646, 0.7896, 0.5955,
        0.7051, 0.8086, 0.7768, 0.4959, 0.9007, 0.6663, 0.5841, 0.7779, 0.8387,
        0.7524, 0.7943, 0.7739, 0.7982, 0.7213, 0.8215, 0.6845, 0.7957, 0.7087,
        0.6932, 0.7367, 0.6834, 0.8020, 0.7806, 0.6375, 0.6793, 0.8791, 0.7533,
        0.7943, 0.8827, 0.7760, 0.8257, 0.8935, 0.8247, 0.8887, 0.6840, 0.7917,
        0.8993, 0.8600, 0.6775, 0.8073, 0.6520, 0.6402, 0.8301, 0.6952, 0.6466,
        0.7502, 0.8337, 0.6492, 0.7435, 0.8277, 0.8622, 0.7781, 0.7719, 0.6314,
        0.7571, 0.7635, 0.8098, 0.7596, 0.7193, 0.6058, 0.7755, 0.8075, 0.7938,
        0.8546, 0.7572, 0.5940, 0.8030, 0.7234, 0.8727, 0.9062, 0.7498, 0.7098,
        0.7871, 0.7735, 0.5793, 0.8429, 0.6098, 0.7787, 0.6830, 0.8040, 0.6821,
        0.6893, 0.7348, 0.7617, 0.7265, 0.5332, 0.6531, 0.6106, 0.7634, 0.5583,
        0.7822, 0.5200, 0.7090, 0.7616, 0.8005, 0.5572, 0.8475, 0.7460, 0.6686,
        0.7474, 0.6934, 0.5743, 0.5128, 0.7169, 0.6690, 0.8045, 0.5789, 0.5972,
        0.5795, 0.8263, 0.7895, 0.9219, 0.8048, 0.8265, 0.7897, 0.8599, 0.8170,
        0.7035, 0.6318, 0.7751, 0.7741, 0.7020, 0.8424, 0.7848, 0.8140, 0.8200,
        0.7488, 0.8557, 0.6812, 0.7590, 0.8428], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(129.9228, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([176, 1])
Inertia: tensor([74.8185], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([176, 1280])
Centroid_list: tensor([[ 0.0189, -0.0153, -0.0945,  ..., -0.0452,  0.0561, -0.3402],
        [ 0.0093, -0.0436, -0.0575,  ..., -0.0672,  0.0749, -0.5692],
        [ 0.0189, -0.0153, -0.0945,  ..., -0.0452,  0.0561, -0.3402],
        ...,
        [ 0.0093, -0.0436, -0.0575,  ..., -0.0672,  0.0749, -0.5692],
        [-0.0545, -0.0650, -0.0646,  ..., -0.0444,  0.0785, -0.2768],
        [ 0.0189, -0.0153, -0.0945,  ..., -0.0452,  0.0561, -0.3402]],
       device='cuda:0')
Computed C_score: tensor([0.8634, 0.6340, 0.8636, 0.8459, 0.9457, 0.6544, 0.7701, 0.7407, 0.8475,
        0.7889, 0.6756, 0.7026, 0.6391, 0.6089, 0.5192, 0.7890, 0.7038, 0.8629,
        0.7168, 0.7911, 0.7781, 0.6263, 0.6377, 0.8732, 0.6864, 0.4408, 0.6140,
        0.6331, 0.7973, 0.7474, 0.8051, 0.8790, 0.7424, 0.8483, 0.5464, 0.7419,
        0.8484, 0.7432, 0.8467, 0.6472, 0.6414, 0.7611, 0.8684, 0.8752, 0.6218,
        0.8197, 0.8185, 0.7831, 0.5963, 0.9150, 0.6535, 0.6209, 0.7900, 0.8485,
        0.6591, 0.8012, 0.7819, 0.8103, 0.6520, 0.8327, 0.7102, 0.8348, 0.7156,
        0.6658, 0.7401, 0.6956, 0.7834, 0.8825, 0.6691, 0.6638, 0.8584, 0.7460,
        0.7684, 0.9074, 0.7845, 0.8247, 0.9138, 0.8393, 0.9221, 0.7670, 0.8022,
        0.9183, 0.8765, 0.7969, 0.8170, 0.6543, 0.6569, 0.8644, 0.6958, 0.7164,
        0.7419, 0.8123, 0.6370, 0.7577, 0.8410, 0.8688, 0.7507, 0.7465, 0.6597,
        0.7691, 0.7597, 0.8191, 0.7673, 0.7030, 0.6547, 0.7792, 0.8025, 0.7640,
        0.8914, 0.7791, 0.6420, 0.8060, 0.7374, 0.8545, 0.9138, 0.7833, 0.6900,
        0.7800, 0.7770, 0.6283, 0.8262, 0.6394, 0.7557, 0.6673, 0.8114, 0.6670,
        0.6640, 0.7209, 0.9008, 0.7944, 0.5693, 0.6935, 0.6387, 0.7386, 0.5693,
        0.8539, 0.5809, 0.8374, 0.7099, 0.8696, 0.5336, 0.8470, 0.8019, 0.6504,
        0.7450, 0.7786, 0.5430, 0.6321, 0.6686, 0.7606, 0.8113, 0.5535, 0.6449,
        0.6247, 0.8230, 0.7974, 0.9183, 0.7859, 0.8351, 0.8279, 0.8698, 0.7987,
        0.7385, 0.6426, 0.7256, 0.8912, 0.6199, 0.8344, 0.8082, 0.8533, 0.8307,
        0.8028, 0.8598, 0.7365, 0.8102, 0.8535], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(132.7712, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([176, 1])
Inertia: tensor([74.3442], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([176, 1280])
Centroid_list: tensor([[ 0.0203, -0.0149, -0.0940,  ..., -0.0451,  0.0553, -0.3362],
        [ 0.0052, -0.0428, -0.0638,  ..., -0.0611,  0.0736, -0.6045],
        [ 0.0203, -0.0149, -0.0940,  ..., -0.0451,  0.0553, -0.3362],
        ...,
        [ 0.0052, -0.0428, -0.0638,  ..., -0.0611,  0.0736, -0.6045],
        [-0.0736, -0.0683, -0.0664,  ..., -0.0404,  0.0775, -0.2746],
        [ 0.0203, -0.0149, -0.0940,  ..., -0.0451,  0.0553, -0.3362]],
       device='cuda:0')
Computed C_score: tensor([0.8644, 0.6404, 0.8670, 0.8567, 0.9513, 0.6661, 0.7641, 0.7402, 0.8622,
        0.7743, 0.7239, 0.8760, 0.6884, 0.6660, 0.5147, 0.7802, 0.6708, 0.8664,
        0.7146, 0.7903, 0.8029, 0.6218, 0.7094, 0.8879, 0.6649, 0.4272, 0.6017,
        0.6329, 0.7928, 0.7497, 0.8076, 0.8778, 0.7365, 0.8467, 0.5511, 0.7523,
        0.8552, 0.7585, 0.8523, 0.7780, 0.6364, 0.7500, 0.8620, 0.8790, 0.6130,
        0.8273, 0.8151, 0.7845, 0.6464, 0.9180, 0.6688, 0.6363, 0.7929, 0.8535,
        0.8613, 0.8045, 0.7843, 0.8065, 0.7916, 0.8292, 0.7060, 0.8464, 0.6802,
        0.7486, 0.7428, 0.7458, 0.7791, 0.8893, 0.6688, 0.8419, 0.8393, 0.7527,
        0.7930, 0.9096, 0.7855, 0.8145, 0.9224, 0.8376, 0.9366, 0.7564, 0.8019,
        0.9229, 0.8749, 0.8020, 0.8228, 0.6500, 0.6509, 0.8785, 0.6970, 0.7213,
        0.7491, 0.8085, 0.8173, 0.7581, 0.8408, 0.8702, 0.7473, 0.7724, 0.7052,
        0.7668, 0.7677, 0.8212, 0.7700, 0.6885, 0.6682, 0.7819, 0.8088, 0.7649,
        0.9158, 0.7801, 0.7280, 0.7986, 0.7331, 0.8495, 0.9154, 0.8292, 0.6942,
        0.7969, 0.7726, 0.5997, 0.8062, 0.6283, 0.7720, 0.7374, 0.8183, 0.6698,
        0.6873, 0.7285, 0.9087, 0.7917, 0.6449, 0.7081, 0.7177, 0.7327, 0.5898,
        0.8573, 0.5547, 0.8425, 0.8260, 0.8668, 0.5629, 0.8424, 0.8125, 0.6561,
        0.7438, 0.7651, 0.5758, 0.7457, 0.7521, 0.7726, 0.8079, 0.5253, 0.6496,
        0.6468, 0.8190, 0.7943, 0.9178, 0.7826, 0.8358, 0.8320, 0.8710, 0.8417,
        0.7372, 0.6366, 0.8277, 0.8963, 0.8309, 0.8295, 0.8055, 0.8731, 0.8319,
        0.7974, 0.8569, 0.7155, 0.8416, 0.8569], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(135.4636, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0058, 0.0148, 0.0285, 0.0451], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([11, 1280])
S-Scores: tensor([0.7353, 1.7141, 3.5293, 5.9666], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([109.8195], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0013, -0.0645, -0.0642,  ..., -0.0627,  0.0641, -0.2614],
        [-0.0013, -0.0645, -0.0642,  ..., -0.0627,  0.0641, -0.2614],
        [-0.0603, -0.0750, -0.1003,  ..., -0.0573,  0.0784, -0.2315],
        ...,
        [-0.0603, -0.0750, -0.1003,  ..., -0.0573,  0.0784, -0.2315],
        [-0.0013, -0.0645, -0.0642,  ..., -0.0627,  0.0641, -0.2614],
        [-0.0603, -0.0750, -0.1003,  ..., -0.0573,  0.0784, -0.2315]],
       device='cuda:0')
Computed C_score: tensor([0.8430, 0.6425, 0.7638, 0.8536, 0.8109, 0.6534, 0.8285, 0.8380, 0.8117,
        0.8170, 0.7091], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(8.5714, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([75.4642], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[ 0.0057, -0.0768, -0.0504,  ..., -0.0710,  0.0599, -0.2794],
        [-0.0214, -0.0442, -0.0935,  ..., -0.0503,  0.0721, -0.2839],
        [-0.1327, -0.1160, -0.1240,  ..., -0.0546,  0.0960,  0.0084],
        ...,
        [-0.0214, -0.0442, -0.0935,  ..., -0.0503,  0.0721, -0.2839],
        [ 0.0057, -0.0768, -0.0504,  ..., -0.0710,  0.0599, -0.2794],
        [-0.0214, -0.0442, -0.0935,  ..., -0.0503,  0.0721, -0.2839]],
       device='cuda:0')
Computed C_score: tensor([0.8945, 0.7710, 1.0000, 0.8863, 0.7760, 0.8009, 0.8182, 0.8769, 0.7788,
        0.8782, 0.6202], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(9.1010, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([44.0622], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0154, -0.0833, -0.0492,  ..., -0.0809,  0.0551, -0.0687],
        [-0.0214, -0.0442, -0.0935,  ..., -0.0503,  0.0721, -0.2839],
        [-0.1327, -0.1160, -0.1240,  ..., -0.0546,  0.0960,  0.0084],
        ...,
        [-0.0214, -0.0442, -0.0935,  ..., -0.0503,  0.0721, -0.2839],
        [-0.0154, -0.0833, -0.0492,  ..., -0.0809,  0.0551, -0.0687],
        [-0.0214, -0.0442, -0.0935,  ..., -0.0503,  0.0721, -0.2839]],
       device='cuda:0')
Computed C_score: tensor([0.9400, 0.7710, 1.0000, 0.9448, 0.7760, 0.8009, 0.9382, 0.9287, 0.7788,
        0.9069, 0.6202], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(9.4055, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([11, 1])
Inertia: tensor([32.5943], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([11, 1280])
Centroid_list: tensor([[-0.0553, -0.0962, -0.0533,  ..., -0.0836,  0.0589, -0.0205],
        [-0.0214, -0.0442, -0.0935,  ..., -0.0503,  0.0721, -0.2839],
        [-0.1327, -0.1160, -0.1240,  ..., -0.0546,  0.0960,  0.0084],
        ...,
        [-0.0214, -0.0442, -0.0935,  ..., -0.0503,  0.0721, -0.2839],
        [ 0.0645, -0.0575, -0.0410,  ..., -0.0757,  0.0475, -0.1652],
        [-0.0214, -0.0442, -0.0935,  ..., -0.0503,  0.0721, -0.2839]],
       device='cuda:0')
Computed C_score: tensor([0.9559, 0.7710, 1.0000, 0.9448, 0.7760, 0.8009, 0.9382, 0.9571, 0.7788,
        1.0000, 0.6202], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(9.5429, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0790, 0.1585, 0.2729, 0.3847], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([135, 1280])
S-Scores: tensor([0.7772, 2.1425, 4.0513, 6.5242], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([135, 1])
Inertia: tensor([202.9289], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([135, 1280])
Centroid_list: tensor([[-0.0186, -0.0520, -0.0476,  ..., -0.0700,  0.0780, -0.1713],
        [-0.0186, -0.0520, -0.0476,  ..., -0.0700,  0.0780, -0.1713],
        [-0.0186, -0.0520, -0.0476,  ..., -0.0700,  0.0780, -0.1713],
        ...,
        [-0.0186, -0.0520, -0.0476,  ..., -0.0700,  0.0780, -0.1713],
        [-0.0186, -0.0520, -0.0476,  ..., -0.0700,  0.0780, -0.1713],
        [-0.0186, -0.0520, -0.0476,  ..., -0.0700,  0.0780, -0.1713]],
       device='cuda:0')
Computed C_score: tensor([0.7421, 0.6667, 0.5941, 0.7552, 0.5899, 0.6006, 0.6939, 0.7672, 0.7135,
        0.5490, 0.5496, 0.8604, 0.7086, 0.5823, 0.7874, 0.4578, 0.8752, 0.7757,
        0.7252, 0.8061, 0.8086, 0.5890, 0.7921, 0.5159, 0.8909, 0.7605, 0.7230,
        0.7088, 0.6453, 0.8719, 0.5913, 0.6164, 0.9012, 0.6299, 0.5429, 0.7712,
        0.6761, 0.6891, 0.6289, 0.7275, 0.8240, 0.3991, 0.6121, 0.5514, 0.8610,
        0.8767, 0.6570, 0.7417, 0.5275, 0.5580, 0.3278, 0.6569, 0.8525, 0.6005,
        0.7094, 0.6933, 0.8617, 0.7501, 0.8120, 0.7785, 0.7464, 0.6779, 0.6620,
        0.7623, 0.6732, 0.7324, 0.7199, 0.5786, 0.8144, 0.7467, 0.6837, 0.6698,
        0.6077, 0.7906, 0.7374, 0.7187, 0.6237, 0.6828, 0.6563, 0.7651, 0.7578,
        0.7358, 0.7197, 0.2929, 0.7517, 0.8233, 0.7713, 0.6926, 0.7262, 0.7848,
        0.8342, 0.5014, 0.6264, 0.6901, 0.8045, 0.5756, 0.6486, 0.6701, 0.7803,
        0.6742, 0.7057, 0.8244, 0.6206, 0.7141, 0.7407, 0.7303, 0.6037, 0.6390,
        0.6104, 0.7809, 0.6392, 0.8000, 0.7685, 0.8994, 0.8473, 0.7332, 0.5692,
        0.8475, 0.7548, 0.5857, 0.5563, 0.8558, 0.6441, 0.7388, 0.7803, 0.5570,
        0.6242, 0.6998, 0.7317, 0.6168, 0.8698, 0.7828, 0.6316, 0.8212, 0.7419],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(94.5094, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([135, 1])
Inertia: tensor([155.6551], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([135, 1280])
Centroid_list: tensor([[-0.0022, -0.0466, -0.0438,  ..., -0.0690,  0.0696, -0.1353],
        [-0.0349, -0.0588, -0.0584,  ..., -0.0673,  0.0825, -0.2066],
        [-0.0022, -0.0466, -0.0438,  ..., -0.0690,  0.0696, -0.1353],
        ...,
        [-0.0349, -0.0588, -0.0584,  ..., -0.0673,  0.0825, -0.2066],
        [-0.0022, -0.0466, -0.0438,  ..., -0.0690,  0.0696, -0.1353],
        [-0.0022, -0.0466, -0.0438,  ..., -0.0690,  0.0696, -0.1353]],
       device='cuda:0')
Computed C_score: tensor([0.8118, 0.8120, 0.6019, 0.7240, 0.6080, 0.6386, 0.7204, 0.7483, 0.6935,
        0.5606, 0.5109, 0.8578, 0.7854, 0.6325, 0.7779, 0.5710, 0.8667, 0.8153,
        0.7645, 0.8170, 0.8361, 0.6171, 0.8191, 0.5833, 0.8919, 0.7514, 0.7519,
        0.7261, 0.7615, 0.8600, 0.6917, 0.6361, 0.8921, 0.6189, 0.6123, 0.7579,
        0.7537, 0.7531, 0.7026, 0.6965, 0.8105, 0.4495, 0.7027, 0.5960, 0.8635,
        0.8874, 0.6371, 0.8201, 0.5831, 0.6730, 0.3498, 0.6874, 0.8259, 0.5658,
        0.8184, 0.6951, 0.8606, 0.7334, 0.8115, 0.7929, 0.7919, 0.8246, 0.7037,
        0.7761, 0.6669, 0.8442, 0.7580, 0.6502, 0.8069, 0.7583, 0.6399, 0.7428,
        0.6843, 0.7690, 0.7750, 0.7521, 0.6593, 0.6678, 0.6994, 0.7508, 0.8030,
        0.7277, 0.7201, 0.2693, 0.8318, 0.8318, 0.7716, 0.6533, 0.7128, 0.8208,
        0.8445, 0.5703, 0.6998, 0.7612, 0.7902, 0.5943, 0.6783, 0.6960, 0.8354,
        0.6638, 0.6556, 0.8007, 0.6822, 0.8281, 0.8367, 0.8221, 0.6372, 0.6701,
        0.6594, 0.7820, 0.6587, 0.8128, 0.7634, 0.8950, 0.8590, 0.7560, 0.5707,
        0.8315, 0.7359, 0.7551, 0.5800, 0.8607, 0.6654, 0.7685, 0.8377, 0.6519,
        0.6691, 0.7863, 0.7018, 0.6310, 0.8775, 0.7699, 0.7544, 0.8438, 0.7221],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(98.3244, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([135, 1])
Inertia: tensor([156.6258], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([135, 1280])
Centroid_list: tensor([[-0.0116, -0.0452, -0.0410,  ..., -0.0697,  0.0726, -0.1376],
        [-0.0302, -0.0622, -0.0547,  ..., -0.0722,  0.0829, -0.1745],
        [-0.0116, -0.0452, -0.0410,  ..., -0.0697,  0.0726, -0.1376],
        ...,
        [-0.0302, -0.0622, -0.0547,  ..., -0.0722,  0.0829, -0.1745],
        [-0.0116, -0.0452, -0.0410,  ..., -0.0697,  0.0726, -0.1376],
        [-0.0116, -0.0452, -0.0410,  ..., -0.0697,  0.0726, -0.1376]],
       device='cuda:0')
Computed C_score: tensor([0.8113, 0.8187, 0.6124, 0.8128, 0.6758, 0.6260, 0.7444, 0.8336, 0.7601,
        0.5494, 0.5379, 0.8700, 0.8004, 0.6292, 0.8081, 0.5609, 0.8858, 0.8254,
        0.7836, 0.7737, 0.8517, 0.7615, 0.8340, 0.6242, 0.8857, 0.7563, 0.7562,
        0.7073, 0.7648, 0.8965, 0.7091, 0.6357, 0.9264, 0.6090, 0.6120, 0.8234,
        0.7711, 0.7741, 0.6822, 0.7945, 0.8449, 0.5516, 0.7137, 0.5996, 0.8501,
        0.8664, 0.6128, 0.8181, 0.5617, 0.6736, 0.4040, 0.6964, 0.8298, 0.5847,
        0.8295, 0.7128, 0.8811, 0.8015, 0.8324, 0.7560, 0.7999, 0.8505, 0.7140,
        0.7837, 0.6492, 0.8613, 0.7474, 0.6363, 0.8046, 0.7540, 0.6653, 0.7718,
        0.6830, 0.8148, 0.7593, 0.7759, 0.6590, 0.7191, 0.7178, 0.7657, 0.7923,
        0.7646, 0.7472, 0.4198, 0.8005, 0.8008, 0.7567, 0.6811, 0.7123, 0.8308,
        0.8106, 0.5681, 0.7215, 0.7637, 0.8056, 0.7477, 0.6771, 0.7627, 0.8350,
        0.6760, 0.6744, 0.8666, 0.6848, 0.8324, 0.8625, 0.8237, 0.6348, 0.6639,
        0.6634, 0.7760, 0.6870, 0.8105, 0.7723, 0.9147, 0.8550, 0.8033, 0.5463,
        0.8351, 0.7679, 0.7912, 0.7110, 0.8485, 0.7565, 0.7615, 0.8487, 0.6497,
        0.7335, 0.7825, 0.7006, 0.7521, 0.8605, 0.7680, 0.7634, 0.8420, 0.7318],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(100.6993, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([135, 1])
Inertia: tensor([156.6617], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([135, 1280])
Centroid_list: tensor([[-0.0110, -0.0452, -0.0407,  ..., -0.0684,  0.0729, -0.1581],
        [-0.0371, -0.0563, -0.0639,  ..., -0.0630,  0.0822, -0.1151],
        [-0.0110, -0.0452, -0.0407,  ..., -0.0684,  0.0729, -0.1581],
        ...,
        [-0.0371, -0.0563, -0.0639,  ..., -0.0630,  0.0822, -0.1151],
        [-0.0110, -0.0452, -0.0407,  ..., -0.0684,  0.0729, -0.1581],
        [-0.0110, -0.0452, -0.0407,  ..., -0.0684,  0.0729, -0.1581]],
       device='cuda:0')
Computed C_score: tensor([0.8105, 0.8202, 0.6118, 0.8128, 0.6620, 0.6273, 0.7447, 0.8336, 0.7601,
        0.5458, 0.6057, 0.8700, 0.7985, 0.6319, 0.8081, 0.6517, 0.8858, 0.8254,
        0.7994, 0.7756, 0.8515, 0.7921, 0.7800, 0.6582, 0.8857, 0.7573, 0.7572,
        0.7048, 0.8576, 0.8965, 0.8279, 0.6324, 0.9264, 0.6625, 0.6655, 0.8234,
        0.7706, 0.7738, 0.6830, 0.7945, 0.8449, 0.5628, 0.8251, 0.6017, 0.8501,
        0.8664, 0.7263, 0.8171, 0.7120, 0.7457, 0.4110, 0.7721, 0.8303, 0.5838,
        0.8086, 0.7128, 0.8811, 0.8015, 0.8324, 0.7560, 0.8272, 0.9005, 0.7591,
        0.7839, 0.6794, 0.7958, 0.7491, 0.6196, 0.8046, 0.7546, 0.6669, 0.7042,
        0.6847, 0.8148, 0.7622, 0.7304, 0.6587, 0.7191, 0.7539, 0.7657, 0.7902,
        0.7646, 0.7486, 0.3954, 0.8005, 0.8008, 0.7567, 0.6828, 0.7123, 0.8298,
        0.8106, 0.7367, 0.7241, 0.7633, 0.8056, 0.7615, 0.6754, 0.7894, 0.8344,
        0.6760, 0.6747, 0.8666, 0.6845, 0.8412, 0.8599, 0.8241, 0.6403, 0.6634,
        0.6642, 0.7760, 0.6749, 0.8131, 0.7701, 0.9147, 0.8550, 0.7977, 0.6161,
        0.8369, 0.7679, 0.8351, 0.7477, 0.8485, 0.7626, 0.7641, 0.8479, 0.7144,
        0.7565, 0.7835, 0.6997, 0.7703, 0.8605, 0.8157, 0.7687, 0.8430, 0.7318],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(102.2080, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0082, 0.0213, 0.0387, 0.0600], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([5064, 1280])
S-Scores: tensor([0.6176, 1.8827, 3.9756, 6.2323], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([5064, 1])
Inertia: tensor([248.6496], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([5064, 1280])
Centroid_list: tensor([[-0.0572, -0.0711, -0.0612,  ..., -0.0985,  0.0487,  0.0010],
        [-0.0362, -0.0634, -0.0486,  ..., -0.0716,  0.0782, -0.2744],
        [-0.0362, -0.0634, -0.0486,  ..., -0.0716,  0.0782, -0.2744],
        ...,
        [-0.0362, -0.0634, -0.0486,  ..., -0.0716,  0.0782, -0.2744],
        [-0.0572, -0.0711, -0.0612,  ..., -0.0985,  0.0487,  0.0010],
        [-0.0362, -0.0634, -0.0486,  ..., -0.0716,  0.0782, -0.2744]],
       device='cuda:0')
Computed C_score: tensor([0.7062, 0.8282, 0.6240,  ..., 0.7169, 0.7827, 0.4358], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3744.2002, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5064, 1])
Inertia: tensor([265.0826], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([5064, 1280])
Centroid_list: tensor([[-0.0638, -0.0731, -0.0668,  ..., -0.1013,  0.0437,  0.0455],
        [-0.0445, -0.0680, -0.0517,  ..., -0.0623,  0.0808, -0.2521],
        [-0.0304, -0.0612, -0.0438,  ..., -0.0820,  0.0734, -0.2494],
        ...,
        [-0.0304, -0.0612, -0.0438,  ..., -0.0820,  0.0734, -0.2494],
        [-0.0638, -0.0731, -0.0668,  ..., -0.1013,  0.0437,  0.0455],
        [-0.0304, -0.0612, -0.0438,  ..., -0.0820,  0.0734, -0.2494]],
       device='cuda:0')
Computed C_score: tensor([0.6832, 0.8030, 0.7580,  ..., 0.7676, 0.8112, 0.3826], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3850.4592, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5064, 1])
Inertia: tensor([266.5161], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([5064, 1280])
Centroid_list: tensor([[-0.0632, -0.0723, -0.0670,  ..., -0.1014,  0.0433,  0.0504],
        [-0.0442, -0.0677, -0.0515,  ..., -0.0611,  0.0812, -0.2525],
        [-0.0141, -0.0484, -0.0360,  ..., -0.0805,  0.0769, -0.1810],
        ...,
        [-0.0141, -0.0484, -0.0360,  ..., -0.0805,  0.0769, -0.1810],
        [-0.0632, -0.0723, -0.0670,  ..., -0.1014,  0.0433,  0.0504],
        [-0.0624, -0.0847, -0.0587,  ..., -0.0863,  0.0656, -0.3208]],
       device='cuda:0')
Computed C_score: tensor([0.6815, 0.7982, 0.7314,  ..., 0.7565, 0.8149, 0.4986], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3908.3818, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5064, 1])
Inertia: tensor([245.5682], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([5064, 1280])
Centroid_list: tensor([[-0.0216, -0.0532, -0.0354,  ..., -0.0841,  0.0707, -0.1708],
        [-0.0119, -0.0487, -0.0344,  ..., -0.0746,  0.0855, -0.1063],
        [-0.0216, -0.0532, -0.0354,  ..., -0.0841,  0.0707, -0.1708],
        ...,
        [-0.0606, -0.0830, -0.0593,  ..., -0.0847,  0.0667, -0.3238],
        [-0.0658, -0.0726, -0.0689,  ..., -0.1017,  0.0426,  0.0608],
        [-0.0606, -0.0830, -0.0593,  ..., -0.0847,  0.0667, -0.3238]],
       device='cuda:0')
Computed C_score: tensor([0.7206, 0.7818, 0.7629,  ..., 0.7018, 0.8203, 0.5001], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3972.6130, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0002, 0.0005, 0.0010, 0.0016], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([3354, 1280])
S-Scores: tensor([0.6748, 1.9315, 4.0211, 6.6956], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([3354, 1])
Inertia: tensor([162.7510], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([3354, 1280])
Centroid_list: tensor([[-0.0256, -0.0312, -0.0334,  ..., -0.0845,  0.0928, -0.2379],
        [-0.0256, -0.0312, -0.0334,  ..., -0.0845,  0.0928, -0.2379],
        [-0.0256, -0.0312, -0.0334,  ..., -0.0845,  0.0928, -0.2379],
        ...,
        [-0.0256, -0.0312, -0.0334,  ..., -0.0845,  0.0928, -0.2379],
        [-0.0256, -0.0312, -0.0334,  ..., -0.0845,  0.0928, -0.2379],
        [-0.0256, -0.0312, -0.0334,  ..., -0.0845,  0.0928, -0.2379]],
       device='cuda:0')
Computed C_score: tensor([0.7753, 0.6564, 0.6876,  ..., 0.6100, 0.8379, 0.8469], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2422.5132, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3354, 1])
Inertia: tensor([172.4356], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([3354, 1280])
Centroid_list: tensor([[-0.0279, -0.0575, -0.0490,  ..., -0.0900,  0.0778, -0.1794],
        [-0.0279, -0.0575, -0.0490,  ..., -0.0900,  0.0778, -0.1794],
        [-0.0313, -0.0208, -0.0281,  ..., -0.0784,  0.1007, -0.3190],
        ...,
        [-0.0279, -0.0575, -0.0490,  ..., -0.0900,  0.0778, -0.1794],
        [-0.0313, -0.0208, -0.0281,  ..., -0.0784,  0.1007, -0.3190],
        [-0.0313, -0.0208, -0.0281,  ..., -0.0784,  0.1007, -0.3190]],
       device='cuda:0')
Computed C_score: tensor([0.7675, 0.6613, 0.6554,  ..., 0.6544, 0.8469, 0.8789], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2511.1960, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3354, 1])
Inertia: tensor([155.6234], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([3354, 1280])
Centroid_list: tensor([[-0.0522, -0.0142, -0.0284,  ..., -0.0825,  0.0992, -0.4595],
        [-0.0274, -0.0583, -0.0491,  ..., -0.0902,  0.0776, -0.1740],
        [-0.0522, -0.0142, -0.0284,  ..., -0.0825,  0.0992, -0.4595],
        ...,
        [-0.0274, -0.0583, -0.0491,  ..., -0.0902,  0.0776, -0.1740],
        [-0.0115, -0.0281, -0.0291,  ..., -0.0750,  0.1008, -0.1839],
        [-0.0522, -0.0142, -0.0284,  ..., -0.0825,  0.0992, -0.4595]],
       device='cuda:0')
Computed C_score: tensor([0.7865, 0.6607, 0.6468,  ..., 0.6552, 0.9080, 0.8753], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2537.8696, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3354, 1])
Inertia: tensor([131.3654], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([3354, 1280])
Centroid_list: tensor([[-0.0583, -0.0762, -0.0581,  ..., -0.0834,  0.0776, -0.3092],
        [-0.0091, -0.0453, -0.0423,  ..., -0.0929,  0.0785, -0.0938],
        [-0.0091, -0.0453, -0.0423,  ..., -0.0929,  0.0785, -0.0938],
        ...,
        [-0.0091, -0.0453, -0.0423,  ..., -0.0929,  0.0785, -0.0938],
        [-0.0112, -0.0277, -0.0292,  ..., -0.0746,  0.1015, -0.1861],
        [-0.0505, -0.0111, -0.0281,  ..., -0.0812,  0.0998, -0.4751]],
       device='cuda:0')
Computed C_score: tensor([0.8285, 0.6793, 0.6557,  ..., 0.6798, 0.9074, 0.8806], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2584.7827, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0003, 0.0008, 0.0016, 0.0026], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1029, 1280])
S-Scores: tensor([0.7121, 2.1528, 4.2228, 6.6385], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1029, 1])
Inertia: tensor([291.2506], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1029, 1280])
Centroid_list: tensor([[-0.0080, -0.0675, -0.0576,  ..., -0.0663,  0.0804, -0.5417],
        [-0.0080, -0.0675, -0.0576,  ..., -0.0663,  0.0804, -0.5417],
        [-0.0080, -0.0675, -0.0576,  ..., -0.0663,  0.0804, -0.5417],
        ...,
        [-0.0080, -0.0675, -0.0576,  ..., -0.0663,  0.0804, -0.5417],
        [-0.0509, -0.0733, -0.0626,  ..., -0.0514,  0.0842, -0.3879],
        [-0.0509, -0.0733, -0.0626,  ..., -0.0514,  0.0842, -0.3879]],
       device='cuda:0')
Computed C_score: tensor([0.5132, 0.6614, 0.6687,  ..., 0.7879, 0.7367, 0.6804], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(727.7124, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1029, 1])
Inertia: tensor([291.6735], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1029, 1280])
Centroid_list: tensor([[ 0.0046, -0.0569, -0.0562,  ..., -0.0641,  0.0827, -0.5062],
        [ 0.0046, -0.0569, -0.0562,  ..., -0.0641,  0.0827, -0.5062],
        [ 0.0046, -0.0569, -0.0562,  ..., -0.0641,  0.0827, -0.5062],
        ...,
        [ 0.0046, -0.0569, -0.0562,  ..., -0.0641,  0.0827, -0.5062],
        [-0.0352, -0.0861, -0.0630,  ..., -0.0683,  0.0772, -0.5763],
        [-0.0485, -0.0670, -0.0584,  ..., -0.0472,  0.0861, -0.3473]],
       device='cuda:0')
Computed C_score: tensor([0.5083, 0.6655, 0.6872,  ..., 0.7703, 0.7982, 0.6812], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(748.8506, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1029, 1])
Inertia: tensor([293.2701], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1029, 1280])
Centroid_list: tensor([[ 0.0056, -0.0567, -0.0564,  ..., -0.0637,  0.0820, -0.5010],
        [ 0.0056, -0.0567, -0.0564,  ..., -0.0637,  0.0820, -0.5010],
        [ 0.0056, -0.0567, -0.0564,  ..., -0.0637,  0.0820, -0.5010],
        ...,
        [ 0.0056, -0.0567, -0.0564,  ..., -0.0637,  0.0820, -0.5010],
        [-0.0343, -0.0877, -0.0626,  ..., -0.0692,  0.0765, -0.5894],
        [-0.0389, -0.0568, -0.0551,  ..., -0.0559,  0.0883, -0.2913]],
       device='cuda:0')
Computed C_score: tensor([0.5054, 0.6744, 0.6917,  ..., 0.7740, 0.7970, 0.6892], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(758.1625, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1029, 1])
Inertia: tensor([282.4087], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1029, 1280])
Centroid_list: tensor([[-0.0030, -0.0570, -0.0560,  ..., -0.0659,  0.0827, -0.4857],
        [ 0.0270, -0.0614, -0.0569,  ..., -0.0586,  0.0790, -0.5802],
        [-0.0030, -0.0570, -0.0560,  ..., -0.0659,  0.0827, -0.4857],
        ...,
        [ 0.0270, -0.0614, -0.0569,  ..., -0.0586,  0.0790, -0.5802],
        [-0.0370, -0.0897, -0.0639,  ..., -0.0690,  0.0761, -0.5765],
        [-0.0378, -0.0575, -0.0552,  ..., -0.0559,  0.0876, -0.3414]],
       device='cuda:0')
Computed C_score: tensor([0.5254, 0.8144, 0.6967,  ..., 0.8380, 0.8037, 0.6930], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(769.3682, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0010, 0.0029, 0.0055, 0.0086], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1763, 1280])
S-Scores: tensor([0.6338, 1.8401, 3.6120, 6.2258], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1763, 1])
Inertia: tensor([244.3278], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1763, 1280])
Centroid_list: tensor([[-0.0414, -0.0686, -0.0823,  ..., -0.0609,  0.0788, -0.3797],
        [-0.0414, -0.0686, -0.0823,  ..., -0.0609,  0.0788, -0.3797],
        [-0.0275, -0.0405, -0.0656,  ..., -0.0208,  0.0443, -0.6443],
        ...,
        [-0.0414, -0.0686, -0.0823,  ..., -0.0609,  0.0788, -0.3797],
        [-0.0275, -0.0405, -0.0656,  ..., -0.0208,  0.0443, -0.6443],
        [-0.0275, -0.0405, -0.0656,  ..., -0.0208,  0.0443, -0.6443]],
       device='cuda:0')
Computed C_score: tensor([0.5937, 0.6367, 0.7824,  ..., 0.5729, 0.4150, 0.7099], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1324.8088, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1763, 1])
Inertia: tensor([189.0591], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1763, 1280])
Centroid_list: tensor([[-0.0290, -0.0520, -0.0827,  ..., -0.0576,  0.0747, -0.3420],
        [-0.0512, -0.0822, -0.0816,  ..., -0.0588,  0.0809, -0.4016],
        [-0.0301, -0.0403, -0.0594,  ..., -0.0100,  0.0347, -0.7673],
        ...,
        [-0.0290, -0.0520, -0.0827,  ..., -0.0576,  0.0747, -0.3420],
        [-0.0290, -0.0520, -0.0827,  ..., -0.0576,  0.0747, -0.3420],
        [-0.0290, -0.0520, -0.0827,  ..., -0.0576,  0.0747, -0.3420]],
       device='cuda:0')
Computed C_score: tensor([0.6886, 0.6593, 0.7816,  ..., 0.6410, 0.5283, 0.7150], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1366.4109, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1763, 1])
Inertia: tensor([193.6014], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1763, 1280])
Centroid_list: tensor([[-0.0294, -0.0504, -0.0848,  ..., -0.0527,  0.0747, -0.3298],
        [-0.0332, -0.0662, -0.0752,  ..., -0.0721,  0.0771, -0.3685],
        [-0.0301, -0.0404, -0.0593,  ..., -0.0103,  0.0347, -0.7650],
        ...,
        [-0.0294, -0.0504, -0.0848,  ..., -0.0527,  0.0747, -0.3298],
        [-0.0294, -0.0504, -0.0848,  ..., -0.0527,  0.0747, -0.3298],
        [-0.0294, -0.0504, -0.0848,  ..., -0.0527,  0.0747, -0.3298]],
       device='cuda:0')
Computed C_score: tensor([0.6794, 0.5979, 0.7801,  ..., 0.6453, 0.5363, 0.7351], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1384.4519, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1763, 1])
Inertia: tensor([185.6603], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1763, 1280])
Centroid_list: tensor([[-0.0146, -0.0420, -0.0879,  ..., -0.0584,  0.0801, -0.2102],
        [-0.0380, -0.0684, -0.0790,  ..., -0.0682,  0.0779, -0.3718],
        [-0.0286, -0.0372, -0.0601,  ..., -0.0071,  0.0308, -0.7678],
        ...,
        [-0.0146, -0.0420, -0.0879,  ..., -0.0584,  0.0801, -0.2102],
        [-0.0146, -0.0420, -0.0879,  ..., -0.0584,  0.0801, -0.2102],
        [-0.0146, -0.0420, -0.0879,  ..., -0.0584,  0.0801, -0.2102]],
       device='cuda:0')
Computed C_score: tensor([0.6955, 0.6202, 0.7715,  ..., 0.6087, 0.5531, 0.7843], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1401.4298, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0005, 0.0013, 0.0026, 0.0044], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([7209, 1280])
S-Scores: tensor([0.7304, 2.1746, 4.2922, 6.8466], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([7209, 1])
Inertia: tensor([123.5618], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([7209, 1280])
Centroid_list: tensor([[-0.0198, -0.0574, -0.0372,  ..., -0.0786,  0.0588, -0.2690],
        [-0.0198, -0.0574, -0.0372,  ..., -0.0786,  0.0588, -0.2690],
        [-0.0558, -0.0625, -0.0581,  ..., -0.0610,  0.0728, -0.2972],
        ...,
        [-0.0558, -0.0625, -0.0581,  ..., -0.0610,  0.0728, -0.2972],
        [-0.0558, -0.0625, -0.0581,  ..., -0.0610,  0.0728, -0.2972],
        [-0.0198, -0.0574, -0.0372,  ..., -0.0786,  0.0588, -0.2690]],
       device='cuda:0')
Computed C_score: tensor([0.7911, 0.7243, 0.7264,  ..., 0.7165, 0.6249, 0.5942], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(5029.0830, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([7209, 1])
Inertia: tensor([122.5319], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([7209, 1280])
Centroid_list: tensor([[-0.0151, -0.0444, -0.0244,  ..., -0.0823,  0.0507, -0.2389],
        [-0.0279, -0.0713, -0.0511,  ..., -0.0742,  0.0673, -0.3130],
        [-0.0279, -0.0713, -0.0511,  ..., -0.0742,  0.0673, -0.3130],
        ...,
        [-0.0560, -0.0608, -0.0587,  ..., -0.0596,  0.0738, -0.2767],
        [-0.0560, -0.0608, -0.0587,  ..., -0.0596,  0.0738, -0.2767],
        [-0.0151, -0.0444, -0.0244,  ..., -0.0823,  0.0507, -0.2389]],
       device='cuda:0')
Computed C_score: tensor([0.7892, 0.7916, 0.7859,  ..., 0.7091, 0.6236, 0.6249], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(5205.4248, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([7209, 1])
Inertia: tensor([108.7137], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([7209, 1280])
Centroid_list: tensor([[-0.0509, -0.0885, -0.0578,  ..., -0.0833,  0.0613, -0.4468],
        [-0.0509, -0.0885, -0.0578,  ..., -0.0833,  0.0613, -0.4468],
        [-0.0509, -0.0885, -0.0578,  ..., -0.0833,  0.0613, -0.4468],
        ...,
        [-0.0559, -0.0580, -0.0577,  ..., -0.0571,  0.0746, -0.2516],
        [-0.0559, -0.0580, -0.0577,  ..., -0.0571,  0.0746, -0.2516],
        [-0.0135, -0.0398, -0.0187,  ..., -0.0813,  0.0500, -0.2290]],
       device='cuda:0')
Computed C_score: tensor([0.8163, 0.8556, 0.8737,  ..., 0.6994, 0.6205, 0.6182], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(5316.7383, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([7209, 1])
Inertia: tensor([108.6324], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([7209, 1280])
Centroid_list: tensor([[-0.0501, -0.0901, -0.0576,  ..., -0.0837,  0.0605, -0.4551],
        [-0.0501, -0.0901, -0.0576,  ..., -0.0837,  0.0605, -0.4551],
        [-0.0501, -0.0901, -0.0576,  ..., -0.0837,  0.0605, -0.4551],
        ...,
        [-0.0641, -0.0755, -0.0654,  ..., -0.0408,  0.0724, -0.3911],
        [-0.0480, -0.0472, -0.0523,  ..., -0.0678,  0.0751, -0.1882],
        [-0.0128, -0.0412, -0.0181,  ..., -0.0818,  0.0491, -0.2352]],
       device='cuda:0')
Computed C_score: tensor([0.8168, 0.8547, 0.8764,  ..., 0.7203, 0.6323, 0.6225], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(5373.7783, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0001, 0.0004, 0.0008, 0.0013], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([6141, 1280])
S-Scores: tensor([0.6406, 1.8734, 3.6921, 6.4608], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([6141, 1])
Inertia: tensor([147.2978], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([6141, 1280])
Centroid_list: tensor([[-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        [-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        [-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        ...,
        [-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        [-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        [-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560]],
       device='cuda:0')
Computed C_score: tensor([0.8036, 0.3163, 0.7500,  ..., 0.7930, 0.7962, 0.3719], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4593.1025, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6141, 1])
Inertia: tensor([134.5267], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([6141, 1280])
Centroid_list: tensor([[-0.0505, -0.0541, -0.0530,  ..., -0.0473,  0.0869, -0.2018],
        [-0.0194, -0.0561, -0.0456,  ..., -0.0657,  0.0804, -0.2936],
        [-0.0194, -0.0561, -0.0456,  ..., -0.0657,  0.0804, -0.2936],
        ...,
        [-0.0505, -0.0541, -0.0530,  ..., -0.0473,  0.0869, -0.2018],
        [-0.0194, -0.0561, -0.0456,  ..., -0.0657,  0.0804, -0.2936],
        [-0.0194, -0.0561, -0.0456,  ..., -0.0657,  0.0804, -0.2936]],
       device='cuda:0')
Computed C_score: tensor([0.8246, 0.4468, 0.7234,  ..., 0.8710, 0.7909, 0.4026], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4741.3657, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6141, 1])
Inertia: tensor([86.9247], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([6141, 1280])
Centroid_list: tensor([[-0.0313, -0.0426, -0.0362,  ..., -0.0633,  0.0874, -0.1943],
        [-0.0216, -0.0596, -0.0499,  ..., -0.0631,  0.0790, -0.2843],
        [-0.0216, -0.0596, -0.0499,  ..., -0.0631,  0.0790, -0.2843],
        ...,
        [-0.0313, -0.0426, -0.0362,  ..., -0.0633,  0.0874, -0.1943],
        [-0.0313, -0.0426, -0.0362,  ..., -0.0633,  0.0874, -0.1943],
        [-0.0216, -0.0596, -0.0499,  ..., -0.0631,  0.0790, -0.2843]],
       device='cuda:0')
Computed C_score: tensor([0.8886, 0.4752, 0.7546,  ..., 0.8458, 0.8213, 0.4116], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4805.1494, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6141, 1])
Inertia: tensor([138.0599], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([6141, 1280])
Centroid_list: tensor([[-0.0498, -0.0538, -0.0525,  ..., -0.0461,  0.0876, -0.1751],
        [ 0.0009, -0.0439, -0.0349,  ..., -0.0631,  0.0844, -0.1929],
        [-0.0511, -0.0734, -0.0617,  ..., -0.0674,  0.0758, -0.4423],
        ...,
        [-0.0498, -0.0538, -0.0525,  ..., -0.0461,  0.0876, -0.1751],
        [ 0.0009, -0.0439, -0.0349,  ..., -0.0631,  0.0844, -0.1929],
        [ 0.0009, -0.0439, -0.0349,  ..., -0.0631,  0.0844, -0.1929]],
       device='cuda:0')
Computed C_score: tensor([0.8239, 0.4753, 0.8647,  ..., 0.8639, 0.7837, 0.3978], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4891.3921, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0001, 0.0004, 0.0008, 0.0013], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([2102, 1280])
S-Scores: tensor([0.6967, 1.8961, 3.8331, 6.5662], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([2102, 1])
Inertia: tensor([270.0023], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([2102, 1280])
Centroid_list: tensor([[-0.0269, -0.0439, -0.0814,  ..., -0.0620,  0.0861, -0.5948],
        [-0.0269, -0.0439, -0.0814,  ..., -0.0620,  0.0861, -0.5948],
        [-0.0477, -0.0683, -0.0690,  ..., -0.0600,  0.0898, -0.4304],
        ...,
        [-0.0269, -0.0439, -0.0814,  ..., -0.0620,  0.0861, -0.5948],
        [-0.0269, -0.0439, -0.0814,  ..., -0.0620,  0.0861, -0.5948],
        [-0.0477, -0.0683, -0.0690,  ..., -0.0600,  0.0898, -0.4304]],
       device='cuda:0')
Computed C_score: tensor([0.5345, 0.5209, 0.8566,  ..., 0.7187, 0.7299, 0.6528], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1459.8562, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2102, 1])
Inertia: tensor([260.7002], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([2102, 1280])
Centroid_list: tensor([[-0.0389, -0.0408, -0.0647,  ..., -0.0663,  0.1001, -0.3650],
        [-0.0389, -0.0408, -0.0647,  ..., -0.0663,  0.1001, -0.3650],
        [-0.0472, -0.0719, -0.0694,  ..., -0.0564,  0.0884, -0.4464],
        ...,
        [-0.0030, -0.0686, -0.1290,  ..., -0.0518,  0.0425, -1.2348],
        [-0.0389, -0.0408, -0.0647,  ..., -0.0663,  0.1001, -0.3650],
        [-0.0389, -0.0408, -0.0647,  ..., -0.0663,  0.1001, -0.3650]],
       device='cuda:0')
Computed C_score: tensor([0.5509, 0.5125, 0.8512,  ..., 0.7532, 0.7919, 0.5786], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1508.1404, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2102, 1])
Inertia: tensor([268.7035], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([2102, 1280])
Centroid_list: tensor([[-0.0404, -0.0277, -0.0627,  ..., -0.0628,  0.1053, -0.3288],
        [-0.0404, -0.0277, -0.0627,  ..., -0.0628,  0.1053, -0.3288],
        [-0.0502, -0.0710, -0.0674,  ..., -0.0517,  0.0899, -0.4188],
        ...,
        [-0.0026, -0.0686, -0.1289,  ..., -0.0516,  0.0423, -1.2394],
        [-0.0386, -0.0725, -0.0710,  ..., -0.0699,  0.0870, -0.4662],
        [-0.0386, -0.0725, -0.0710,  ..., -0.0699,  0.0870, -0.4662]],
       device='cuda:0')
Computed C_score: tensor([0.5358, 0.5936, 0.8273,  ..., 0.7534, 0.8407, 0.5984], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1547.7312, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2102, 1])
Inertia: tensor([276.5491], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([2102, 1280])
Centroid_list: tensor([[-0.0396, -0.0258, -0.0674,  ..., -0.0686,  0.1055, -0.4071],
        [-0.0325, -0.0368, -0.0557,  ..., -0.0550,  0.1021, -0.2464],
        [-0.0513, -0.0719, -0.0680,  ..., -0.0519,  0.0895, -0.4305],
        ...,
        [-0.0046, -0.0684, -0.1296,  ..., -0.0507,  0.0420, -1.2439],
        [-0.0439, -0.0784, -0.0735,  ..., -0.0716,  0.0850, -0.4815],
        [-0.0325, -0.0368, -0.0557,  ..., -0.0550,  0.1021, -0.2464]],
       device='cuda:0')
Computed C_score: tensor([0.5354, 0.6614, 0.8276,  ..., 0.7553, 0.8510, 0.5872], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1572.6986, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0005, 0.0013, 0.0025, 0.0042], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([2739, 1280])
S-Scores: tensor([0.6085, 1.8369, 3.8698, 6.6735], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([2739, 1])
Inertia: tensor([210.9674], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([2739, 1280])
Centroid_list: tensor([[-0.0380, -0.0725, -0.0614,  ..., -0.0593,  0.0871, -0.2387],
        [-0.0380, -0.0725, -0.0614,  ..., -0.0593,  0.0871, -0.2387],
        [-0.0199, -0.0544, -0.0712,  ..., -0.0519,  0.0709, -0.2900],
        ...,
        [-0.0380, -0.0725, -0.0614,  ..., -0.0593,  0.0871, -0.2387],
        [-0.0199, -0.0544, -0.0712,  ..., -0.0519,  0.0709, -0.2900],
        [-0.0199, -0.0544, -0.0712,  ..., -0.0519,  0.0709, -0.2900]],
       device='cuda:0')
Computed C_score: tensor([0.7117, 0.8894, 0.7086,  ..., 0.7998, 0.7879, 0.6539], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1956.1704, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2739, 1])
Inertia: tensor([222.2150], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([2739, 1280])
Centroid_list: tensor([[-0.0372, -0.0737, -0.0614,  ..., -0.0579,  0.0886, -0.2336],
        [-0.0372, -0.0737, -0.0614,  ..., -0.0579,  0.0886, -0.2336],
        [-0.0311, -0.0543, -0.0647,  ..., -0.0694,  0.0753, -0.1441],
        ...,
        [-0.0372, -0.0737, -0.0614,  ..., -0.0579,  0.0886, -0.2336],
        [-0.0059, -0.0562, -0.0795,  ..., -0.0272,  0.0653, -0.5058],
        [-0.0059, -0.0562, -0.0795,  ..., -0.0272,  0.0653, -0.5058]],
       device='cuda:0')
Computed C_score: tensor([0.7054, 0.9113, 0.8026,  ..., 0.7893, 0.8166, 0.7819], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2040.4680, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2739, 1])
Inertia: tensor([226.2438], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([2739, 1280])
Centroid_list: tensor([[-0.0374, -0.0733, -0.0611,  ..., -0.0575,  0.0890, -0.2240],
        [-0.0374, -0.0733, -0.0611,  ..., -0.0575,  0.0890, -0.2240],
        [-0.0494, -0.0763, -0.0712,  ..., -0.0670,  0.0714, -0.3207],
        ...,
        [-0.0374, -0.0733, -0.0611,  ..., -0.0575,  0.0890, -0.2240],
        [-0.0056, -0.0566, -0.0800,  ..., -0.0243,  0.0646, -0.5335],
        [-0.0056, -0.0566, -0.0800,  ..., -0.0243,  0.0646, -0.5335]],
       device='cuda:0')
Computed C_score: tensor([0.7020, 0.9154, 0.8702,  ..., 0.7857, 0.8176, 0.7882], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2090.5420, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2739, 1])
Inertia: tensor([226.2275], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([2739, 1280])
Centroid_list: tensor([[-0.0194, -0.0477, -0.0668,  ..., -0.0667,  0.0854, -0.0222],
        [-0.0390, -0.0738, -0.0613,  ..., -0.0572,  0.0889, -0.2272],
        [-0.0514, -0.0773, -0.0714,  ..., -0.0671,  0.0711, -0.3228],
        ...,
        [-0.0390, -0.0738, -0.0613,  ..., -0.0572,  0.0889, -0.2272],
        [-0.0054, -0.0567, -0.0804,  ..., -0.0236,  0.0641, -0.5435],
        [-0.0054, -0.0567, -0.0804,  ..., -0.0236,  0.0641, -0.5435]],
       device='cuda:0')
Computed C_score: tensor([0.6667, 0.9183, 0.8724,  ..., 0.7829, 0.8183, 0.7883], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2112.7744, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0003, 0.0009, 0.0018, 0.0031], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([41, 1280])
S-Scores: tensor([0.6619, 2.0883, 3.9758, 6.5030], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([41, 1])
Inertia: tensor([182.3407], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([41, 1280])
Centroid_list: tensor([[ 0.0159, -0.0549, -0.0481,  ..., -0.0671,  0.0831,  0.0958],
        [ 0.0159, -0.0549, -0.0481,  ..., -0.0671,  0.0831,  0.0958],
        [-0.0342, -0.0638, -0.0495,  ..., -0.0619,  0.0971, -0.1508],
        ...,
        [ 0.0159, -0.0549, -0.0481,  ..., -0.0671,  0.0831,  0.0958],
        [ 0.0159, -0.0549, -0.0481,  ..., -0.0671,  0.0831,  0.0958],
        [ 0.0159, -0.0549, -0.0481,  ..., -0.0671,  0.0831,  0.0958]],
       device='cuda:0')
Computed C_score: tensor([0.7383, 0.5770, 0.7706, 0.8683, 0.6916, 0.6572, 0.7397, 0.8277, 0.7840,
        0.7600, 0.6040, 0.7755, 0.8386, 0.7621, 0.7082, 0.5816, 0.6516, 0.8148,
        0.7558, 0.6890, 0.7973, 0.6201, 0.7296, 0.5979, 0.7342, 0.7920, 0.8480,
        0.8513, 0.6611, 0.6500, 0.8290, 0.7237, 0.8316, 0.6241, 0.7345, 0.7418,
        0.5979, 0.6918, 0.7208, 0.6782, 0.6354], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(29.6854, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([41, 1])
Inertia: tensor([185.9363], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([41, 1280])
Centroid_list: tensor([[ 0.0381, -0.0550, -0.0474,  ..., -0.0566,  0.0941,  0.0041],
        [ 0.0381, -0.0550, -0.0474,  ..., -0.0566,  0.0941,  0.0041],
        [-0.0387, -0.0653, -0.0520,  ..., -0.0593,  0.0989, -0.1068],
        ...,
        [-0.0336, -0.0538, -0.0469,  ..., -0.0932,  0.0578,  0.2186],
        [-0.0336, -0.0538, -0.0469,  ..., -0.0932,  0.0578,  0.2186],
        [ 0.0381, -0.0550, -0.0474,  ..., -0.0566,  0.0941,  0.0041]],
       device='cuda:0')
Computed C_score: tensor([0.7316, 0.5586, 0.7802, 0.8740, 0.6997, 0.7436, 0.7376, 0.8405, 0.7751,
        0.7305, 0.7033, 0.7654, 0.8326, 0.7636, 0.8458, 0.6459, 0.6948, 0.8407,
        0.7895, 0.6959, 0.7872, 0.6501, 0.7834, 0.5709, 0.7345, 0.7949, 0.8677,
        0.8618, 0.6943, 0.6507, 0.8684, 0.7422, 0.8442, 0.6225, 0.7740, 0.7608,
        0.6096, 0.6873, 0.7675, 0.7115, 0.6186], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(30.4508, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([41, 1])
Inertia: tensor([174.7580], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([41, 1280])
Centroid_list: tensor([[ 0.0428, -0.0613, -0.0470,  ..., -0.0605,  0.0890, -0.0299],
        [ 0.0428, -0.0613, -0.0470,  ..., -0.0605,  0.0890, -0.0299],
        [-0.0387, -0.0653, -0.0520,  ..., -0.0593,  0.0989, -0.1068],
        ...,
        [-0.0336, -0.0538, -0.0469,  ..., -0.0932,  0.0578,  0.2186],
        [-0.0336, -0.0538, -0.0469,  ..., -0.0932,  0.0578,  0.2186],
        [ 0.0428, -0.0613, -0.0470,  ..., -0.0605,  0.0890, -0.0299]],
       device='cuda:0')
Computed C_score: tensor([0.7505, 0.6009, 0.7802, 0.8740, 0.6971, 0.7436, 0.7376, 0.8405, 0.7798,
        0.7305, 0.7033, 0.7654, 0.8326, 0.7603, 0.8458, 0.6459, 0.6862, 0.8534,
        0.8948, 0.6959, 0.7553, 0.8895, 0.7834, 0.6139, 0.7596, 0.7949, 0.8592,
        0.8618, 0.8545, 0.6482, 0.8718, 0.7422, 0.8442, 0.6517, 0.7455, 0.7608,
        0.5979, 0.7111, 0.7675, 0.7115, 0.6236], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(31.0663, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([41, 1])
Inertia: tensor([171.7614], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([41, 1280])
Centroid_list: tensor([[ 0.0459, -0.0608, -0.0462,  ..., -0.0607,  0.0880,  0.1055],
        [ 0.0459, -0.0608, -0.0462,  ..., -0.0607,  0.0880,  0.1055],
        [-0.0392, -0.0644, -0.0516,  ..., -0.0549,  0.0976, -0.1253],
        ...,
        [-0.0354, -0.0556, -0.0508,  ..., -0.0946,  0.0527,  0.3896],
        [ 0.0061, -0.0600, -0.0457,  ..., -0.0743,  0.0904, -0.3660],
        [ 0.0061, -0.0600, -0.0457,  ..., -0.0743,  0.0904, -0.3660]],
       device='cuda:0')
Computed C_score: tensor([0.7557, 0.6418, 0.7736, 0.8770, 0.7753, 0.7521, 0.7324, 0.8452, 0.7778,
        0.8026, 0.7292, 0.7598, 0.8328, 0.7411, 0.8367, 0.6917, 0.6665, 0.8706,
        0.8948, 0.8122, 0.7357, 0.8895, 0.7767, 0.6526, 0.8083, 0.8037, 0.8291,
        0.8707, 0.8545, 0.7858, 0.8542, 0.7651, 0.8534, 0.7143, 0.7690, 0.7630,
        0.7210, 0.7104, 0.8089, 0.8186, 0.6664], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(32.0197, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0218, 0.0642, 0.1135, 0.1688], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([2812, 1280])
S-Scores: tensor([0.6432, 1.9925, 4.0946, 6.5150], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([2812, 1])
Inertia: tensor([191.7599], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([2812, 1280])
Centroid_list: tensor([[ 0.0026, -0.0541, -0.0578,  ..., -0.0581,  0.0744, -0.0038],
        [-0.0364, -0.0679, -0.0595,  ..., -0.0529,  0.0833, -0.2639],
        [-0.0364, -0.0679, -0.0595,  ..., -0.0529,  0.0833, -0.2639],
        ...,
        [ 0.0026, -0.0541, -0.0578,  ..., -0.0581,  0.0744, -0.0038],
        [ 0.0026, -0.0541, -0.0578,  ..., -0.0581,  0.0744, -0.0038],
        [-0.0364, -0.0679, -0.0595,  ..., -0.0529,  0.0833, -0.2639]],
       device='cuda:0')
Computed C_score: tensor([0.6919, 0.8264, 0.7539,  ..., 0.7054, 0.6879, 0.8666], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1933.3555, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2812, 1])
Inertia: tensor([186.4039], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([2812, 1280])
Centroid_list: tensor([[ 0.0162, -0.0429, -0.0538,  ..., -0.0584,  0.0758,  0.1003],
        [-0.0375, -0.0671, -0.0577,  ..., -0.0509,  0.0851, -0.2538],
        [-0.0251, -0.0737, -0.0650,  ..., -0.0575,  0.0732, -0.2175],
        ...,
        [-0.0251, -0.0737, -0.0650,  ..., -0.0575,  0.0732, -0.2175],
        [-0.0251, -0.0737, -0.0650,  ..., -0.0575,  0.0732, -0.2175],
        [-0.0375, -0.0671, -0.0577,  ..., -0.0509,  0.0851, -0.2538]],
       device='cuda:0')
Computed C_score: tensor([0.7028, 0.8208, 0.7470,  ..., 0.7141, 0.7559, 0.8942], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1999.5298, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2812, 1])
Inertia: tensor([161.6589], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([2812, 1280])
Centroid_list: tensor([[ 0.0175, -0.0445, -0.0382,  ..., -0.0304,  0.0885, -0.0621],
        [-0.0389, -0.0682, -0.0584,  ..., -0.0526,  0.0847, -0.2609],
        [-0.0307, -0.0783, -0.0684,  ..., -0.0645,  0.0702, -0.2244],
        ...,
        [ 0.0175, -0.0445, -0.0382,  ..., -0.0304,  0.0885, -0.0621],
        [-0.0307, -0.0783, -0.0684,  ..., -0.0645,  0.0702, -0.2244],
        [-0.0389, -0.0682, -0.0584,  ..., -0.0526,  0.0847, -0.2609]],
       device='cuda:0')
Computed C_score: tensor([0.7486, 0.8228, 0.7401,  ..., 0.7096, 0.7462, 0.8919], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2037.5170, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2812, 1])
Inertia: tensor([167.6851], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([2812, 1280])
Centroid_list: tensor([[ 0.0141, -0.0456, -0.0404,  ..., -0.0283,  0.0890, -0.0790],
        [-0.0564, -0.0836, -0.0750,  ..., -0.0335,  0.0810, -0.4145],
        [-0.0197, -0.0582, -0.0494,  ..., -0.0731,  0.0853, -0.1656],
        ...,
        [ 0.0141, -0.0456, -0.0404,  ..., -0.0283,  0.0890, -0.0790],
        [-0.0309, -0.0791, -0.0687,  ..., -0.0639,  0.0689, -0.2247],
        [-0.0564, -0.0836, -0.0750,  ..., -0.0335,  0.0810, -0.4145]],
       device='cuda:0')
Computed C_score: tensor([0.7374, 0.8278, 0.7522,  ..., 0.7153, 0.7523, 0.9347], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2065.0977, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0003, 0.0010, 0.0020, 0.0031], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([7209, 1280])
S-Scores: tensor([0.7304, 2.1746, 4.2922, 6.8466], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([7209, 1])
Inertia: tensor([123.5618], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([7209, 1280])
Centroid_list: tensor([[-0.0198, -0.0574, -0.0372,  ..., -0.0786,  0.0588, -0.2690],
        [-0.0198, -0.0574, -0.0372,  ..., -0.0786,  0.0588, -0.2690],
        [-0.0558, -0.0625, -0.0581,  ..., -0.0610,  0.0728, -0.2972],
        ...,
        [-0.0558, -0.0625, -0.0581,  ..., -0.0610,  0.0728, -0.2972],
        [-0.0558, -0.0625, -0.0581,  ..., -0.0610,  0.0728, -0.2972],
        [-0.0558, -0.0625, -0.0581,  ..., -0.0610,  0.0728, -0.2972]],
       device='cuda:0')
Computed C_score: tensor([0.7911, 0.7243, 0.7264,  ..., 0.7165, 0.6249, 0.7274], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(5029.2163, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([7209, 1])
Inertia: tensor([122.5319], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([7209, 1280])
Centroid_list: tensor([[-0.0151, -0.0444, -0.0244,  ..., -0.0823,  0.0507, -0.2389],
        [-0.0279, -0.0713, -0.0511,  ..., -0.0742,  0.0673, -0.3130],
        [-0.0279, -0.0713, -0.0511,  ..., -0.0742,  0.0673, -0.3130],
        ...,
        [-0.0560, -0.0608, -0.0587,  ..., -0.0596,  0.0738, -0.2767],
        [-0.0560, -0.0608, -0.0587,  ..., -0.0596,  0.0738, -0.2767],
        [-0.0560, -0.0608, -0.0587,  ..., -0.0596,  0.0738, -0.2767]],
       device='cuda:0')
Computed C_score: tensor([0.7892, 0.7916, 0.7859,  ..., 0.7091, 0.6236, 0.7309], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(5205.5308, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([7209, 1])
Inertia: tensor([108.7137], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([7209, 1280])
Centroid_list: tensor([[-0.0509, -0.0885, -0.0578,  ..., -0.0833,  0.0613, -0.4468],
        [-0.0509, -0.0885, -0.0578,  ..., -0.0833,  0.0613, -0.4468],
        [-0.0509, -0.0885, -0.0578,  ..., -0.0833,  0.0613, -0.4468],
        ...,
        [-0.0559, -0.0580, -0.0577,  ..., -0.0571,  0.0746, -0.2516],
        [-0.0559, -0.0580, -0.0577,  ..., -0.0571,  0.0746, -0.2516],
        [-0.0559, -0.0580, -0.0577,  ..., -0.0571,  0.0746, -0.2516]],
       device='cuda:0')
Computed C_score: tensor([0.8163, 0.8556, 0.8737,  ..., 0.6994, 0.6205, 0.7384], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(5316.8589, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([7209, 1])
Inertia: tensor([108.6324], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([7209, 1280])
Centroid_list: tensor([[-0.0501, -0.0901, -0.0576,  ..., -0.0837,  0.0605, -0.4551],
        [-0.0501, -0.0901, -0.0576,  ..., -0.0837,  0.0605, -0.4551],
        [-0.0501, -0.0901, -0.0576,  ..., -0.0837,  0.0605, -0.4551],
        ...,
        [-0.0641, -0.0755, -0.0654,  ..., -0.0408,  0.0724, -0.3911],
        [-0.0480, -0.0472, -0.0523,  ..., -0.0678,  0.0751, -0.1882],
        [-0.0480, -0.0472, -0.0523,  ..., -0.0678,  0.0751, -0.1882]],
       device='cuda:0')
Computed C_score: tensor([0.8168, 0.8547, 0.8764,  ..., 0.7203, 0.6323, 0.7956], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(5373.9512, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0001, 0.0004, 0.0008, 0.0013], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1292, 1280])
S-Scores: tensor([0.6408, 2.0380, 4.1178, 6.4240], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1292, 1])
Inertia: tensor([260.4464], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1292, 1280])
Centroid_list: tensor([[-0.0480, -0.0630, -0.0585,  ..., -0.0517,  0.0824, -0.3313],
        [-0.0358, -0.0398, -0.0466,  ..., -0.0471,  0.0735, -0.4431],
        [-0.0358, -0.0398, -0.0466,  ..., -0.0471,  0.0735, -0.4431],
        ...,
        [-0.0358, -0.0398, -0.0466,  ..., -0.0471,  0.0735, -0.4431],
        [-0.0358, -0.0398, -0.0466,  ..., -0.0471,  0.0735, -0.4431],
        [-0.0480, -0.0630, -0.0585,  ..., -0.0517,  0.0824, -0.3313]],
       device='cuda:0')
Computed C_score: tensor([0.6763, 0.7399, 0.6860,  ..., 0.4928, 0.6109, 0.6972], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(880.8143, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1292, 1])
Inertia: tensor([261.9484], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1292, 1280])
Centroid_list: tensor([[-0.0480, -0.0623, -0.0573,  ..., -0.0511,  0.0832, -0.3112],
        [-0.0595, -0.0677, -0.0610,  ..., -0.0579,  0.0694, -0.5769],
        [-0.0242, -0.0269, -0.0403,  ..., -0.0421,  0.0757, -0.3784],
        ...,
        [-0.0242, -0.0269, -0.0403,  ..., -0.0421,  0.0757, -0.3784],
        [-0.0242, -0.0269, -0.0403,  ..., -0.0421,  0.0757, -0.3784],
        [-0.0480, -0.0623, -0.0573,  ..., -0.0511,  0.0832, -0.3112]],
       device='cuda:0')
Computed C_score: tensor([0.6778, 0.8131, 0.7270,  ..., 0.5090, 0.6412, 0.7106], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(912.2132, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1292, 1])
Inertia: tensor([265.6526], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1292, 1280])
Centroid_list: tensor([[-0.0484, -0.0631, -0.0575,  ..., -0.0508,  0.0832, -0.3064],
        [-0.0620, -0.0703, -0.0618,  ..., -0.0598,  0.0681, -0.5747],
        [-0.0120, -0.0330, -0.0360,  ..., -0.0501,  0.0714, -0.2680],
        ...,
        [-0.0120, -0.0330, -0.0360,  ..., -0.0501,  0.0714, -0.2680],
        [-0.0395, -0.0237, -0.0469,  ..., -0.0346,  0.0806, -0.5220],
        [-0.0484, -0.0631, -0.0575,  ..., -0.0508,  0.0832, -0.3064]],
       device='cuda:0')
Computed C_score: tensor([0.6744, 0.8056, 0.6979,  ..., 0.5664, 0.7020, 0.7109], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(930.2919, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1292, 1])
Inertia: tensor([194.8887], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1292, 1280])
Centroid_list: tensor([[-0.0328, -0.0477, -0.0456,  ..., -0.0629,  0.0832, -0.2542],
        [-0.0616, -0.0703, -0.0615,  ..., -0.0593,  0.0677, -0.5777],
        [-0.0385, -0.0235, -0.0466,  ..., -0.0357,  0.0801, -0.5114],
        ...,
        [-0.0121, -0.0324, -0.0354,  ..., -0.0460,  0.0699, -0.2508],
        [-0.0385, -0.0235, -0.0466,  ..., -0.0357,  0.0801, -0.5114],
        [-0.0328, -0.0477, -0.0456,  ..., -0.0629,  0.0832, -0.2542]],
       device='cuda:0')
Computed C_score: tensor([0.7610, 0.8041, 0.7033,  ..., 0.5721, 0.7025, 0.6729], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(942.7857, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0007, 0.0022, 0.0044, 0.0068], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([98, 1280])
S-Scores: tensor([0.6950, 2.1312, 4.3856, 7.1157], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([98, 1])
Inertia: tensor([213.9961], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([98, 1280])
Centroid_list: tensor([[-0.0119, -0.0661, -0.0577,  ..., -0.0523,  0.0852, -0.6024],
        [-0.0119, -0.0661, -0.0577,  ..., -0.0523,  0.0852, -0.6024],
        [-0.0044, -0.0345, -0.0686,  ..., -0.0433,  0.0982, -0.1865],
        ...,
        [-0.0119, -0.0661, -0.0577,  ..., -0.0523,  0.0852, -0.6024],
        [-0.0044, -0.0345, -0.0686,  ..., -0.0433,  0.0982, -0.1865],
        [-0.0119, -0.0661, -0.0577,  ..., -0.0523,  0.0852, -0.6024]],
       device='cuda:0')
Computed C_score: tensor([0.7583, 0.7046, 0.7504, 0.7192, 0.5916, 0.6887, 0.4757, 0.7145, 0.6109,
        0.7544, 0.8105, 0.7877, 0.7227, 0.7460, 0.6616, 0.7006, 0.5736, 0.6324,
        0.6108, 0.7000, 0.7376, 0.7899, 0.7185, 0.7030, 0.6964, 0.6540, 0.8550,
        0.7094, 0.7723, 0.6841, 0.8024, 0.7036, 0.6610, 0.7501, 0.8251, 0.7524,
        0.5421, 0.6443, 0.6281, 0.8554, 0.7333, 0.6485, 0.7789, 0.6006, 0.6232,
        0.7299, 0.7647, 0.8570, 0.8250, 0.7451, 0.7395, 0.8440, 0.7795, 0.6541,
        0.6450, 0.6765, 0.7475, 0.7187, 0.7353, 0.5754, 0.7601, 0.7167, 0.7271,
        0.8734, 0.8905, 0.6654, 0.6927, 0.6678, 0.7299, 0.6599, 0.8704, 0.7355,
        0.8258, 0.6676, 0.9093, 0.7235, 0.6595, 0.8864, 0.6775, 0.5775, 0.7247,
        0.8623, 0.6659, 0.6405, 0.7243, 0.7038, 0.7156, 0.6910, 0.6925, 0.5704,
        0.7740, 0.6373, 0.7728, 0.7779, 0.8689, 0.7118, 0.6200, 0.7117],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(70.4023, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([98, 1])
Inertia: tensor([218.9643], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([98, 1280])
Centroid_list: tensor([[-0.0111, -0.0640, -0.0509,  ..., -0.0467,  0.0879, -0.6448],
        [ 0.0030, -0.0375, -0.0745,  ..., -0.0440,  0.0964, -0.0640],
        [ 0.0030, -0.0375, -0.0745,  ..., -0.0440,  0.0964, -0.0640],
        ...,
        [-0.0111, -0.0640, -0.0509,  ..., -0.0467,  0.0879, -0.6448],
        [-0.0095, -0.0384, -0.0671,  ..., -0.0467,  0.0961, -0.2873],
        [-0.0111, -0.0640, -0.0509,  ..., -0.0467,  0.0879, -0.6448]],
       device='cuda:0')
Computed C_score: tensor([0.7526, 0.7217, 0.7846, 0.7702, 0.6197, 0.6744, 0.5041, 0.7256, 0.5910,
        0.7514, 0.8093, 0.7741, 0.7222, 0.7948, 0.6959, 0.7418, 0.6190, 0.6421,
        0.6648, 0.7222, 0.7481, 0.7739, 0.7423, 0.7873, 0.7030, 0.6369, 0.8832,
        0.7064, 0.7617, 0.6709, 0.7778, 0.7262, 0.6482, 0.7514, 0.8338, 0.8340,
        0.5355, 0.7137, 0.6283, 0.8585, 0.7625, 0.6401, 0.7820, 0.6580, 0.6155,
        0.7427, 0.7621, 0.8837, 0.8312, 0.8310, 0.7372, 0.8681, 0.7734, 0.6540,
        0.6426, 0.6590, 0.7520, 0.7319, 0.7274, 0.5700, 0.8100, 0.7223, 0.7255,
        0.8569, 0.9020, 0.6605, 0.6393, 0.6678, 0.7322, 0.7077, 0.8987, 0.7575,
        0.8047, 0.6671, 0.9254, 0.7219, 0.6675, 0.8912, 0.7423, 0.6307, 0.7371,
        0.8830, 0.7378, 0.7288, 0.7889, 0.7234, 0.6643, 0.7394, 0.7213, 0.5687,
        0.7643, 0.6407, 0.7346, 0.8339, 0.8839, 0.7142, 0.6468, 0.6875],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(71.7565, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([98, 1])
Inertia: tensor([229.2678], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([98, 1280])
Centroid_list: tensor([[-0.0116, -0.0634, -0.0508,  ..., -0.0423,  0.0899, -0.6018],
        [ 0.0049, -0.0384, -0.0779,  ..., -0.0377,  0.1005, -0.0560],
        [ 0.0049, -0.0384, -0.0779,  ..., -0.0377,  0.1005, -0.0560],
        ...,
        [-0.0116, -0.0634, -0.0508,  ..., -0.0423,  0.0899, -0.6018],
        [-0.0108, -0.0420, -0.0690,  ..., -0.0501,  0.0932, -0.2920],
        [-0.0108, -0.0420, -0.0690,  ..., -0.0501,  0.0932, -0.2920]],
       device='cuda:0')
Computed C_score: tensor([0.7409, 0.7098, 0.7700, 0.8275, 0.6229, 0.7020, 0.5154, 0.7227, 0.6188,
        0.7346, 0.8379, 0.7769, 0.7245, 0.8059, 0.8045, 0.7527, 0.6613, 0.6432,
        0.7128, 0.7289, 0.7554, 0.7344, 0.7453, 0.7847, 0.7967, 0.6207, 0.8887,
        0.7054, 0.7629, 0.6879, 0.7644, 0.7145, 0.6578, 0.7491, 0.8223, 0.8528,
        0.5294, 0.7259, 0.6344, 0.8631, 0.7507, 0.6389, 0.7876, 0.6647, 0.6176,
        0.7533, 0.7564, 0.8960, 0.8330, 0.8414, 0.7714, 0.8785, 0.8341, 0.6614,
        0.6356, 0.7803, 0.7391, 0.7318, 0.7235, 0.5816, 0.7924, 0.7209, 0.7160,
        0.8422, 0.9004, 0.6528, 0.6460, 0.6797, 0.7339, 0.7397, 0.9023, 0.7567,
        0.7839, 0.6825, 0.9259, 0.7244, 0.7578, 0.8946, 0.7404, 0.6301, 0.7308,
        0.8923, 0.7068, 0.7016, 0.7957, 0.7338, 0.6835, 0.7551, 0.7109, 0.5711,
        0.7583, 0.6454, 0.7352, 0.8385, 0.8959, 0.7210, 0.6370, 0.6477],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(72.4694, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([98, 1])
Inertia: tensor([238.9930], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([98, 1280])
Centroid_list: tensor([[-0.0069, -0.0625, -0.0460,  ..., -0.0430,  0.0933, -0.6107],
        [-0.0237, -0.0646, -0.0715,  ..., -0.0584,  0.0883, -0.4666],
        [ 0.0079, -0.0302, -0.0788,  ..., -0.0314,  0.1059, -0.0831],
        ...,
        [-0.0069, -0.0625, -0.0460,  ..., -0.0430,  0.0933, -0.6107],
        [ 0.0014, -0.0267, -0.0693,  ..., -0.0447,  0.0935, -0.1154],
        [-0.0237, -0.0646, -0.0715,  ..., -0.0584,  0.0883, -0.4666]],
       device='cuda:0')
Computed C_score: tensor([0.7313, 0.7592, 0.7479, 0.8501, 0.6797, 0.7270, 0.5918, 0.7135, 0.6341,
        0.7551, 0.8381, 0.8141, 0.7356, 0.8405, 0.7853, 0.8002, 0.7232, 0.6943,
        0.7635, 0.7516, 0.7534, 0.7688, 0.7512, 0.7584, 0.7813, 0.6515, 0.8889,
        0.6968, 0.7726, 0.7027, 0.7458, 0.7159, 0.6487, 0.8143, 0.8205, 0.8783,
        0.5519, 0.8087, 0.6256, 0.8745, 0.7257, 0.6847, 0.7646, 0.7294, 0.6462,
        0.7726, 0.7871, 0.9005, 0.8429, 0.8626, 0.7808, 0.8753, 0.8398, 0.6510,
        0.6459, 0.7875, 0.7822, 0.7026, 0.7630, 0.6408, 0.7772, 0.7386, 0.7837,
        0.8394, 0.8992, 0.6594, 0.6646, 0.6949, 0.7696, 0.7376, 0.9008, 0.8067,
        0.8169, 0.6972, 0.9326, 0.7047, 0.7575, 0.9031, 0.7638, 0.6544, 0.7704,
        0.8870, 0.7651, 0.7126, 0.7778, 0.6935, 0.8033, 0.8085, 0.7762, 0.5520,
        0.7661, 0.6944, 0.7293, 0.8453, 0.8927, 0.7169, 0.6752, 0.7567],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(74.2559, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0098, 0.0288, 0.0571, 0.0874], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([4006, 1280])
S-Scores: tensor([0.6698, 2.0064, 4.0465, 6.3901], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([4006, 1])
Inertia: tensor([201.1523], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([4006, 1280])
Centroid_list: tensor([[-0.0164, -0.0503, -0.0735,  ..., -0.0577,  0.0546, -0.4710],
        [-0.0164, -0.0503, -0.0735,  ..., -0.0577,  0.0546, -0.4710],
        [-0.0164, -0.0503, -0.0735,  ..., -0.0577,  0.0546, -0.4710],
        ...,
        [-0.0164, -0.0503, -0.0735,  ..., -0.0577,  0.0546, -0.4710],
        [-0.0509, -0.0691, -0.0707,  ..., -0.0600,  0.0747, -0.3296],
        [-0.0164, -0.0503, -0.0735,  ..., -0.0577,  0.0546, -0.4710]],
       device='cuda:0')
Computed C_score: tensor([0.6272, 0.5075, 0.5781,  ..., 0.7103, 0.8357, 0.4946], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2806.8145, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4006, 1])
Inertia: tensor([171.6274], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([4006, 1280])
Centroid_list: tensor([[-0.0348, -0.0648, -0.0668,  ..., -0.0637,  0.0647, -0.4291],
        [-0.0348, -0.0648, -0.0668,  ..., -0.0637,  0.0647, -0.4291],
        [-0.0061, -0.0415, -0.0796,  ..., -0.0547,  0.0480, -0.5006],
        ...,
        [-0.0061, -0.0415, -0.0796,  ..., -0.0547,  0.0480, -0.5006],
        [-0.0348, -0.0648, -0.0668,  ..., -0.0637,  0.0647, -0.4291],
        [-0.0348, -0.0648, -0.0668,  ..., -0.0637,  0.0647, -0.4291]],
       device='cuda:0')
Computed C_score: tensor([0.6914, 0.5117, 0.5691,  ..., 0.7867, 0.8815, 0.5379], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2903.0190, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4006, 1])
Inertia: tensor([183.2444], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([4006, 1280])
Centroid_list: tensor([[-0.0498, -0.0785, -0.0778,  ..., -0.0686,  0.0584, -0.5026],
        [-0.0109, -0.0481, -0.0557,  ..., -0.0565,  0.0624, -0.4017],
        [-0.0109, -0.0481, -0.0557,  ..., -0.0565,  0.0624, -0.4017],
        ...,
        [-0.0061, -0.0375, -0.0848,  ..., -0.0537,  0.0495, -0.4866],
        [-0.0498, -0.0785, -0.0778,  ..., -0.0686,  0.0584, -0.5026],
        [-0.0109, -0.0481, -0.0557,  ..., -0.0565,  0.0624, -0.4017]],
       device='cuda:0')
Computed C_score: tensor([0.6780, 0.5555, 0.6018,  ..., 0.8050, 0.9221, 0.5357], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2973.8276, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4006, 1])
Inertia: tensor([184.4673], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([4006, 1280])
Centroid_list: tensor([[-0.0507, -0.0796, -0.0782,  ..., -0.0683,  0.0565, -0.5200],
        [-0.0109, -0.0483, -0.0556,  ..., -0.0562,  0.0628, -0.3971],
        [-0.0109, -0.0483, -0.0556,  ..., -0.0562,  0.0628, -0.3971],
        ...,
        [-0.0064, -0.0373, -0.0858,  ..., -0.0525,  0.0483, -0.5056],
        [-0.0507, -0.0796, -0.0782,  ..., -0.0683,  0.0565, -0.5200],
        [-0.0109, -0.0483, -0.0556,  ..., -0.0562,  0.0628, -0.3971]],
       device='cuda:0')
Computed C_score: tensor([0.6775, 0.5553, 0.6022,  ..., 0.8081, 0.9200, 0.5324], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3008.8633, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0002, 0.0007, 0.0014, 0.0021], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1441, 1280])
S-Scores: tensor([0.6972, 2.0005, 4.0585, 6.6056], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1441, 1])
Inertia: tensor([265.2250], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1441, 1280])
Centroid_list: tensor([[-0.0526, -0.0665, -0.0735,  ..., -0.0551,  0.0840, -0.4025],
        [-0.0287, -0.0455, -0.0690,  ..., -0.0531,  0.0833, -0.3013],
        [-0.0287, -0.0455, -0.0690,  ..., -0.0531,  0.0833, -0.3013],
        ...,
        [-0.0526, -0.0665, -0.0735,  ..., -0.0551,  0.0840, -0.4025],
        [-0.0526, -0.0665, -0.0735,  ..., -0.0551,  0.0840, -0.4025],
        [-0.0287, -0.0455, -0.0690,  ..., -0.0531,  0.0833, -0.3013]],
       device='cuda:0')
Computed C_score: tensor([0.6044, 0.4273, 0.8026,  ..., 0.7485, 0.8772, 0.5605], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1020.5516, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1441, 1])
Inertia: tensor([236.8755], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1441, 1280])
Centroid_list: tensor([[-0.0417, -0.0492, -0.0778,  ..., -0.0579,  0.0846, -0.2641],
        [-0.0417, -0.0492, -0.0778,  ..., -0.0579,  0.0846, -0.2641],
        [-0.0144, -0.0459, -0.0542,  ..., -0.0471,  0.0804, -0.4011],
        ...,
        [-0.0417, -0.0492, -0.0778,  ..., -0.0579,  0.0846, -0.2641],
        [-0.0533, -0.0698, -0.0739,  ..., -0.0517,  0.0854, -0.4286],
        [-0.0417, -0.0492, -0.0778,  ..., -0.0579,  0.0846, -0.2641]],
       device='cuda:0')
Computed C_score: tensor([0.6262, 0.4291, 0.8479,  ..., 0.7683, 0.8994, 0.5507], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1049.3969, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1441, 1])
Inertia: tensor([234.5218], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1441, 1280])
Centroid_list: tensor([[-0.0320, -0.0325, -0.0794,  ..., -0.0585,  0.0887, -0.1445],
        [-0.0320, -0.0325, -0.0794,  ..., -0.0585,  0.0887, -0.1445],
        [-0.0136, -0.0492, -0.0510,  ..., -0.0448,  0.0807, -0.4191],
        ...,
        [-0.0495, -0.0655, -0.0754,  ..., -0.0586,  0.0794, -0.4138],
        [-0.0578, -0.0730, -0.0743,  ..., -0.0471,  0.0867, -0.4323],
        [-0.0320, -0.0325, -0.0794,  ..., -0.0585,  0.0887, -0.1445]],
       device='cuda:0')
Computed C_score: tensor([0.6314, 0.4586, 0.8494,  ..., 0.7422, 0.9034, 0.6450], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1072.7910, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1441, 1])
Inertia: tensor([237.1571], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1441, 1280])
Centroid_list: tensor([[-0.0412, -0.0525, -0.0690,  ..., -0.0625,  0.0857, -0.3585],
        [-0.0294, -0.0321, -0.0795,  ..., -0.0562,  0.0883, -0.1580],
        [-0.0122, -0.0489, -0.0500,  ..., -0.0454,  0.0812, -0.4212],
        ...,
        [-0.0412, -0.0525, -0.0690,  ..., -0.0625,  0.0857, -0.3585],
        [-0.0656, -0.0860, -0.0817,  ..., -0.0330,  0.0861, -0.5497],
        [-0.0294, -0.0321, -0.0795,  ..., -0.0562,  0.0883, -0.1580]],
       device='cuda:0')
Computed C_score: tensor([0.6402, 0.4564, 0.8488,  ..., 0.7500, 0.8994, 0.6353], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1087.9648, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0007, 0.0019, 0.0038, 0.0060], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1686, 1280])
S-Scores: tensor([0.6072, 1.7663, 3.7419, 6.2145], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1686, 1])
Inertia: tensor([282.6550], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1686, 1280])
Centroid_list: tensor([[-0.0440, -0.0558, -0.0719,  ..., -0.0491,  0.0627, -0.1569],
        [-0.0440, -0.0558, -0.0719,  ..., -0.0491,  0.0627, -0.1569],
        [-0.0433, -0.0747, -0.0638,  ..., -0.0660,  0.0850, -0.2542],
        ...,
        [-0.0440, -0.0558, -0.0719,  ..., -0.0491,  0.0627, -0.1569],
        [-0.0440, -0.0558, -0.0719,  ..., -0.0491,  0.0627, -0.1569],
        [-0.0440, -0.0558, -0.0719,  ..., -0.0491,  0.0627, -0.1569]],
       device='cuda:0')
Computed C_score: tensor([0.6635, 0.8094, 0.7798,  ..., 0.6653, 0.7247, 0.6704], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1215.2400, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1686, 1])
Inertia: tensor([256.3856], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1686, 1280])
Centroid_list: tensor([[-0.0417, -0.0544, -0.0744,  ..., -0.0414,  0.0601, -0.1633],
        [-0.0417, -0.0544, -0.0744,  ..., -0.0414,  0.0601, -0.1633],
        [-0.0423, -0.0648, -0.0607,  ..., -0.0735,  0.0775, -0.1705],
        ...,
        [-0.0417, -0.0544, -0.0744,  ..., -0.0414,  0.0601, -0.1633],
        [-0.0417, -0.0544, -0.0744,  ..., -0.0414,  0.0601, -0.1633],
        [-0.0417, -0.0544, -0.0744,  ..., -0.0414,  0.0601, -0.1633]],
       device='cuda:0')
Computed C_score: tensor([0.7032, 0.8046, 0.7325,  ..., 0.6314, 0.7644, 0.6874], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1242.8073, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1686, 1])
Inertia: tensor([152.8704], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1686, 1280])
Centroid_list: tensor([[-0.0710, -0.0401, -0.0683,  ..., -0.0171,  0.0675,  0.3516],
        [-0.0343, -0.0590, -0.0780,  ..., -0.0428,  0.0571, -0.3243],
        [-0.0453, -0.0786, -0.0649,  ..., -0.0605,  0.0896, -0.2352],
        ...,
        [-0.0443, -0.0605, -0.0650,  ..., -0.0693,  0.0703, -0.1767],
        [-0.0343, -0.0590, -0.0780,  ..., -0.0428,  0.0571, -0.3243],
        [-0.0710, -0.0401, -0.0683,  ..., -0.0171,  0.0675,  0.3516]],
       device='cuda:0')
Computed C_score: tensor([0.8349, 0.7896, 0.7559,  ..., 0.6801, 0.7518, 0.9118], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1273.0215, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1686, 1])
Inertia: tensor([236.8213], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1686, 1280])
Centroid_list: tensor([[-0.0408, -0.0544, -0.0780,  ..., -0.0333,  0.0588, -0.1748],
        [-0.0322, -0.0415, -0.0602,  ..., -0.0685,  0.0695,  0.0255],
        [-0.0260, -0.0673, -0.0531,  ..., -0.0766,  0.0893, -0.1356],
        ...,
        [-0.0322, -0.0415, -0.0602,  ..., -0.0685,  0.0695,  0.0255],
        [-0.0408, -0.0544, -0.0780,  ..., -0.0333,  0.0588, -0.1748],
        [-0.0408, -0.0544, -0.0780,  ..., -0.0333,  0.0588, -0.1748]],
       device='cuda:0')
Computed C_score: tensor([0.7299, 0.7885, 0.7299,  ..., 0.7598, 0.7850, 0.6983], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1294.0388, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0005, 0.0014, 0.0029, 0.0048], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1182, 1280])
S-Scores: tensor([0.7114, 2.0572, 4.1487, 6.9797], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1182, 1])
Inertia: tensor([251.9787], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1182, 1280])
Centroid_list: tensor([[ 0.0153, -0.0625, -0.0404,  ..., -0.0853,  0.0802,  0.0415],
        [ 0.0153, -0.0625, -0.0404,  ..., -0.0853,  0.0802,  0.0415],
        [-0.0264, -0.0807, -0.0543,  ..., -0.0753,  0.0799, -0.2704],
        ...,
        [ 0.0153, -0.0625, -0.0404,  ..., -0.0853,  0.0802,  0.0415],
        [ 0.0153, -0.0625, -0.0404,  ..., -0.0853,  0.0802,  0.0415],
        [ 0.0153, -0.0625, -0.0404,  ..., -0.0853,  0.0802,  0.0415]],
       device='cuda:0')
Computed C_score: tensor([0.6414, 0.6799, 0.7538,  ..., 0.5900, 0.4325, 0.5525], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(835.8670, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1182, 1])
Inertia: tensor([237.0947], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1182, 1280])
Centroid_list: tensor([[ 0.0237, -0.0566, -0.0375,  ..., -0.0855,  0.0810,  0.1101],
        [ 0.0237, -0.0566, -0.0375,  ..., -0.0855,  0.0810,  0.1101],
        [-0.0258, -0.0853, -0.0520,  ..., -0.0814,  0.0750, -0.2837],
        ...,
        [ 0.0237, -0.0566, -0.0375,  ..., -0.0855,  0.0810,  0.1101],
        [ 0.0237, -0.0566, -0.0375,  ..., -0.0855,  0.0810,  0.1101],
        [ 0.0237, -0.0566, -0.0375,  ..., -0.0855,  0.0810,  0.1101]],
       device='cuda:0')
Computed C_score: tensor([0.6680, 0.6986, 0.8647,  ..., 0.5930, 0.4343, 0.5385], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(865.7590, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1182, 1])
Inertia: tensor([231.7702], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1182, 1280])
Centroid_list: tensor([[ 0.0019, -0.0555, -0.0507,  ..., -0.0896,  0.0848,  0.2576],
        [ 0.0019, -0.0555, -0.0507,  ..., -0.0896,  0.0848,  0.2576],
        [-0.0288, -0.0875, -0.0535,  ..., -0.0828,  0.0740, -0.2901],
        ...,
        [ 0.0019, -0.0555, -0.0507,  ..., -0.0896,  0.0848,  0.2576],
        [ 0.0019, -0.0555, -0.0507,  ..., -0.0896,  0.0848,  0.2576],
        [ 0.0502, -0.0590, -0.0199,  ..., -0.0770,  0.0764, -0.1132]],
       device='cuda:0')
Computed C_score: tensor([0.6777, 0.7408, 0.8719,  ..., 0.6275, 0.4617, 0.5618], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(881.3118, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1182, 1])
Inertia: tensor([238.2213], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1182, 1280])
Centroid_list: tensor([[ 0.0240, -0.0593, -0.0369,  ..., -0.0934,  0.0773,  0.3408],
        [-0.0262, -0.0534, -0.0664,  ..., -0.0859,  0.0933,  0.0599],
        [-0.0287, -0.0878, -0.0534,  ..., -0.0824,  0.0736, -0.2918],
        ...,
        [-0.0262, -0.0534, -0.0664,  ..., -0.0859,  0.0933,  0.0599],
        [ 0.0240, -0.0593, -0.0369,  ..., -0.0934,  0.0773,  0.3408],
        [-0.0262, -0.0534, -0.0664,  ..., -0.0859,  0.0933,  0.0599]],
       device='cuda:0')
Computed C_score: tensor([0.6661, 0.7828, 0.8727,  ..., 0.6037, 0.4565, 0.5581], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(888.8141, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0009, 0.0024, 0.0047, 0.0078], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([4006, 1280])
S-Scores: tensor([0.6698, 2.0064, 4.0465, 6.3901], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([4006, 1])
Inertia: tensor([201.1523], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([4006, 1280])
Centroid_list: tensor([[-0.0164, -0.0503, -0.0735,  ..., -0.0577,  0.0546, -0.4710],
        [-0.0164, -0.0503, -0.0735,  ..., -0.0577,  0.0546, -0.4710],
        [-0.0164, -0.0503, -0.0735,  ..., -0.0577,  0.0546, -0.4710],
        ...,
        [-0.0164, -0.0503, -0.0735,  ..., -0.0577,  0.0546, -0.4710],
        [-0.0509, -0.0691, -0.0707,  ..., -0.0600,  0.0747, -0.3296],
        [-0.0164, -0.0503, -0.0735,  ..., -0.0577,  0.0546, -0.4710]],
       device='cuda:0')
Computed C_score: tensor([0.6272, 0.5075, 0.5781,  ..., 0.7103, 0.8357, 0.5248], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2806.8447, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4006, 1])
Inertia: tensor([171.6274], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([4006, 1280])
Centroid_list: tensor([[-0.0348, -0.0648, -0.0668,  ..., -0.0637,  0.0647, -0.4291],
        [-0.0348, -0.0648, -0.0668,  ..., -0.0637,  0.0647, -0.4291],
        [-0.0061, -0.0415, -0.0796,  ..., -0.0547,  0.0480, -0.5006],
        ...,
        [-0.0061, -0.0415, -0.0796,  ..., -0.0547,  0.0480, -0.5006],
        [-0.0348, -0.0648, -0.0668,  ..., -0.0637,  0.0647, -0.4291],
        [-0.0348, -0.0648, -0.0668,  ..., -0.0637,  0.0647, -0.4291]],
       device='cuda:0')
Computed C_score: tensor([0.6914, 0.5117, 0.5691,  ..., 0.7867, 0.8815, 0.6099], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2903.0911, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4006, 1])
Inertia: tensor([183.2444], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([4006, 1280])
Centroid_list: tensor([[-0.0498, -0.0785, -0.0778,  ..., -0.0686,  0.0584, -0.5026],
        [-0.0109, -0.0481, -0.0557,  ..., -0.0565,  0.0624, -0.4017],
        [-0.0109, -0.0481, -0.0557,  ..., -0.0565,  0.0624, -0.4017],
        ...,
        [-0.0061, -0.0375, -0.0848,  ..., -0.0537,  0.0495, -0.4866],
        [-0.0498, -0.0785, -0.0778,  ..., -0.0686,  0.0584, -0.5026],
        [-0.0498, -0.0785, -0.0778,  ..., -0.0686,  0.0584, -0.5026]],
       device='cuda:0')
Computed C_score: tensor([0.6780, 0.5555, 0.6018,  ..., 0.8050, 0.9221, 0.5723], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2973.8643, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4006, 1])
Inertia: tensor([184.4673], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([4006, 1280])
Centroid_list: tensor([[-0.0507, -0.0796, -0.0782,  ..., -0.0683,  0.0565, -0.5200],
        [-0.0109, -0.0483, -0.0556,  ..., -0.0562,  0.0628, -0.3971],
        [-0.0109, -0.0483, -0.0556,  ..., -0.0562,  0.0628, -0.3971],
        ...,
        [-0.0064, -0.0373, -0.0858,  ..., -0.0525,  0.0483, -0.5056],
        [-0.0507, -0.0796, -0.0782,  ..., -0.0683,  0.0565, -0.5200],
        [-0.0387, -0.0565, -0.0628,  ..., -0.0695,  0.0800, -0.1932]],
       device='cuda:0')
Computed C_score: tensor([0.6775, 0.5553, 0.6022,  ..., 0.8081, 0.9200, 0.5978], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3008.9287, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0002, 0.0007, 0.0014, 0.0021], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([188, 1280])
S-Scores: tensor([0.6129, 1.9076, 3.8336, 6.2900], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([188, 1])
Inertia: tensor([256.6469], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([188, 1280])
Centroid_list: tensor([[-0.0209, -0.0524, -0.0367,  ..., -0.0735,  0.0824, -0.3856],
        [-0.0209, -0.0524, -0.0367,  ..., -0.0735,  0.0824, -0.3856],
        [-0.0209, -0.0524, -0.0367,  ..., -0.0735,  0.0824, -0.3856],
        ...,
        [-0.0209, -0.0524, -0.0367,  ..., -0.0735,  0.0824, -0.3856],
        [-0.0499, -0.0670, -0.0566,  ..., -0.0518,  0.0804, -0.4675],
        [-0.0499, -0.0670, -0.0566,  ..., -0.0518,  0.0804, -0.4675]],
       device='cuda:0')
Computed C_score: tensor([0.5818, 0.5895, 0.7682, 0.5774, 0.5844, 0.7160, 0.6609, 0.5396, 0.7789,
        0.8862, 0.7240, 0.6576, 0.7014, 0.7034, 0.5962, 0.6426, 0.6422, 0.6540,
        0.8559, 0.7238, 0.5696, 0.5972, 0.5823, 0.7406, 0.5528, 0.8584, 0.6628,
        0.8124, 0.6595, 0.5961, 0.6531, 0.7185, 0.8427, 0.7515, 0.8137, 0.6916,
        0.6227, 0.9165, 0.6756, 0.5614, 0.6221, 0.6281, 0.7159, 0.4746, 0.6780,
        0.6970, 0.6433, 0.4543, 0.6393, 0.7928, 0.6791, 0.6398, 0.6455, 0.5709,
        0.9033, 0.7638, 0.5691, 0.7051, 0.4546, 0.4910, 0.7359, 0.7093, 0.8889,
        0.6990, 0.5662, 0.7243, 0.6810, 0.6377, 0.5691, 0.6503, 0.8501, 0.4971,
        0.7394, 0.6319, 0.8775, 0.6395, 0.6807, 0.7534, 0.6765, 0.7701, 0.8012,
        0.7178, 0.6384, 0.7858, 0.5785, 0.6785, 0.7597, 0.8314, 0.5944, 0.6954,
        0.6469, 0.6774, 0.7077, 0.7265, 0.6655, 0.7001, 0.7831, 0.6960, 0.8834,
        0.6536, 0.8016, 0.7179, 0.6520, 0.6531, 0.6315, 0.9052, 0.6213, 0.7269,
        0.5502, 0.4940, 0.7123, 0.8441, 0.5325, 0.8985, 0.6414, 0.8085, 0.8690,
        0.8145, 0.7123, 0.8698, 0.6201, 0.7002, 0.7112, 0.6957, 0.6966, 0.5479,
        0.5480, 0.7195, 0.7250, 0.6319, 0.7321, 0.7361, 0.7266, 0.5485, 0.5844,
        0.7622, 0.6450, 0.7711, 0.6983, 0.6455, 0.6282, 0.7269, 0.6168, 0.8657,
        0.7611, 0.9069, 0.7163, 0.7220, 0.6812, 0.6957, 0.6359, 0.7532, 0.6831,
        0.5591, 0.6617, 0.7303, 0.6233, 0.7960, 0.8078, 0.7358, 0.5439, 0.6812,
        0.6889, 0.7253, 0.6237, 0.7201, 0.7052, 0.6543, 0.4664, 0.7326, 0.5881,
        0.8928, 0.5002, 0.9121, 0.7144, 0.9313, 0.7584, 0.6203, 0.7729, 0.7112,
        0.7254, 0.6412, 0.7062, 0.5525, 0.6171, 0.3849, 0.7819, 0.5794],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(129.5704, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([188, 1])
Inertia: tensor([269.0706], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([188, 1280])
Centroid_list: tensor([[-0.0323, -0.0577, -0.0425,  ..., -0.0848,  0.0806, -0.4462],
        [-0.0016, -0.0429, -0.0265,  ..., -0.0530,  0.0846, -0.2807],
        [-0.0323, -0.0577, -0.0425,  ..., -0.0848,  0.0806, -0.4462],
        ...,
        [-0.0016, -0.0429, -0.0265,  ..., -0.0530,  0.0846, -0.2807],
        [-0.0472, -0.0662, -0.0555,  ..., -0.0526,  0.0816, -0.4582],
        [-0.0472, -0.0662, -0.0555,  ..., -0.0526,  0.0816, -0.4582]],
       device='cuda:0')
Computed C_score: tensor([0.5631, 0.6833, 0.8030, 0.5917, 0.7145, 0.7234, 0.7175, 0.5823, 0.7842,
        0.8796, 0.7270, 0.6618, 0.7209, 0.6916, 0.7389, 0.6646, 0.6232, 0.7631,
        0.8959, 0.7239, 0.5552, 0.7534, 0.6100, 0.7723, 0.5602, 0.8544, 0.6623,
        0.8603, 0.8078, 0.5793, 0.6589, 0.7575, 0.8434, 0.7567, 0.8152, 0.7419,
        0.6302, 0.9109, 0.6813, 0.5887, 0.6563, 0.7244, 0.7715, 0.5967, 0.6778,
        0.7111, 0.6494, 0.4510, 0.7012, 0.7955, 0.7119, 0.6887, 0.6623, 0.6153,
        0.9014, 0.8211, 0.5892, 0.7025, 0.4552, 0.5021, 0.7587, 0.6842, 0.8875,
        0.7390, 0.5714, 0.7626, 0.6873, 0.6396, 0.7236, 0.6486, 0.8506, 0.6325,
        0.7805, 0.7469, 0.8719, 0.6456, 0.7041, 0.8169, 0.6563, 0.7710, 0.8249,
        0.7509, 0.7251, 0.7936, 0.5996, 0.6814, 0.7605, 0.8266, 0.5939, 0.7099,
        0.6989, 0.6939, 0.6851, 0.7792, 0.7295, 0.7182, 0.8404, 0.6961, 0.8825,
        0.6621, 0.8748, 0.7198, 0.6284, 0.6899, 0.7289, 0.8994, 0.6977, 0.7139,
        0.6434, 0.5284, 0.7048, 0.8429, 0.5906, 0.8937, 0.6465, 0.8038, 0.8643,
        0.8105, 0.7143, 0.8675, 0.6861, 0.7716, 0.7139, 0.7016, 0.7027, 0.6890,
        0.6929, 0.7903, 0.7919, 0.6478, 0.7471, 0.7274, 0.7239, 0.5413, 0.6332,
        0.7500, 0.6987, 0.8043, 0.7310, 0.6084, 0.6557, 0.7339, 0.6471, 0.8604,
        0.8216, 0.9008, 0.7405, 0.7921, 0.6588, 0.7287, 0.6987, 0.7529, 0.7010,
        0.5871, 0.7608, 0.7625, 0.7446, 0.8463, 0.8129, 0.7352, 0.5779, 0.6971,
        0.6659, 0.7214, 0.7944, 0.7205, 0.7010, 0.7723, 0.5211, 0.7755, 0.5890,
        0.8905, 0.6169, 0.9081, 0.6899, 0.9275, 0.7660, 0.6535, 0.7992, 0.7603,
        0.8061, 0.6122, 0.7122, 0.6600, 0.5899, 0.3690, 0.7834, 0.5813],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(134.8892, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([188, 1])
Inertia: tensor([241.5296], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([188, 1280])
Centroid_list: tensor([[-0.0544, -0.0727, -0.0479,  ..., -0.0844,  0.0778, -0.5080],
        [-0.0018, -0.0407, -0.0314,  ..., -0.0592,  0.0935, -0.3057],
        [-0.0544, -0.0727, -0.0479,  ..., -0.0844,  0.0778, -0.5080],
        ...,
        [-0.0072, -0.0394, -0.0296,  ..., -0.0791,  0.0712, -0.3466],
        [-0.0528, -0.0737, -0.0617,  ..., -0.0455,  0.0826, -0.4744],
        [-0.0528, -0.0737, -0.0617,  ..., -0.0455,  0.0826, -0.4744]],
       device='cuda:0')
Computed C_score: tensor([0.6237, 0.6496, 0.8489, 0.6035, 0.6649, 0.7697, 0.7389, 0.7240, 0.7598,
        0.9093, 0.7529, 0.7538, 0.7868, 0.6827, 0.6892, 0.7103, 0.6243, 0.6541,
        0.9069, 0.7199, 0.6885, 0.7143, 0.5877, 0.8495, 0.5969, 0.8691, 0.7195,
        0.8413, 0.7427, 0.6680, 0.6800, 0.7112, 0.8471, 0.8005, 0.8160, 0.7009,
        0.7070, 0.9373, 0.7485, 0.6915, 0.7584, 0.6923, 0.7005, 0.5532, 0.7180,
        0.7354, 0.7201, 0.4525, 0.7595, 0.7729, 0.8355, 0.6772, 0.7480, 0.6732,
        0.9214, 0.8537, 0.5755, 0.7130, 0.4717, 0.6486, 0.7654, 0.7698, 0.9024,
        0.7889, 0.7248, 0.7397, 0.6808, 0.7403, 0.6480, 0.6356, 0.8381, 0.5929,
        0.7051, 0.6326, 0.8984, 0.7130, 0.7839, 0.8574, 0.7488, 0.7636, 0.8474,
        0.7700, 0.7771, 0.7682, 0.7123, 0.7761, 0.7339, 0.8509, 0.5970, 0.6768,
        0.7771, 0.7513, 0.7920, 0.8652, 0.6655, 0.6997, 0.8615, 0.6664, 0.8767,
        0.6554, 0.8995, 0.7005, 0.7122, 0.7030, 0.6705, 0.9150, 0.6691, 0.7434,
        0.6264, 0.5593, 0.7577, 0.8394, 0.5739, 0.9153, 0.8076, 0.8107, 0.8957,
        0.8345, 0.6894, 0.8790, 0.7282, 0.7240, 0.7584, 0.6866, 0.6684, 0.6415,
        0.6465, 0.7739, 0.7943, 0.7578, 0.7775, 0.7470, 0.7549, 0.7480, 0.6683,
        0.7578, 0.6477, 0.8311, 0.7439, 0.7067, 0.7611, 0.7140, 0.6450, 0.8889,
        0.8750, 0.9277, 0.7815, 0.7664, 0.7600, 0.7949, 0.7179, 0.7539, 0.7770,
        0.6170, 0.7048, 0.7167, 0.6918, 0.8538, 0.8179, 0.7849, 0.5529, 0.7843,
        0.6830, 0.8388, 0.7214, 0.7829, 0.7448, 0.7837, 0.4906, 0.7054, 0.5819,
        0.8933, 0.5919, 0.9128, 0.7610, 0.9452, 0.7915, 0.6822, 0.8314, 0.8185,
        0.7857, 0.6490, 0.8043, 0.6327, 0.8016, 0.4356, 0.7596, 0.6035],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(139.0051, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([188, 1])
Inertia: tensor([243.1616], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([188, 1280])
Centroid_list: tensor([[-6.2796e-02, -7.9201e-02, -4.9372e-02,  ..., -8.5412e-02,
          7.8511e-02, -4.6781e-01],
        [-3.9149e-04, -4.0346e-02, -3.1778e-02,  ..., -5.8443e-02,
          9.4303e-02, -2.8540e-01],
        [-6.2796e-02, -7.9201e-02, -4.9372e-02,  ..., -8.5412e-02,
          7.8511e-02, -4.6781e-01],
        ...,
        [-1.1460e-02, -3.0146e-02, -2.0473e-02,  ..., -8.6221e-02,
          6.6821e-02, -3.9464e-01],
        [-1.1308e-02, -4.5258e-02, -4.5249e-02,  ..., -6.7211e-02,
          7.8375e-02, -3.9994e-01],
        [-5.8871e-02, -8.4761e-02, -5.9394e-02,  ..., -3.7995e-02,
          8.3887e-02, -5.4987e-01]], device='cuda:0')
Computed C_score: tensor([0.6229, 0.6350, 0.8531, 0.6544, 0.6590, 0.8517, 0.7502, 0.6917, 0.7309,
        0.9493, 0.7424, 0.7773, 0.8095, 0.7138, 0.6748, 0.7191, 0.6439, 0.6478,
        0.9057, 0.6650, 0.7157, 0.7086, 0.6492, 0.8541, 0.5746, 0.8982, 0.8086,
        0.8442, 0.7306, 0.7921, 0.6676, 0.7178, 0.8136, 0.7983, 0.7865, 0.7637,
        0.6396, 0.9435, 0.7696, 0.6681, 0.7724, 0.6826, 0.6852, 0.5417, 0.7184,
        0.7432, 0.7643, 0.5223, 0.7526, 0.8414, 0.8515, 0.6820, 0.7744, 0.6886,
        0.9463, 0.8728, 0.5610, 0.7163, 0.5072, 0.6105, 0.7528, 0.7113, 0.9415,
        0.7886, 0.7249, 0.7306, 0.7669, 0.7147, 0.6264, 0.6526, 0.8065, 0.5885,
        0.6869, 0.7008, 0.9385, 0.6819, 0.7959, 0.8582, 0.7657, 0.7283, 0.8634,
        0.7768, 0.7621, 0.8628, 0.6628, 0.7981, 0.7520, 0.8930, 0.5703, 0.6860,
        0.7966, 0.7702, 0.7981, 0.8736, 0.7036, 0.6802, 0.8462, 0.6559, 0.9008,
        0.6641, 0.8809, 0.7757, 0.7248, 0.7001, 0.7549, 0.9395, 0.6410, 0.8089,
        0.6242, 0.5487, 0.7648, 0.7954, 0.5591, 0.9519, 0.7715, 0.7986, 0.9379,
        0.8666, 0.7362, 0.9194, 0.7238, 0.7198, 0.7653, 0.7814, 0.7474, 0.6280,
        0.6328, 0.7578, 0.7758, 0.7305, 0.7824, 0.7549, 0.7634, 0.6797, 0.6697,
        0.7744, 0.6235, 0.8421, 0.7591, 0.6846, 0.7728, 0.7712, 0.6736, 0.9223,
        0.8873, 0.9478, 0.7692, 0.7479, 0.7814, 0.7889, 0.7271, 0.7011, 0.7812,
        0.6029, 0.7109, 0.7633, 0.6844, 0.8515, 0.8249, 0.7965, 0.5372, 0.8595,
        0.7101, 0.8447, 0.7071, 0.8072, 0.7513, 0.7778, 0.5602, 0.7146, 0.5800,
        0.8688, 0.5965, 0.9142, 0.7365, 0.9711, 0.8740, 0.6763, 0.8509, 0.8243,
        0.7831, 0.6572, 0.8266, 0.6035, 0.7339, 0.4813, 0.7815, 0.5750],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(140.5620, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0047, 0.0139, 0.0268, 0.0428], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([7209, 1280])
S-Scores: tensor([0.7304, 2.1746, 4.2922, 6.8466], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([7209, 1])
Inertia: tensor([123.5618], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([7209, 1280])
Centroid_list: tensor([[-0.0198, -0.0574, -0.0372,  ..., -0.0786,  0.0588, -0.2690],
        [-0.0198, -0.0574, -0.0372,  ..., -0.0786,  0.0588, -0.2690],
        [-0.0558, -0.0625, -0.0581,  ..., -0.0610,  0.0728, -0.2972],
        ...,
        [-0.0558, -0.0625, -0.0581,  ..., -0.0610,  0.0728, -0.2972],
        [-0.0558, -0.0625, -0.0581,  ..., -0.0610,  0.0728, -0.2972],
        [-0.0198, -0.0574, -0.0372,  ..., -0.0786,  0.0588, -0.2690]],
       device='cuda:0')
Computed C_score: tensor([0.7911, 0.7243, 0.7264,  ..., 0.7165, 0.6249, 0.6377], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(5029.1270, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([7209, 1])
Inertia: tensor([122.5319], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([7209, 1280])
Centroid_list: tensor([[-0.0151, -0.0444, -0.0244,  ..., -0.0823,  0.0507, -0.2389],
        [-0.0279, -0.0713, -0.0511,  ..., -0.0742,  0.0673, -0.3130],
        [-0.0279, -0.0713, -0.0511,  ..., -0.0742,  0.0673, -0.3130],
        ...,
        [-0.0560, -0.0608, -0.0587,  ..., -0.0596,  0.0738, -0.2767],
        [-0.0560, -0.0608, -0.0587,  ..., -0.0596,  0.0738, -0.2767],
        [-0.0279, -0.0713, -0.0511,  ..., -0.0742,  0.0673, -0.3130]],
       device='cuda:0')
Computed C_score: tensor([0.7892, 0.7916, 0.7859,  ..., 0.7091, 0.6236, 0.7168], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(5205.5166, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([7209, 1])
Inertia: tensor([108.7137], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([7209, 1280])
Centroid_list: tensor([[-0.0509, -0.0885, -0.0578,  ..., -0.0833,  0.0613, -0.4468],
        [-0.0509, -0.0885, -0.0578,  ..., -0.0833,  0.0613, -0.4468],
        [-0.0509, -0.0885, -0.0578,  ..., -0.0833,  0.0613, -0.4468],
        ...,
        [-0.0559, -0.0580, -0.0577,  ..., -0.0571,  0.0746, -0.2516],
        [-0.0559, -0.0580, -0.0577,  ..., -0.0571,  0.0746, -0.2516],
        [-0.0509, -0.0885, -0.0578,  ..., -0.0833,  0.0613, -0.4468]],
       device='cuda:0')
Computed C_score: tensor([0.8163, 0.8556, 0.8737,  ..., 0.6994, 0.6205, 0.7264], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(5316.8467, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([7209, 1])
Inertia: tensor([108.6324], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([7209, 1280])
Centroid_list: tensor([[-0.0501, -0.0901, -0.0576,  ..., -0.0837,  0.0605, -0.4551],
        [-0.0501, -0.0901, -0.0576,  ..., -0.0837,  0.0605, -0.4551],
        [-0.0501, -0.0901, -0.0576,  ..., -0.0837,  0.0605, -0.4551],
        ...,
        [-0.0641, -0.0755, -0.0654,  ..., -0.0408,  0.0724, -0.3911],
        [-0.0480, -0.0472, -0.0523,  ..., -0.0678,  0.0751, -0.1882],
        [-0.0501, -0.0901, -0.0576,  ..., -0.0837,  0.0605, -0.4551]],
       device='cuda:0')
Computed C_score: tensor([0.8168, 0.8547, 0.8764,  ..., 0.7203, 0.6323, 0.7293], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(5373.8853, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0001, 0.0004, 0.0008, 0.0013], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([4286, 1280])
S-Scores: tensor([0.6111, 1.7625, 3.6975, 5.9457], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([4286, 1])
Inertia: tensor([77.6045], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([4286, 1280])
Centroid_list: tensor([[ 0.0274, -0.0664, -0.0732,  ..., -0.0224,  0.0710, -0.5564],
        [-0.0369, -0.0634, -0.0878,  ..., -0.0540,  0.0811, -0.3334],
        [ 0.0274, -0.0664, -0.0732,  ..., -0.0224,  0.0710, -0.5564],
        ...,
        [-0.0369, -0.0634, -0.0878,  ..., -0.0540,  0.0811, -0.3334],
        [-0.0369, -0.0634, -0.0878,  ..., -0.0540,  0.0811, -0.3334],
        [-0.0369, -0.0634, -0.0878,  ..., -0.0540,  0.0811, -0.3334]],
       device='cuda:0')
Computed C_score: tensor([0.8684, 0.5554, 0.7989,  ..., 0.7850, 0.7405, 0.6920], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3166.2803, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4286, 1])
Inertia: tensor([77.3866], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([4286, 1280])
Centroid_list: tensor([[ 0.0290, -0.0656, -0.0709,  ..., -0.0213,  0.0714, -0.5580],
        [-0.0274, -0.0577, -0.0906,  ..., -0.0560,  0.0788, -0.3156],
        [ 0.0290, -0.0656, -0.0709,  ..., -0.0213,  0.0714, -0.5580],
        ...,
        [-0.0533, -0.0801, -0.0842,  ..., -0.0466,  0.0839, -0.4124],
        [-0.0274, -0.0577, -0.0906,  ..., -0.0560,  0.0788, -0.3156],
        [-0.0274, -0.0577, -0.0906,  ..., -0.0560,  0.0788, -0.3156]],
       device='cuda:0')
Computed C_score: tensor([0.8692, 0.6707, 0.7940,  ..., 0.8128, 0.7100, 0.7654], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3280.7834, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4286, 1])
Inertia: tensor([88.3173], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([4286, 1280])
Centroid_list: tensor([[ 0.0140, -0.0828, -0.0609,  ..., -0.0182,  0.0723, -0.5217],
        [-0.0284, -0.0562, -0.0909,  ..., -0.0565,  0.0789, -0.3070],
        [ 0.0140, -0.0828, -0.0609,  ..., -0.0182,  0.0723, -0.5217],
        ...,
        [-0.0527, -0.0800, -0.0843,  ..., -0.0477,  0.0837, -0.4138],
        [-0.0284, -0.0562, -0.0909,  ..., -0.0565,  0.0789, -0.3070],
        [-0.0284, -0.0562, -0.0909,  ..., -0.0565,  0.0789, -0.3070]],
       device='cuda:0')
Computed C_score: tensor([0.8519, 0.6778, 0.8205,  ..., 0.8123, 0.7049, 0.7665], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3326.1255, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4286, 1])
Inertia: tensor([88.3924], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([4286, 1280])
Centroid_list: tensor([[ 0.0138, -0.0830, -0.0604,  ..., -0.0177,  0.0725, -0.5188],
        [-0.0284, -0.0507, -0.0930,  ..., -0.0553,  0.0794, -0.2776],
        [ 0.0138, -0.0830, -0.0604,  ..., -0.0177,  0.0725, -0.5188],
        ...,
        [-0.0334, -0.0726, -0.0820,  ..., -0.0606,  0.0799, -0.3609],
        [-0.0334, -0.0726, -0.0820,  ..., -0.0606,  0.0799, -0.3609],
        [-0.0284, -0.0507, -0.0930,  ..., -0.0553,  0.0794, -0.2776]],
       device='cuda:0')
Computed C_score: tensor([0.8519, 0.7290, 0.8211,  ..., 0.8072, 0.8024, 0.7738], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3375.6553, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0002, 0.0005, 0.0011, 0.0018], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([4503, 1280])
S-Scores: tensor([0.5428, 1.6931, 3.3607, 5.5431], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([4503, 1])
Inertia: tensor([131.8573], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([4503, 1280])
Centroid_list: tensor([[-0.0414, -0.0616, -0.0595,  ..., -0.0606,  0.0826, -0.1797],
        [-0.0414, -0.0616, -0.0595,  ..., -0.0606,  0.0826, -0.1797],
        [-0.0798, -0.0207, -0.0614,  ..., -0.0050,  0.0736,  0.5658],
        ...,
        [-0.0798, -0.0207, -0.0614,  ..., -0.0050,  0.0736,  0.5658],
        [-0.0414, -0.0616, -0.0595,  ..., -0.0606,  0.0826, -0.1797],
        [-0.0414, -0.0616, -0.0595,  ..., -0.0606,  0.0826, -0.1797]],
       device='cuda:0')
Computed C_score: tensor([0.7784, 0.5710, 0.7195,  ..., 0.8966, 0.6613, 0.6679], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3455.2734, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4503, 1])
Inertia: tensor([175.7769], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([4503, 1280])
Centroid_list: tensor([[-0.0388, -0.0549, -0.0592,  ..., -0.0602,  0.0792, -0.1215],
        [-0.0388, -0.0549, -0.0592,  ..., -0.0602,  0.0792, -0.1215],
        [-0.0813, -0.0196, -0.0615,  ..., -0.0032,  0.0734,  0.5854],
        ...,
        [-0.0813, -0.0196, -0.0615,  ..., -0.0032,  0.0734,  0.5854],
        [-0.0469, -0.0700, -0.0600,  ..., -0.0584,  0.0874, -0.2242],
        [-0.0388, -0.0549, -0.0592,  ..., -0.0602,  0.0792, -0.1215]],
       device='cuda:0')
Computed C_score: tensor([0.6884, 0.6631, 0.7180,  ..., 0.8977, 0.8151, 0.7600], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3565.1660, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4503, 1])
Inertia: tensor([146.0744], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([4503, 1280])
Centroid_list: tensor([[-0.0293, -0.0602, -0.0491,  ..., -0.0724,  0.0877, -0.1448],
        [-0.0427, -0.0550, -0.0611,  ..., -0.0566,  0.0780, -0.1048],
        [-0.0814, -0.0195, -0.0615,  ..., -0.0031,  0.0734,  0.5874],
        ...,
        [-0.0814, -0.0195, -0.0615,  ..., -0.0031,  0.0734,  0.5874],
        [-0.0693, -0.0824, -0.0786,  ..., -0.0383,  0.0851, -0.4017],
        [-0.0427, -0.0550, -0.0611,  ..., -0.0566,  0.0780, -0.1048]],
       device='cuda:0')
Computed C_score: tensor([0.7603, 0.6639, 0.7179,  ..., 0.8978, 0.9276, 0.7674], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3609.6304, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4503, 1])
Inertia: tensor([146.1564], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([4503, 1280])
Centroid_list: tensor([[-0.0292, -0.0602, -0.0491,  ..., -0.0723,  0.0877, -0.1450],
        [-0.0430, -0.0548, -0.0609,  ..., -0.0566,  0.0779, -0.1012],
        [-0.0905, -0.0234, -0.0695,  ..., -0.0018,  0.0719,  0.2762],
        ...,
        [-0.0684, -0.0136, -0.0501,  ..., -0.0044,  0.0757,  1.0395],
        [-0.0693, -0.0824, -0.0786,  ..., -0.0383,  0.0851, -0.4017],
        [-0.0430, -0.0548, -0.0609,  ..., -0.0566,  0.0779, -0.1012]],
       device='cuda:0')
Computed C_score: tensor([0.7602, 0.6640, 0.7484,  ..., 0.9229, 0.9276, 0.7663], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3657.5330, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0002, 0.0005, 0.0009, 0.0015], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([3420, 1280])
S-Scores: tensor([0.6478, 1.9799, 4.0497, 6.7860], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([3420, 1])
Inertia: tensor([185.0035], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([3420, 1280])
Centroid_list: tensor([[-0.0358, -0.0574, -0.0736,  ..., -0.0640,  0.0363, -0.4210],
        [-0.0358, -0.0574, -0.0736,  ..., -0.0640,  0.0363, -0.4210],
        [-0.0358, -0.0574, -0.0736,  ..., -0.0640,  0.0363, -0.4210],
        ...,
        [-0.0358, -0.0574, -0.0736,  ..., -0.0640,  0.0363, -0.4210],
        [-0.0470, -0.0589, -0.0562,  ..., -0.0602,  0.0764, -0.3010],
        [-0.0358, -0.0574, -0.0736,  ..., -0.0640,  0.0363, -0.4210]],
       device='cuda:0')
Computed C_score: tensor([0.7309, 0.7271, 0.5291,  ..., 0.8083, 0.7482, 0.7862], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2436.6274, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3420, 1])
Inertia: tensor([172.9771], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([3420, 1280])
Centroid_list: tensor([[-0.0408, -0.0596, -0.0627,  ..., -0.0714,  0.0603, -0.3702],
        [-0.0320, -0.0563, -0.0839,  ..., -0.0572,  0.0158, -0.4791],
        [-0.0408, -0.0596, -0.0627,  ..., -0.0714,  0.0603, -0.3702],
        ...,
        [-0.0320, -0.0563, -0.0839,  ..., -0.0572,  0.0158, -0.4791],
        [-0.0408, -0.0596, -0.0627,  ..., -0.0714,  0.0603, -0.3702],
        [-0.0320, -0.0563, -0.0839,  ..., -0.0572,  0.0158, -0.4791]],
       device='cuda:0')
Computed C_score: tensor([0.7538, 0.7989, 0.5172,  ..., 0.8783, 0.7330, 0.8274], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2514.7854, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3420, 1])
Inertia: tensor([180.3205], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([3420, 1280])
Centroid_list: tensor([[-0.0653, -0.0858, -0.0775,  ..., -0.0755,  0.0463, -0.5446],
        [-0.0291, -0.0538, -0.0844,  ..., -0.0560,  0.0134, -0.4761],
        [-0.0217, -0.0402, -0.0541,  ..., -0.0667,  0.0657, -0.2510],
        ...,
        [-0.0291, -0.0538, -0.0844,  ..., -0.0560,  0.0134, -0.4761],
        [-0.0653, -0.0858, -0.0775,  ..., -0.0755,  0.0463, -0.5446],
        [-0.0291, -0.0538, -0.0844,  ..., -0.0560,  0.0134, -0.4761]],
       device='cuda:0')
Computed C_score: tensor([0.7402, 0.8082, 0.5979,  ..., 0.8838, 0.7403, 0.8304], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2575.1582, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([3420, 1])
Inertia: tensor([183.6991], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([3420, 1280])
Centroid_list: tensor([[-0.0655, -0.0858, -0.0769,  ..., -0.0750,  0.0489, -0.5245],
        [-0.0146, -0.0536, -0.0886,  ..., -0.0437,  0.0245, -0.3278],
        [-0.0227, -0.0394, -0.0521,  ..., -0.0675,  0.0678, -0.2444],
        ...,
        [-0.0146, -0.0536, -0.0886,  ..., -0.0437,  0.0245, -0.3278],
        [-0.0655, -0.0858, -0.0769,  ..., -0.0750,  0.0489, -0.5245],
        [-0.0441, -0.0552, -0.0778,  ..., -0.0717,  0.0080, -0.6362]],
       device='cuda:0')
Computed C_score: tensor([0.7349, 0.7914, 0.5917,  ..., 0.8857, 0.7503, 0.8333], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2600.6609, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0003, 0.0008, 0.0016, 0.0026], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([6141, 1280])
S-Scores: tensor([0.6406, 1.8734, 3.6921, 6.4608], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([6141, 1])
Inertia: tensor([147.2978], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([6141, 1280])
Centroid_list: tensor([[-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        [-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        [-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        ...,
        [-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        [-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560],
        [-0.0306, -0.0560, -0.0478,  ..., -0.0592,  0.0832, -0.2560]],
       device='cuda:0')
Computed C_score: tensor([0.8036, 0.3163, 0.7500,  ..., 0.7930, 0.7962, 0.5985], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4593.3291, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6141, 1])
Inertia: tensor([134.5267], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([6141, 1280])
Centroid_list: tensor([[-0.0505, -0.0541, -0.0530,  ..., -0.0473,  0.0869, -0.2018],
        [-0.0194, -0.0561, -0.0456,  ..., -0.0657,  0.0804, -0.2936],
        [-0.0194, -0.0561, -0.0456,  ..., -0.0657,  0.0804, -0.2936],
        ...,
        [-0.0505, -0.0541, -0.0530,  ..., -0.0473,  0.0869, -0.2018],
        [-0.0194, -0.0561, -0.0456,  ..., -0.0657,  0.0804, -0.2936],
        [-0.0194, -0.0561, -0.0456,  ..., -0.0657,  0.0804, -0.2936]],
       device='cuda:0')
Computed C_score: tensor([0.8246, 0.4468, 0.7234,  ..., 0.8710, 0.7909, 0.6177], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4741.5811, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6141, 1])
Inertia: tensor([86.9247], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([6141, 1280])
Centroid_list: tensor([[-0.0313, -0.0426, -0.0362,  ..., -0.0633,  0.0874, -0.1943],
        [-0.0216, -0.0596, -0.0499,  ..., -0.0631,  0.0790, -0.2843],
        [-0.0216, -0.0596, -0.0499,  ..., -0.0631,  0.0790, -0.2843],
        ...,
        [-0.0313, -0.0426, -0.0362,  ..., -0.0633,  0.0874, -0.1943],
        [-0.0313, -0.0426, -0.0362,  ..., -0.0633,  0.0874, -0.1943],
        [-0.0216, -0.0596, -0.0499,  ..., -0.0631,  0.0790, -0.2843]],
       device='cuda:0')
Computed C_score: tensor([0.8886, 0.4752, 0.7546,  ..., 0.8458, 0.8213, 0.6556], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4805.3936, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([6141, 1])
Inertia: tensor([138.0599], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([6141, 1280])
Centroid_list: tensor([[-0.0498, -0.0538, -0.0525,  ..., -0.0461,  0.0876, -0.1751],
        [ 0.0009, -0.0439, -0.0349,  ..., -0.0631,  0.0844, -0.1929],
        [-0.0511, -0.0734, -0.0617,  ..., -0.0674,  0.0758, -0.4423],
        ...,
        [-0.0498, -0.0538, -0.0525,  ..., -0.0461,  0.0876, -0.1751],
        [ 0.0009, -0.0439, -0.0349,  ..., -0.0631,  0.0844, -0.1929],
        [-0.0511, -0.0734, -0.0617,  ..., -0.0674,  0.0758, -0.4423]],
       device='cuda:0')
Computed C_score: tensor([0.8239, 0.4753, 0.8647,  ..., 0.8639, 0.7837, 0.6361], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4891.6304, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0001, 0.0004, 0.0008, 0.0013], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([741, 1280])
S-Scores: tensor([0.6913, 2.0724, 3.9812, 6.5817], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([741, 1])
Inertia: tensor([149.5996], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([741, 1280])
Centroid_list: tensor([[-0.0439, -0.0709, -0.0497,  ..., -0.0610,  0.0844, -0.4390],
        [-0.0439, -0.0709, -0.0497,  ..., -0.0610,  0.0844, -0.4390],
        [-0.0248, -0.0560, -0.0474,  ..., -0.0686,  0.0684, -0.7090],
        ...,
        [-0.0439, -0.0709, -0.0497,  ..., -0.0610,  0.0844, -0.4390],
        [-0.0248, -0.0560, -0.0474,  ..., -0.0686,  0.0684, -0.7090],
        [-0.0248, -0.0560, -0.0474,  ..., -0.0686,  0.0684, -0.7090]],
       device='cuda:0')
Computed C_score: tensor([0.8660, 0.8717, 0.7281, 0.6997, 0.6440, 0.7552, 0.8292, 0.5884, 0.7692,
        0.4733, 0.6082, 0.6437, 0.7916, 0.7338, 0.8082, 0.6994, 0.6187, 0.8496,
        0.5785, 0.4919, 0.7069, 0.5963, 0.6628, 0.6082, 0.6072, 0.6656, 0.7806,
        0.7460, 0.7919, 0.8554, 0.5932, 0.7947, 0.8020, 0.6022, 0.7747, 0.5660,
        0.6876, 0.6632, 0.7143, 0.7424, 0.5698, 0.7305, 0.7043, 0.7758, 0.6064,
        0.5649, 0.7265, 0.7256, 0.7266, 0.8519, 0.5447, 0.6121, 0.6675, 0.6286,
        0.5284, 0.6865, 0.7492, 0.6616, 0.7529, 0.6604, 0.6961, 0.7200, 0.7620,
        0.7476, 0.7601, 0.4340, 0.8594, 0.4931, 0.6332, 0.6235, 0.6437, 0.6817,
        0.7383, 0.6388, 0.7011, 0.5903, 0.6279, 0.7845, 0.6295, 0.5963, 0.6135,
        0.5218, 0.7293, 0.6558, 0.6332, 0.7566, 0.6526, 0.6138, 0.6891, 0.6508,
        0.5952, 0.7113, 0.6919, 0.7205, 0.6206, 0.6982, 0.8753, 0.8365, 0.7845,
        0.5877, 0.6347, 0.6704, 0.7572, 0.6486, 0.7398, 0.6242, 0.6706, 0.8470,
        0.6457, 0.6930, 0.6938, 0.6932, 0.7998, 0.6830, 0.6875, 0.7257, 0.6489,
        0.7382, 0.8126, 0.7344, 0.7295, 0.6718, 0.6592, 0.7361, 0.7488, 0.6204,
        0.8900, 0.5824, 0.6796, 0.6512, 0.5966, 0.5502, 0.7254, 0.3292, 0.6517,
        0.8146, 0.8095, 0.7088, 0.7473, 0.6217, 0.6731, 0.6668, 0.7105, 0.6588,
        0.6385, 0.5925, 0.4768, 0.7480, 0.6900, 0.6513, 0.6527, 0.7577, 0.8300,
        0.6518, 0.6854, 0.5923, 0.6974, 0.7743, 0.6765, 0.7902, 0.7291, 0.5242,
        0.7085, 0.6341, 0.5319, 0.5748, 0.6841, 0.6539, 0.8050, 0.6797, 0.7947,
        0.6323, 0.5952, 0.6004, 0.6321, 0.7403, 0.6164, 0.5969, 0.6747, 0.7530,
        0.6882, 0.6366, 0.5276, 0.6470, 0.6777, 0.8028, 0.6735, 0.5978, 0.6331,
        0.7214, 0.7224, 0.6363, 0.6671, 0.7541, 0.5610, 0.7984, 0.7780, 0.5584,
        0.7980, 0.6495, 0.5574, 0.4753, 0.7420, 0.7826, 0.6254, 0.7638, 0.6989,
        0.6215, 0.6614, 0.6548, 0.7233, 0.6482, 0.6796, 0.6070, 0.5679, 0.5980,
        0.7761, 0.6308, 0.6984, 0.5881, 0.6986, 0.6967, 0.6643, 0.5962, 0.7357,
        0.6532, 0.7317, 0.7756, 0.6858, 0.6575, 0.6894, 0.7856, 0.7159, 0.7164,
        0.6942, 0.6745, 0.7491, 0.6775, 0.6236, 0.6321, 0.5580, 0.6667, 0.7672,
        0.7961, 0.7552, 0.6121, 0.6346, 0.6828, 0.7418, 0.6573, 0.6938, 0.6705,
        0.6964, 0.6222, 0.7267, 0.6126, 0.6996, 0.8306, 0.5056, 0.6590, 0.7809,
        0.6446, 0.6239, 0.6389, 0.7587, 0.6072, 0.7140, 0.8798, 0.8271, 0.6982,
        0.6487, 0.7392, 0.6263, 0.6154, 0.5698, 0.5721, 0.5492, 0.7409, 0.6724,
        0.7003, 0.8070, 0.7789, 0.4988, 0.6952, 0.5705, 0.7279, 0.7179, 0.7120,
        0.6900, 0.5700, 0.7801, 0.8760, 0.7355, 0.6562, 0.6285, 0.7068, 0.7081,
        0.6547, 0.5793, 0.6294, 0.6442, 0.6898, 0.5656, 0.7168, 0.7685, 0.6040,
        0.6041, 0.6632, 0.8664, 0.6880, 0.6803, 0.5054, 0.7510, 0.6610, 0.7511,
        0.8551, 0.5582, 0.6370, 0.6551, 0.7333, 0.8225, 0.6040, 0.6819, 0.7856,
        0.8647, 0.6981, 0.6314, 0.5306, 0.7073, 0.7779, 0.6932, 0.8161, 0.6924,
        0.8959, 0.6684, 0.7078, 0.7245, 0.5897, 0.8650, 0.6119, 0.5705, 0.6784,
        0.7219, 0.6865, 0.6963, 0.6321, 0.7333, 0.6619, 0.8792, 0.7947, 0.6975,
        0.7206, 0.6573, 0.7777, 0.7282, 0.7324, 0.5988, 0.6756, 0.6004, 0.6186,
        0.6617, 0.7072, 0.8649, 0.6293, 0.8874, 0.7074, 0.8128, 0.7052, 0.7496,
        0.6446, 0.6614, 0.7806, 0.6413, 0.6484, 0.6800, 0.7016, 0.7196, 0.6502,
        0.5938, 0.8306, 0.5781, 0.6744, 0.8146, 0.4329, 0.6760, 0.7430, 0.7394,
        0.8801, 0.6157, 0.6362, 0.5982, 0.8140, 0.7546, 0.6699, 0.6947, 0.6206,
        0.8289, 0.6575, 0.6739, 0.5593, 0.6189, 0.5753, 0.6366, 0.8415, 0.6690,
        0.6715, 0.6168, 0.7525, 0.7431, 0.6305, 0.6936, 0.6275, 0.8036, 0.7200,
        0.8437, 0.7699, 0.7543, 0.6235, 0.7716, 0.6530, 0.7237, 0.8663, 0.5723,
        0.8752, 0.8860, 0.5492, 0.4792, 0.8278, 0.5566, 0.5832, 0.7374, 0.6191,
        0.6858, 0.6843, 0.6453, 0.7965, 0.6430, 0.8380, 0.7158, 0.6939, 0.6908,
        0.6720, 0.6202, 0.5310, 0.6048, 0.6412, 0.6054, 0.6502, 0.8966, 0.6356,
        0.6570, 0.8018, 0.7281, 0.5370, 0.6618, 0.6460, 0.6436, 0.7326, 0.7063,
        0.6123, 0.4388, 0.6494, 0.8459, 0.6323, 0.7379, 0.5483, 0.5748, 0.6598,
        0.5907, 0.7416, 0.6162, 0.6110, 0.6992, 0.7431, 0.7984, 0.7203, 0.8091,
        0.5985, 0.5623, 0.7204, 0.6952, 0.7590, 0.6653, 0.6309, 0.6020, 0.6403,
        0.7525, 0.8696, 0.7631, 0.6318, 0.7685, 0.8061, 0.8300, 0.7012, 0.5665,
        0.7227, 0.7204, 0.6522, 0.8981, 0.7631, 0.5890, 0.7371, 0.5557, 0.7189,
        0.6061, 0.7985, 0.7225, 0.6452, 0.7127, 0.6077, 0.6027, 0.7737, 0.6358,
        0.5009, 0.6759, 0.6593, 0.6607, 0.7772, 0.5841, 0.7151, 0.6877, 0.6116,
        0.6476, 0.6038, 0.7127, 0.6518, 0.6706, 0.6015, 0.6208, 0.6441, 0.7313,
        0.7511, 0.6339, 0.6111, 0.8095, 0.4881, 0.6922, 0.7076, 0.8115, 0.6455,
        0.7598, 0.5754, 0.6902, 0.8664, 0.6261, 0.6648, 0.6166, 0.6966, 0.6192,
        0.5921, 0.8354, 0.7609, 0.7549, 0.6866, 0.8603, 0.6694, 0.8712, 0.7784,
        0.7790, 0.5667, 0.6494, 0.6951, 0.6793, 0.7032, 0.7340, 0.5523, 0.8715,
        0.6483, 0.7314, 0.6441, 0.5459, 0.7554, 0.6988, 0.8647, 0.8333, 0.6723,
        0.6847, 0.7663, 0.7099, 0.7160, 0.6721, 0.6512, 0.6849, 0.8885, 0.7570,
        0.7020, 0.8427, 0.7580, 0.6439, 0.5461, 0.6858, 0.6666, 0.6550, 0.6852,
        0.5963, 0.6313, 0.6169, 0.7295, 0.6684, 0.6452, 0.6851, 0.6065, 0.6314,
        0.5846, 0.7283, 0.7910, 0.8161, 0.6535, 0.8354, 0.6288, 0.5665, 0.7362,
        0.6892, 0.6512, 0.8891, 0.7090, 0.5485, 0.8770, 0.7121, 0.5569, 0.7496,
        0.7559, 0.6518, 0.8084, 0.5899, 0.7200, 0.6088, 0.7543, 0.7540, 0.6989,
        0.8362, 0.6767, 0.7780, 0.6432, 0.6616, 0.7284, 0.7700, 0.7916, 0.6942,
        0.6143, 0.6598, 0.6606, 0.6621, 0.7659, 0.7540, 0.6920, 0.6863, 0.6868,
        0.5517, 0.6966, 0.8668, 0.7746, 0.6432, 0.7042, 0.7917, 0.8280, 0.7249,
        0.7905, 0.8118, 0.6243, 0.6500, 0.4826, 0.8017, 0.6785, 0.7292, 0.7971,
        0.7569, 0.7409, 0.5461, 0.7231, 0.8318, 0.7253, 0.7241, 0.6250, 0.6865,
        0.6551, 0.8276, 0.6552, 0.6952, 0.7362, 0.6067, 0.8874, 0.6645, 0.8689,
        0.8257, 0.7207, 0.6768, 0.6467, 0.6838, 0.8553, 0.6727, 0.6240, 0.7868,
        0.8493, 0.6904, 0.6802, 0.5756, 0.6764, 0.6070, 0.7606, 0.6087, 0.7988,
        0.6823, 0.8723, 0.7020, 0.6935, 0.5913, 0.7219, 0.8599, 0.6083, 0.6773,
        0.7200, 0.7975, 0.6627, 0.6113, 0.7163, 0.6471, 0.7425, 0.7610, 0.6861,
        0.7600, 0.8566, 0.8210, 0.7003, 0.8345, 0.7560, 0.7497, 0.6459, 0.7293,
        0.6827, 0.6369, 0.4745, 0.4286, 0.8592, 0.6743, 0.8622, 0.8397, 0.5566,
        0.8672, 0.6429, 0.6119], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(512.0118, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([741, 1])
Inertia: tensor([145.9092], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([741, 1280])
Centroid_list: tensor([[-0.0376, -0.0684, -0.0477,  ..., -0.0571,  0.0861, -0.4060],
        [-0.0376, -0.0684, -0.0477,  ..., -0.0571,  0.0861, -0.4060],
        [-0.0133, -0.0446, -0.0422,  ..., -0.0678,  0.0665, -0.6314],
        ...,
        [-0.0376, -0.0684, -0.0477,  ..., -0.0571,  0.0861, -0.4060],
        [-0.0133, -0.0446, -0.0422,  ..., -0.0678,  0.0665, -0.6314],
        [-0.0133, -0.0446, -0.0422,  ..., -0.0678,  0.0665, -0.6314]],
       device='cuda:0')
Computed C_score: tensor([0.8634, 0.8928, 0.6893, 0.7925, 0.6762, 0.7616, 0.8293, 0.5546, 0.7470,
        0.5699, 0.6398, 0.6446, 0.7938, 0.7475, 0.8225, 0.6650, 0.6297, 0.8602,
        0.5513, 0.4931, 0.8532, 0.5959, 0.6863, 0.6921, 0.6686, 0.6390, 0.7603,
        0.7233, 0.7996, 0.8671, 0.6411, 0.7947, 0.8058, 0.5854, 0.7924, 0.5386,
        0.7262, 0.6400, 0.6846, 0.7430, 0.6104, 0.8046, 0.7274, 0.8778, 0.6929,
        0.5950, 0.8125, 0.7088, 0.7219, 0.8418, 0.5552, 0.6038, 0.6861, 0.6526,
        0.5475, 0.6766, 0.7401, 0.7197, 0.7749, 0.7137, 0.7586, 0.7606, 0.8745,
        0.8055, 0.7758, 0.4513, 0.8784, 0.4876, 0.6406, 0.6688, 0.6995, 0.6961,
        0.7713, 0.6484, 0.6975, 0.5780, 0.8282, 0.7836, 0.6577, 0.5938, 0.6223,
        0.5203, 0.8454, 0.7300, 0.6057, 0.7556, 0.6651, 0.7166, 0.7404, 0.6877,
        0.6893, 0.7000, 0.6654, 0.7743, 0.6095, 0.7009, 0.8637, 0.8558, 0.8075,
        0.5982, 0.6466, 0.7449, 0.8836, 0.6655, 0.7061, 0.6265, 0.7647, 0.8493,
        0.6341, 0.7311, 0.7522, 0.7745, 0.8228, 0.6708, 0.6948, 0.7294, 0.7243,
        0.6904, 0.7714, 0.7283, 0.8348, 0.6797, 0.6511, 0.7354, 0.8492, 0.6737,
        0.8960, 0.5815, 0.6688, 0.7797, 0.6539, 0.5925, 0.7756, 0.3698, 0.6392,
        0.8345, 0.8182, 0.8770, 0.8525, 0.6462, 0.6723, 0.7365, 0.7337, 0.6737,
        0.6674, 0.6193, 0.4920, 0.7516, 0.7024, 0.6174, 0.6663, 0.7281, 0.8355,
        0.6759, 0.6466, 0.6171, 0.6882, 0.7353, 0.6606, 0.8426, 0.7163, 0.5261,
        0.6990, 0.6307, 0.5859, 0.5925, 0.7870, 0.6903, 0.8163, 0.8018, 0.8080,
        0.8183, 0.6730, 0.6068, 0.6059, 0.7867, 0.6063, 0.6275, 0.7126, 0.7674,
        0.7443, 0.6034, 0.5074, 0.6498, 0.6807, 0.8027, 0.6944, 0.5929, 0.6731,
        0.8706, 0.7730, 0.6414, 0.6439, 0.7561, 0.5429, 0.8505, 0.7977, 0.5612,
        0.8107, 0.6504, 0.5844, 0.4556, 0.8714, 0.7858, 0.6286, 0.8304, 0.6976,
        0.6179, 0.7359, 0.6901, 0.7752, 0.6740, 0.6849, 0.6425, 0.5811, 0.5732,
        0.7935, 0.6769, 0.6789, 0.6088, 0.7689, 0.7423, 0.8035, 0.5795, 0.6939,
        0.6426, 0.7880, 0.7705, 0.6470, 0.6495, 0.8496, 0.7938, 0.8144, 0.7238,
        0.7121, 0.6531, 0.8288, 0.7199, 0.6113, 0.7041, 0.6048, 0.6500, 0.7430,
        0.7811, 0.7961, 0.6262, 0.6619, 0.6741, 0.7355, 0.7093, 0.7283, 0.6731,
        0.6734, 0.6334, 0.7787, 0.6380, 0.8013, 0.8115, 0.5298, 0.7180, 0.8864,
        0.7427, 0.6375, 0.6389, 0.7435, 0.6176, 0.7628, 0.9034, 0.8018, 0.8091,
        0.7256, 0.7580, 0.6510, 0.6089, 0.5728, 0.5666, 0.7201, 0.8028, 0.6643,
        0.7333, 0.8215, 0.8309, 0.5307, 0.7451, 0.6337, 0.7054, 0.7302, 0.7315,
        0.8572, 0.5723, 0.7709, 0.8850, 0.7759, 0.7025, 0.6840, 0.7161, 0.7304,
        0.6695, 0.5727, 0.6513, 0.6873, 0.6800, 0.6176, 0.7565, 0.8346, 0.6569,
        0.6526, 0.6579, 0.8470, 0.7694, 0.7321, 0.4839, 0.7833, 0.7359, 0.7754,
        0.8428, 0.5551, 0.6257, 0.7672, 0.8837, 0.8398, 0.6148, 0.7134, 0.8332,
        0.8798, 0.6930, 0.6587, 0.5239, 0.8235, 0.8413, 0.7641, 0.8185, 0.6942,
        0.9005, 0.6671, 0.6999, 0.6969, 0.6003, 0.8538, 0.6677, 0.5928, 0.6952,
        0.7163, 0.7555, 0.7219, 0.6250, 0.8259, 0.7064, 0.8854, 0.8061, 0.6895,
        0.8540, 0.6235, 0.8959, 0.7504, 0.7297, 0.5759, 0.7637, 0.6105, 0.5930,
        0.7162, 0.7803, 0.8872, 0.6830, 0.8992, 0.8124, 0.7653, 0.7544, 0.7489,
        0.6542, 0.6868, 0.7868, 0.6178, 0.6325, 0.8205, 0.7752, 0.7597, 0.6592,
        0.5708, 0.8066, 0.5957, 0.7076, 0.7802, 0.4220, 0.7338, 0.8411, 0.8041,
        0.8772, 0.6820, 0.6470, 0.6195, 0.8364, 0.7644, 0.6438, 0.7022, 0.5624,
        0.8387, 0.7100, 0.7163, 0.5382, 0.6037, 0.5545, 0.6815, 0.8603, 0.7147,
        0.6463, 0.7977, 0.8322, 0.8396, 0.7011, 0.7069, 0.6268, 0.8183, 0.7030,
        0.8519, 0.7256, 0.7256, 0.6607, 0.8512, 0.6457, 0.7225, 0.8705, 0.5681,
        0.8851, 0.8591, 0.5751, 0.5199, 0.8849, 0.5442, 0.5910, 0.7542, 0.6448,
        0.7295, 0.6850, 0.7356, 0.7979, 0.7060, 0.8575, 0.7295, 0.8367, 0.7219,
        0.6601, 0.6061, 0.5712, 0.6228, 0.7171, 0.6046, 0.8266, 0.8991, 0.6884,
        0.6869, 0.8016, 0.7965, 0.5711, 0.7248, 0.6235, 0.6934, 0.7528, 0.6958,
        0.5999, 0.5154, 0.6363, 0.8460, 0.6812, 0.7547, 0.5768, 0.6012, 0.7823,
        0.6272, 0.8026, 0.6150, 0.6251, 0.7591, 0.7080, 0.8025, 0.7428, 0.7958,
        0.6203, 0.5488, 0.7219, 0.6979, 0.7205, 0.7360, 0.6417, 0.6559, 0.6344,
        0.7848, 0.8898, 0.7276, 0.7182, 0.8651, 0.8227, 0.8458, 0.7227, 0.5731,
        0.7469, 0.7396, 0.6097, 0.9031, 0.7679, 0.6163, 0.7201, 0.5910, 0.6949,
        0.6444, 0.7756, 0.7571, 0.7120, 0.8128, 0.6061, 0.6414, 0.7400, 0.6613,
        0.5346, 0.6633, 0.7023, 0.6625, 0.7683, 0.5820, 0.8448, 0.7075, 0.6882,
        0.6855, 0.6613, 0.7241, 0.6634, 0.7161, 0.6797, 0.7083, 0.6447, 0.7539,
        0.7594, 0.6598, 0.6095, 0.8202, 0.4941, 0.6684, 0.7226, 0.8271, 0.6468,
        0.8167, 0.5500, 0.7291, 0.8690, 0.6403, 0.7338, 0.6709, 0.7155, 0.6819,
        0.6030, 0.8541, 0.8546, 0.8204, 0.7539, 0.8845, 0.6936, 0.8891, 0.7957,
        0.7880, 0.7405, 0.6419, 0.7576, 0.6962, 0.7067, 0.7352, 0.6105, 0.8960,
        0.6804, 0.7260, 0.6257, 0.5663, 0.8046, 0.7498, 0.8721, 0.8579, 0.6445,
        0.7370, 0.7545, 0.7041, 0.7794, 0.7028, 0.7128, 0.7423, 0.8888, 0.8205,
        0.7589, 0.8656, 0.7909, 0.7038, 0.5670, 0.7319, 0.6821, 0.7239, 0.7519,
        0.5880, 0.6791, 0.7017, 0.7796, 0.7195, 0.6329, 0.7144, 0.6648, 0.6556,
        0.6332, 0.7895, 0.7453, 0.8173, 0.6764, 0.7990, 0.6499, 0.5972, 0.8235,
        0.7023, 0.8118, 0.8952, 0.8528, 0.5716, 0.9036, 0.8633, 0.6014, 0.8421,
        0.7183, 0.6756, 0.7757, 0.5786, 0.8407, 0.6602, 0.8570, 0.7648, 0.8008,
        0.8541, 0.6697, 0.8655, 0.7893, 0.7635, 0.7320, 0.7800, 0.8012, 0.7122,
        0.6621, 0.6551, 0.6656, 0.6721, 0.7508, 0.8328, 0.7388, 0.6795, 0.6709,
        0.5825, 0.7260, 0.8847, 0.8561, 0.6503, 0.7727, 0.8053, 0.8335, 0.7057,
        0.8064, 0.8143, 0.6145, 0.6566, 0.5451, 0.7955, 0.6946, 0.7438, 0.7991,
        0.7642, 0.8724, 0.5607, 0.7491, 0.8238, 0.8539, 0.7182, 0.6679, 0.8195,
        0.6636, 0.8550, 0.7389, 0.6762, 0.7294, 0.6411, 0.8908, 0.8181, 0.8800,
        0.8669, 0.7229, 0.6624, 0.6808, 0.7459, 0.8523, 0.6826, 0.6742, 0.8166,
        0.8513, 0.6779, 0.6761, 0.5867, 0.6471, 0.6880, 0.7935, 0.6095, 0.8159,
        0.8293, 0.8836, 0.7249, 0.7166, 0.5891, 0.7768, 0.8640, 0.6563, 0.7157,
        0.7719, 0.8097, 0.7677, 0.6195, 0.6887, 0.6916, 0.8554, 0.8326, 0.7315,
        0.7480, 0.8589, 0.8421, 0.7265, 0.8412, 0.7531, 0.8492, 0.7720, 0.7388,
        0.7455, 0.6198, 0.5063, 0.4848, 0.8791, 0.7251, 0.8726, 0.8385, 0.5639,
        0.8720, 0.6706, 0.6245], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(532.2375, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([741, 1])
Inertia: tensor([149.0107], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([741, 1280])
Centroid_list: tensor([[-0.0427, -0.0829, -0.0547,  ..., -0.0368,  0.0826, -0.6170],
        [-0.0283, -0.0564, -0.0419,  ..., -0.0777,  0.0855, -0.2980],
        [-0.0141, -0.0446, -0.0421,  ..., -0.0663,  0.0661, -0.6699],
        ...,
        [-0.0283, -0.0564, -0.0419,  ..., -0.0777,  0.0855, -0.2980],
        [-0.0141, -0.0446, -0.0421,  ..., -0.0663,  0.0661, -0.6699],
        [-0.0141, -0.0446, -0.0421,  ..., -0.0663,  0.0661, -0.6699]],
       device='cuda:0')
Computed C_score: tensor([0.8535, 0.8516, 0.6944, 0.7975, 0.6888, 0.7060, 0.8358, 0.6314, 0.7452,
        0.5697, 0.6313, 0.6423, 0.8393, 0.7461, 0.9308, 0.6638, 0.6324, 0.9254,
        0.5582, 0.4965, 0.8624, 0.6449, 0.6734, 0.6970, 0.6810, 0.6730, 0.7596,
        0.7217, 0.7741, 0.9010, 0.6384, 0.8500, 0.8622, 0.5866, 0.9082, 0.5939,
        0.7264, 0.6369, 0.6741, 0.7789, 0.6100, 0.8050, 0.7707, 0.8797, 0.6989,
        0.5899, 0.8202, 0.7121, 0.7212, 0.8432, 0.5458, 0.5887, 0.6854, 0.6557,
        0.5501, 0.6670, 0.8578, 0.7291, 0.8241, 0.7098, 0.7601, 0.7587, 0.8778,
        0.8071, 0.7739, 0.4515, 0.9549, 0.4921, 0.6362, 0.6813, 0.6968, 0.7097,
        0.7641, 0.6579, 0.6895, 0.5965, 0.8408, 0.8538, 0.6609, 0.5981, 0.6499,
        0.5189, 0.8508, 0.7342, 0.6035, 0.7009, 0.6609, 0.7228, 0.7446, 0.6878,
        0.6898, 0.8389, 0.6648, 0.7745, 0.6340, 0.7080, 0.8519, 0.9257, 0.8041,
        0.5849, 0.6551, 0.7482, 0.8880, 0.6627, 0.7117, 0.6145, 0.7679, 0.8173,
        0.6339, 0.7331, 0.7560, 0.7770, 0.8396, 0.6698, 0.7975, 0.8548, 0.7247,
        0.7556, 0.7620, 0.7344, 0.8385, 0.6727, 0.6439, 0.8379, 0.8556, 0.6744,
        0.8712, 0.5638, 0.6657, 0.7904, 0.6436, 0.5885, 0.7800, 0.3507, 0.6461,
        0.9485, 0.8157, 0.8861, 0.8548, 0.6414, 0.7289, 0.7480, 0.7234, 0.7241,
        0.6721, 0.6395, 0.4964, 0.7968, 0.7078, 0.6423, 0.6671, 0.7187, 0.9321,
        0.6768, 0.6323, 0.6099, 0.7041, 0.7441, 0.6676, 0.8411, 0.7161, 0.5383,
        0.7062, 0.7007, 0.5795, 0.5965, 0.7918, 0.6839, 0.8099, 0.8119, 0.8735,
        0.8225, 0.6723, 0.6087, 0.6061, 0.7846, 0.5638, 0.6310, 0.7121, 0.8634,
        0.7456, 0.6114, 0.5153, 0.7091, 0.6755, 0.8067, 0.6807, 0.5870, 0.6719,
        0.8760, 0.7809, 0.6946, 0.6506, 0.8082, 0.7095, 0.8519, 0.9165, 0.5877,
        0.8856, 0.6430, 0.5801, 0.4533, 0.8759, 0.8881, 0.6191, 0.8337, 0.6902,
        0.6125, 0.7317, 0.6648, 0.7806, 0.6611, 0.6845, 0.6292, 0.5897, 0.5773,
        0.9041, 0.6828, 0.6716, 0.6223, 0.7725, 0.7468, 0.8074, 0.7032, 0.6994,
        0.6356, 0.7893, 0.7700, 0.6499, 0.6446, 0.8546, 0.7935, 0.8170, 0.7248,
        0.6940, 0.6580, 0.8268, 0.7253, 0.6058, 0.7059, 0.6102, 0.6508, 0.7323,
        0.7976, 0.7983, 0.6264, 0.6576, 0.6657, 0.7846, 0.7159, 0.7277, 0.8003,
        0.6722, 0.6375, 0.7828, 0.6451, 0.8104, 0.7839, 0.5982, 0.7222, 0.8911,
        0.7458, 0.7984, 0.6393, 0.7442, 0.6001, 0.7638, 0.8746, 0.7902, 0.8130,
        0.7292, 0.7459, 0.6504, 0.6077, 0.6959, 0.5650, 0.7294, 0.8080, 0.6718,
        0.7382, 0.8508, 0.8315, 0.5353, 0.7401, 0.6391, 0.7576, 0.7830, 0.7213,
        0.8648, 0.5717, 0.7891, 0.9173, 0.7800, 0.7083, 0.6902, 0.7805, 0.7429,
        0.6649, 0.5630, 0.6597, 0.6813, 0.6800, 0.6122, 0.7573, 0.8405, 0.6602,
        0.6390, 0.6653, 0.8258, 0.7726, 0.7407, 0.4821, 0.7819, 0.7358, 0.7712,
        0.8720, 0.5551, 0.6216, 0.7753, 0.8865, 0.8706, 0.6266, 0.7175, 0.8359,
        0.9431, 0.6843, 0.6611, 0.5257, 0.8329, 0.8441, 0.7615, 0.8613, 0.6998,
        0.8618, 0.6522, 0.7021, 0.7385, 0.5982, 0.8641, 0.6809, 0.5883, 0.6875,
        0.7161, 0.7587, 0.7223, 0.7313, 0.8253, 0.7136, 0.9446, 0.8011, 0.7327,
        0.8597, 0.6238, 0.9010, 0.7413, 0.7338, 0.6289, 0.7559, 0.6145, 0.5890,
        0.7241, 0.7810, 0.8908, 0.6906, 0.9450, 0.8215, 0.7650, 0.7491, 0.7579,
        0.6511, 0.6920, 0.7838, 0.7118, 0.6338, 0.8267, 0.7751, 0.7572, 0.6696,
        0.5681, 0.8091, 0.6663, 0.7120, 0.7773, 0.4212, 0.7359, 0.8446, 0.7982,
        0.9230, 0.6916, 0.6502, 0.6162, 0.9278, 0.7202, 0.6430, 0.7050, 0.7234,
        0.9002, 0.7131, 0.7256, 0.5390, 0.6053, 0.5997, 0.6808, 0.9448, 0.7247,
        0.7391, 0.8093, 0.8332, 0.8473, 0.7061, 0.7018, 0.6312, 0.8441, 0.7116,
        0.8629, 0.7226, 0.7050, 0.6626, 0.8562, 0.6386, 0.7059, 0.9430, 0.5649,
        0.9340, 0.8616, 0.5698, 0.5151, 0.8871, 0.5465, 0.5791, 0.8412, 0.6390,
        0.7298, 0.7147, 0.7311, 0.7317, 0.7080, 0.8607, 0.7344, 0.8451, 0.7159,
        0.6596, 0.6066, 0.5684, 0.6117, 0.7213, 0.6039, 0.8377, 0.9441, 0.6795,
        0.7430, 0.8669, 0.8004, 0.5712, 0.7198, 0.6334, 0.6811, 0.7442, 0.6937,
        0.5978, 0.5162, 0.6372, 0.8678, 0.6819, 0.7550, 0.5670, 0.6068, 0.7847,
        0.6264, 0.8073, 0.7000, 0.6141, 0.7618, 0.7045, 0.8965, 0.7370, 0.8829,
        0.6034, 0.5224, 0.7147, 0.6945, 0.7146, 0.7446, 0.7417, 0.6584, 0.6443,
        0.7810, 0.9027, 0.7315, 0.7169, 0.8656, 0.8558, 0.8827, 0.7329, 0.5668,
        0.7414, 0.7493, 0.6058, 0.8957, 0.8377, 0.6198, 0.7218, 0.6028, 0.6753,
        0.6448, 0.7504, 0.7530, 0.7089, 0.8203, 0.6055, 0.6405, 0.7198, 0.6550,
        0.5196, 0.6515, 0.7061, 0.8048, 0.8445, 0.5796, 0.8549, 0.6949, 0.6939,
        0.6929, 0.6623, 0.7235, 0.6663, 0.7308, 0.6824, 0.7124, 0.7023, 0.7401,
        0.7648, 0.6659, 0.6627, 0.9318, 0.4997, 0.6705, 0.7173, 0.7993, 0.7230,
        0.8186, 0.5561, 0.7395, 0.9336, 0.6466, 0.7337, 0.6730, 0.7096, 0.6895,
        0.6099, 0.9280, 0.8572, 0.8186, 0.7562, 0.9630, 0.6889, 0.8639, 0.7992,
        0.8585, 0.7521, 0.7209, 0.7582, 0.6860, 0.6941, 0.8325, 0.6085, 0.8619,
        0.6734, 0.7135, 0.6006, 0.5634, 0.8114, 0.7536, 0.9129, 0.8605, 0.6278,
        0.7432, 0.7958, 0.6733, 0.7774, 0.7097, 0.7150, 0.7418, 0.9208, 0.8185,
        0.7645, 0.8880, 0.7887, 0.6947, 0.5720, 0.7314, 0.6796, 0.7251, 0.7525,
        0.5896, 0.6859, 0.6993, 0.7825, 0.7218, 0.6452, 0.7154, 0.6702, 0.6568,
        0.6382, 0.7906, 0.7447, 0.8575, 0.6809, 0.8009, 0.6392, 0.6066, 0.8264,
        0.6970, 0.8180, 0.9368, 0.8614, 0.5757, 0.8798, 0.8720, 0.5944, 0.8396,
        0.7149, 0.6772, 0.7811, 0.5693, 0.8412, 0.6675, 0.8642, 0.7340, 0.8016,
        0.9406, 0.6735, 0.8681, 0.7972, 0.7666, 0.8299, 0.7713, 0.7816, 0.7087,
        0.6709, 0.6509, 0.6682, 0.6778, 0.7497, 0.8392, 0.7397, 0.8149, 0.7304,
        0.5867, 0.7242, 0.8889, 0.8556, 0.6400, 0.7759, 0.8021, 0.9445, 0.7273,
        0.9147, 0.8263, 0.6045, 0.7927, 0.5407, 0.7494, 0.6987, 0.8784, 0.8064,
        0.8724, 0.8686, 0.5630, 0.7842, 0.8879, 0.8506, 0.7827, 0.6803, 0.8283,
        0.6694, 0.9115, 0.7307, 0.6685, 0.8268, 0.6366, 0.9076, 0.8291, 0.8585,
        0.8681, 0.7272, 0.6704, 0.6751, 0.7454, 0.9295, 0.6882, 0.6750, 0.8147,
        0.9162, 0.6852, 0.6791, 0.5775, 0.6423, 0.6886, 0.8054, 0.7364, 0.8139,
        0.8352, 0.9534, 0.7190, 0.7066, 0.6717, 0.7877, 0.9531, 0.6591, 0.7199,
        0.7683, 0.9119, 0.7678, 0.6245, 0.6838, 0.6893, 0.8621, 0.8386, 0.7280,
        0.8422, 0.9292, 0.8373, 0.7150, 0.8513, 0.7215, 0.8561, 0.7776, 0.8343,
        0.7495, 0.6492, 0.4835, 0.4906, 0.8582, 0.7253, 0.8714, 0.8881, 0.5679,
        0.9052, 0.6715, 0.6384], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(541.4574, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([741, 1])
Inertia: tensor([149.0107], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([741, 1280])
Centroid_list: tensor([[-0.0427, -0.0829, -0.0547,  ..., -0.0368,  0.0826, -0.6170],
        [-0.0276, -0.0588, -0.0418,  ..., -0.0802,  0.0851, -0.2615],
        [-0.0130, -0.0485, -0.0453,  ..., -0.0710,  0.0610, -0.6231],
        ...,
        [-0.0276, -0.0588, -0.0418,  ..., -0.0802,  0.0851, -0.2615],
        [-0.0130, -0.0485, -0.0453,  ..., -0.0710,  0.0610, -0.6231],
        [-0.0264, -0.0391, -0.0374,  ..., -0.0513,  0.0869, -0.8928]],
       device='cuda:0')
Computed C_score: tensor([0.8535, 0.8563, 0.6929, 0.7799, 0.7060, 0.7242, 0.8376, 0.6348, 0.7311,
        0.5650, 0.6539, 0.6273, 0.8447, 0.7603, 0.9308, 0.6709, 0.6436, 0.9254,
        0.6310, 0.5130, 0.8609, 0.6529, 0.7050, 0.6647, 0.6771, 0.6776, 0.7688,
        0.7102, 0.7629, 0.9100, 0.6673, 0.8500, 0.8728, 0.8064, 0.9082, 0.5886,
        0.7651, 0.6326, 0.6572, 0.7676, 0.6186, 0.7757, 0.7756, 0.8920, 0.7085,
        0.6118, 0.8292, 0.7710, 0.7968, 0.8362, 0.5365, 0.6215, 0.6856, 0.6444,
        0.5826, 0.6720, 0.8567, 0.7207, 0.8225, 0.7610, 0.7904, 0.7240, 0.9013,
        0.8109, 0.7969, 0.4831, 0.9549, 0.4738, 0.7322, 0.6359, 0.7225, 0.6725,
        0.7832, 0.7439, 0.6643, 0.7163, 0.8490, 0.8570, 0.6413, 0.6245, 0.6992,
        0.5615, 0.8457, 0.7593, 0.6027, 0.6944, 0.7090, 0.7074, 0.7337, 0.7052,
        0.6759, 0.8462, 0.6706, 0.7920, 0.6071, 0.7173, 0.8519, 0.9257, 0.8194,
        0.5970, 0.6295, 0.7213, 0.8887, 0.6619, 0.6883, 0.6365, 0.7615, 0.8189,
        0.6330, 0.7472, 0.7404, 0.7796, 0.8416, 0.7692, 0.8071, 0.8604, 0.7364,
        0.7525, 0.7714, 0.8671, 0.8640, 0.6786, 0.6454, 0.8373, 0.8475, 0.7270,
        0.8712, 0.5716, 0.6667, 0.7878, 0.6880, 0.6376, 0.8112, 0.3591, 0.6293,
        0.9485, 0.8148, 0.9002, 0.8637, 0.6117, 0.7157, 0.7358, 0.7257, 0.7139,
        0.6359, 0.6421, 0.5695, 0.8019, 0.7399, 0.6529, 0.6976, 0.7675, 0.9321,
        0.6462, 0.6501, 0.5963, 0.6980, 0.7466, 0.6713, 0.8495, 0.7149, 0.5324,
        0.6996, 0.7084, 0.5831, 0.6238, 0.7931, 0.6897, 0.8137, 0.8146, 0.8716,
        0.8219, 0.6838, 0.7517, 0.6727, 0.7861, 0.7261, 0.6173, 0.7357, 0.8713,
        0.7631, 0.5852, 0.7390, 0.7537, 0.6855, 0.7931, 0.6731, 0.7138, 0.6881,
        0.8880, 0.7618, 0.6984, 0.6414, 0.8082, 0.7032, 0.8520, 0.9165, 0.5797,
        0.8878, 0.7677, 0.6031, 0.5431, 0.8811, 0.8881, 0.7625, 0.8399, 0.6907,
        0.6250, 0.7422, 0.7079, 0.7861, 0.6960, 0.7409, 0.6331, 0.5944, 0.7401,
        0.9041, 0.7037, 0.6839, 0.5929, 0.7780, 0.7755, 0.8357, 0.7041, 0.7882,
        0.6194, 0.7716, 0.7694, 0.7417, 0.7749, 0.8721, 0.7964, 0.8340, 0.7545,
        0.7126, 0.7080, 0.8408, 0.7022, 0.6118, 0.7436, 0.6041, 0.8081, 0.7585,
        0.7976, 0.7702, 0.6134, 0.6609, 0.6684, 0.7833, 0.7047, 0.7585, 0.8007,
        0.6668, 0.8115, 0.7984, 0.7414, 0.7977, 0.7825, 0.6003, 0.7359, 0.8942,
        0.7679, 0.8034, 0.6337, 0.7626, 0.5851, 0.7501, 0.8687, 0.8121, 0.7983,
        0.7360, 0.7852, 0.6494, 0.5801, 0.7070, 0.6430, 0.7181, 0.7831, 0.7637,
        0.7445, 0.8519, 0.8419, 0.5622, 0.7747, 0.6794, 0.7700, 0.7829, 0.7275,
        0.8722, 0.5726, 0.7920, 0.9173, 0.7771, 0.7150, 0.7338, 0.7730, 0.7397,
        0.7223, 0.5958, 0.6602, 0.7472, 0.6788, 0.6263, 0.7808, 0.8638, 0.7104,
        0.6817, 0.6316, 0.8190, 0.7842, 0.7453, 0.7026, 0.8043, 0.7552, 0.7644,
        0.8720, 0.5329, 0.7869, 0.7535, 0.8959, 0.8773, 0.6728, 0.7474, 0.8526,
        0.9431, 0.8216, 0.6686, 0.6089, 0.8237, 0.8579, 0.7579, 0.8613, 0.7073,
        0.8712, 0.6889, 0.7360, 0.7468, 0.6101, 0.8743, 0.6390, 0.5720, 0.6972,
        0.7128, 0.7896, 0.7268, 0.7386, 0.8399, 0.7259, 0.9446, 0.8124, 0.7281,
        0.8774, 0.6138, 0.9118, 0.7357, 0.7154, 0.7594, 0.7714, 0.6721, 0.7846,
        0.6877, 0.7940, 0.8908, 0.7137, 0.9450, 0.8164, 0.7768, 0.7412, 0.7331,
        0.7056, 0.6534, 0.7783, 0.7051, 0.7943, 0.8160, 0.7759, 0.7653, 0.7951,
        0.5986, 0.8048, 0.6568, 0.7081, 0.7747, 0.5655, 0.7314, 0.8661, 0.8096,
        0.9230, 0.7005, 0.6960, 0.6109, 0.9278, 0.7179, 0.6576, 0.7380, 0.7329,
        0.9002, 0.7367, 0.7032, 0.5835, 0.7784, 0.7150, 0.7288, 0.9448, 0.7115,
        0.7421, 0.8000, 0.8612, 0.8422, 0.7226, 0.7132, 0.6121, 0.8468, 0.7118,
        0.8638, 0.7305, 0.7204, 0.6979, 0.8727, 0.6300, 0.6927, 0.9430, 0.6828,
        0.9340, 0.8667, 0.7373, 0.5351, 0.8910, 0.6811, 0.6534, 0.8403, 0.6592,
        0.7952, 0.7093, 0.7234, 0.7222, 0.7415, 0.8607, 0.7420, 0.8535, 0.7246,
        0.6969, 0.7558, 0.5374, 0.6247, 0.7433, 0.6100, 0.8499, 0.9441, 0.7166,
        0.7453, 0.8722, 0.8135, 0.6148, 0.6987, 0.6924, 0.7067, 0.7270, 0.7101,
        0.7721, 0.5470, 0.6604, 0.8699, 0.7266, 0.8075, 0.5940, 0.6088, 0.7766,
        0.6429, 0.7929, 0.6955, 0.7242, 0.7662, 0.7092, 0.8965, 0.8096, 0.8829,
        0.6037, 0.5419, 0.7227, 0.6987, 0.7511, 0.7099, 0.7479, 0.6801, 0.6145,
        0.7674, 0.9027, 0.7275, 0.6889, 0.8645, 0.8632, 0.8823, 0.7055, 0.5511,
        0.7189, 0.7722, 0.6454, 0.8957, 0.8427, 0.6034, 0.7171, 0.6273, 0.6751,
        0.6671, 0.7477, 0.8179, 0.7183, 0.8489, 0.6476, 0.6179, 0.7337, 0.6715,
        0.5363, 0.6945, 0.7224, 0.8152, 0.8457, 0.6148, 0.8601, 0.6928, 0.7410,
        0.7079, 0.6498, 0.7040, 0.7224, 0.6871, 0.6761, 0.7193, 0.6945, 0.7528,
        0.7658, 0.6426, 0.6606, 0.9318, 0.5311, 0.6612, 0.7247, 0.8032, 0.7305,
        0.8485, 0.6909, 0.7679, 0.9336, 0.6494, 0.7685, 0.7035, 0.7150, 0.6983,
        0.6614, 0.9280, 0.8546, 0.8376, 0.7859, 0.9630, 0.7293, 0.8639, 0.7688,
        0.8653, 0.7415, 0.7198, 0.7438, 0.6925, 0.7223, 0.8325, 0.6036, 0.8619,
        0.6770, 0.7305, 0.5950, 0.5472, 0.8126, 0.7832, 0.9129, 0.8638, 0.6272,
        0.7173, 0.8072, 0.6596, 0.8220, 0.7074, 0.7121, 0.7766, 0.9208, 0.8266,
        0.7704, 0.8880, 0.7964, 0.7104, 0.6077, 0.7552, 0.7184, 0.7086, 0.7733,
        0.7573, 0.6939, 0.7080, 0.7659, 0.7344, 0.6478, 0.7298, 0.6555, 0.6835,
        0.6633, 0.8170, 0.7527, 0.8542, 0.6625, 0.7989, 0.6454, 0.5830, 0.8024,
        0.6935, 0.8434, 0.9368, 0.8586, 0.5397, 0.8829, 0.8661, 0.6067, 0.8402,
        0.7241, 0.6700, 0.7854, 0.5948, 0.8555, 0.6947, 0.8645, 0.7191, 0.8157,
        0.9406, 0.6506, 0.8829, 0.8018, 0.7559, 0.8299, 0.7638, 0.7816, 0.7460,
        0.6575, 0.6506, 0.6839, 0.7022, 0.7361, 0.8369, 0.7219, 0.8217, 0.7242,
        0.6684, 0.7267, 0.8947, 0.8428, 0.7409, 0.7571, 0.8126, 0.9445, 0.7337,
        0.9147, 0.8260, 0.6080, 0.7997, 0.5985, 0.7451, 0.7690, 0.8784, 0.8078,
        0.8762, 0.8709, 0.7169, 0.7842, 0.8879, 0.8648, 0.7765, 0.6943, 0.8313,
        0.6620, 0.9115, 0.7324, 0.7027, 0.8268, 0.6114, 0.9161, 0.8475, 0.8593,
        0.8506, 0.7237, 0.7371, 0.6960, 0.7469, 0.9383, 0.6559, 0.7040, 0.8242,
        0.9162, 0.7587, 0.7007, 0.5824, 0.6856, 0.7017, 0.7808, 0.7476, 0.8167,
        0.8421, 0.9534, 0.7249, 0.7264, 0.6728, 0.7983, 0.9531, 0.6497, 0.7562,
        0.7399, 0.9119, 0.7869, 0.5943, 0.8115, 0.6786, 0.8751, 0.8550, 0.7502,
        0.8515, 0.9292, 0.8451, 0.7584, 0.8597, 0.7206, 0.8774, 0.8045, 0.8328,
        0.7285, 0.6327, 0.5176, 0.5096, 0.8582, 0.7768, 0.8707, 0.8864, 0.6740,
        0.9085, 0.6396, 0.7068], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(552.5949, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0013, 0.0039, 0.0073, 0.0118], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([2739, 1280])
S-Scores: tensor([0.6085, 1.8369, 3.8698, 6.6735], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([2739, 1])
Inertia: tensor([210.9674], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([2739, 1280])
Centroid_list: tensor([[-0.0380, -0.0725, -0.0614,  ..., -0.0593,  0.0871, -0.2387],
        [-0.0380, -0.0725, -0.0614,  ..., -0.0593,  0.0871, -0.2387],
        [-0.0199, -0.0544, -0.0712,  ..., -0.0519,  0.0709, -0.2900],
        ...,
        [-0.0380, -0.0725, -0.0614,  ..., -0.0593,  0.0871, -0.2387],
        [-0.0199, -0.0544, -0.0712,  ..., -0.0519,  0.0709, -0.2900],
        [-0.0199, -0.0544, -0.0712,  ..., -0.0519,  0.0709, -0.2900]],
       device='cuda:0')
Computed C_score: tensor([0.7117, 0.8894, 0.7086,  ..., 0.7998, 0.7879, 0.6321], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1956.1484, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2739, 1])
Inertia: tensor([222.2150], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([2739, 1280])
Centroid_list: tensor([[-0.0372, -0.0737, -0.0614,  ..., -0.0579,  0.0886, -0.2336],
        [-0.0372, -0.0737, -0.0614,  ..., -0.0579,  0.0886, -0.2336],
        [-0.0311, -0.0543, -0.0647,  ..., -0.0694,  0.0753, -0.1441],
        ...,
        [-0.0372, -0.0737, -0.0614,  ..., -0.0579,  0.0886, -0.2336],
        [-0.0059, -0.0562, -0.0795,  ..., -0.0272,  0.0653, -0.5058],
        [-0.0311, -0.0543, -0.0647,  ..., -0.0694,  0.0753, -0.1441]],
       device='cuda:0')
Computed C_score: tensor([0.7054, 0.9113, 0.8026,  ..., 0.7893, 0.8166, 0.7081], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2040.3943, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2739, 1])
Inertia: tensor([226.2438], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([2739, 1280])
Centroid_list: tensor([[-0.0374, -0.0733, -0.0611,  ..., -0.0575,  0.0890, -0.2240],
        [-0.0374, -0.0733, -0.0611,  ..., -0.0575,  0.0890, -0.2240],
        [-0.0494, -0.0763, -0.0712,  ..., -0.0670,  0.0714, -0.3207],
        ...,
        [-0.0374, -0.0733, -0.0611,  ..., -0.0575,  0.0890, -0.2240],
        [-0.0056, -0.0566, -0.0800,  ..., -0.0243,  0.0646, -0.5335],
        [-0.0494, -0.0763, -0.0712,  ..., -0.0670,  0.0714, -0.3207]],
       device='cuda:0')
Computed C_score: tensor([0.7020, 0.9154, 0.8702,  ..., 0.7857, 0.8176, 0.7104], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2090.4639, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2739, 1])
Inertia: tensor([226.2275], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([2739, 1280])
Centroid_list: tensor([[-0.0194, -0.0477, -0.0668,  ..., -0.0667,  0.0854, -0.0222],
        [-0.0390, -0.0738, -0.0613,  ..., -0.0572,  0.0889, -0.2272],
        [-0.0514, -0.0773, -0.0714,  ..., -0.0671,  0.0711, -0.3228],
        ...,
        [-0.0390, -0.0738, -0.0613,  ..., -0.0572,  0.0889, -0.2272],
        [-0.0054, -0.0567, -0.0804,  ..., -0.0236,  0.0641, -0.5435],
        [-0.0514, -0.0773, -0.0714,  ..., -0.0671,  0.0711, -0.3228]],
       device='cuda:0')
Computed C_score: tensor([0.6667, 0.9183, 0.8724,  ..., 0.7829, 0.8183, 0.7111], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(2112.6973, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0003, 0.0009, 0.0018, 0.0031], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([199, 1280])
S-Scores: tensor([0.6582, 1.7641, 3.6301, 6.1133], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([199, 1])
Inertia: tensor([173.1551], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([199, 1280])
Centroid_list: tensor([[-0.0177, -0.0581, -0.0386,  ..., -0.0798,  0.0706, -0.3859],
        [-0.0444, -0.0893, -0.0619,  ..., -0.0679,  0.0742, -0.4159],
        [-0.0177, -0.0581, -0.0386,  ..., -0.0798,  0.0706, -0.3859],
        ...,
        [-0.0444, -0.0893, -0.0619,  ..., -0.0679,  0.0742, -0.4159],
        [-0.0177, -0.0581, -0.0386,  ..., -0.0798,  0.0706, -0.3859],
        [-0.0177, -0.0581, -0.0386,  ..., -0.0798,  0.0706, -0.3859]],
       device='cuda:0')
Computed C_score: tensor([0.7521, 0.8190, 0.7880, 0.7046, 0.8072, 0.4012, 0.6911, 0.6470, 0.7345,
        0.7969, 0.8398, 0.6534, 0.7790, 0.6663, 0.7707, 0.7217, 0.8140, 0.6428,
        0.8155, 0.5538, 0.8172, 0.8197, 0.9067, 0.6600, 0.7524, 0.6228, 0.7356,
        0.8255, 0.7605, 0.7027, 0.8107, 0.8113, 0.7372, 0.7238, 0.7020, 0.8024,
        0.7813, 0.6631, 0.7485, 0.7281, 0.8549, 0.8744, 0.8252, 0.5420, 0.8322,
        0.8044, 0.7752, 0.7076, 0.8172, 0.7795, 0.7740, 0.8098, 0.6256, 0.7146,
        0.8024, 0.7609, 0.7475, 0.5825, 0.6635, 0.7250, 0.6441, 0.6711, 0.7160,
        0.8332, 0.7712, 0.7498, 0.7066, 0.5931, 0.7193, 0.8525, 0.8027, 0.7768,
        0.7434, 0.8446, 0.7280, 0.6458, 0.7173, 0.7168, 0.8089, 0.6280, 0.6805,
        0.8003, 0.5774, 0.6781, 0.6522, 0.6907, 0.7708, 0.7260, 0.8120, 0.7998,
        0.7774, 0.8002, 0.7225, 0.7510, 0.7158, 0.7877, 0.5147, 0.7071, 0.6662,
        0.8221, 0.4696, 0.7342, 0.7813, 0.7586, 0.6469, 0.7301, 0.7944, 0.8074,
        0.7565, 0.7858, 0.8542, 0.6581, 0.6561, 0.7092, 0.7535, 0.7405, 0.7839,
        0.7358, 0.6290, 0.7697, 0.8023, 0.5750, 0.7263, 0.7746, 0.7680, 0.7584,
        0.6967, 0.6706, 0.7502, 0.6797, 0.6185, 0.7819, 0.7532, 0.7872, 0.7671,
        0.8217, 0.8064, 0.7624, 0.8008, 0.7972, 0.6329, 0.7158, 0.5041, 0.8136,
        0.7759, 0.7634, 0.7434, 0.7116, 0.6294, 0.7906, 0.7287, 0.6156, 0.7947,
        0.7331, 0.8098, 0.6935, 0.8126, 0.7207, 0.7781, 0.6912, 0.6596, 0.7426,
        0.6592, 0.5517, 0.8100, 0.5441, 0.7650, 0.6350, 0.7266, 0.8033, 0.7263,
        0.5651, 0.6672, 0.8281, 0.8728, 0.4504, 0.7824, 0.8033, 0.5370, 0.6151,
        0.7394, 0.7747, 0.7248, 0.7413, 0.7344, 0.7222, 0.8460, 0.7894, 0.5719,
        0.7396, 0.7772, 0.8038, 0.7148, 0.7438, 0.6824, 0.7384, 0.7557, 0.6676,
        0.7141], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(145.2884, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([199, 1])
Inertia: tensor([166.4349], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([199, 1280])
Centroid_list: tensor([[-0.0162, -0.0548, -0.0380,  ..., -0.0797,  0.0693, -0.3878],
        [-0.0408, -0.0846, -0.0536,  ..., -0.0741,  0.0730, -0.3750],
        [-0.0162, -0.0548, -0.0380,  ..., -0.0797,  0.0693, -0.3878],
        ...,
        [-0.0408, -0.0846, -0.0536,  ..., -0.0741,  0.0730, -0.3750],
        [-0.0162, -0.0548, -0.0380,  ..., -0.0797,  0.0693, -0.3878],
        [-0.0408, -0.0846, -0.0536,  ..., -0.0741,  0.0730, -0.3750]],
       device='cuda:0')
Computed C_score: tensor([0.7630, 0.8388, 0.7776, 0.6936, 0.8416, 0.4273, 0.7912, 0.6090, 0.7834,
        0.8027, 0.8497, 0.6629, 0.8873, 0.6607, 0.8373, 0.8135, 0.8296, 0.6465,
        0.8190, 0.5482, 0.7468, 0.8229, 0.8833, 0.6485, 0.9267, 0.6634, 0.7310,
        0.8257, 0.7978, 0.7002, 0.8610, 0.8191, 0.7260, 0.7203, 0.7200, 0.8466,
        0.7696, 0.6778, 0.7585, 0.7406, 0.8788, 0.8785, 0.8344, 0.5420, 0.8403,
        0.8179, 0.9554, 0.6932, 0.8288, 0.7887, 0.8515, 0.8394, 0.7014, 0.8268,
        0.7744, 0.7643, 0.7683, 0.5819, 0.7124, 0.8435, 0.6503, 0.7503, 0.7131,
        0.8757, 0.7761, 0.6913, 0.8137, 0.6222, 0.7725, 0.9085, 0.7995, 0.9432,
        0.7524, 0.7999, 0.7242, 0.6396, 0.7088, 0.7088, 0.7971, 0.7446, 0.6817,
        0.8864, 0.5278, 0.6801, 0.6497, 0.8023, 0.9438, 0.6721, 0.8328, 0.8147,
        0.7380, 0.7999, 0.7292, 0.7416, 0.7652, 0.7771, 0.5212, 0.7260, 0.6619,
        0.7745, 0.5223, 0.7201, 0.7936, 0.7694, 0.6404, 0.7205, 0.8066, 0.8004,
        0.7560, 0.8402, 0.8732, 0.6667, 0.6494, 0.7124, 0.7601, 0.7504, 0.7798,
        0.7350, 0.6292, 0.6851, 0.7863, 0.5670, 0.7301, 0.7917, 0.7785, 0.8074,
        0.6982, 0.7551, 0.9476, 0.6836, 0.5571, 0.7562, 0.7487, 0.9439, 0.7747,
        0.8244, 0.8195, 0.7348, 0.8113, 0.7915, 0.6930, 0.7212, 0.4781, 0.8240,
        0.9482, 0.7696, 0.7031, 0.7578, 0.6427, 0.8596, 0.7621, 0.6471, 0.9205,
        0.7277, 0.8158, 0.7689, 0.9273, 0.7556, 0.7635, 0.6900, 0.6725, 0.9483,
        0.8022, 0.5940, 0.8169, 0.5839, 0.9477, 0.6423, 0.6555, 0.8092, 0.7253,
        0.5637, 0.6614, 0.8384, 0.8406, 0.4408, 0.7974, 0.8115, 0.5483, 0.6026,
        0.9454, 0.8084, 0.7323, 0.7423, 0.7370, 0.7055, 0.8565, 0.9415, 0.6154,
        0.7394, 0.7648, 0.8049, 0.7055, 0.7033, 0.6934, 0.7412, 0.8475, 0.6598,
        0.7170], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(149.7666, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([199, 1])
Inertia: tensor([138.5879], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([199, 1280])
Centroid_list: tensor([[-0.0143, -0.0504, -0.0336,  ..., -0.0777,  0.0669, -0.4984],
        [-0.0407, -0.0835, -0.0546,  ..., -0.0747,  0.0708, -0.3889],
        [-0.0217, -0.0702, -0.0482,  ..., -0.0806,  0.0768, -0.2165],
        ...,
        [-0.0407, -0.0835, -0.0546,  ..., -0.0747,  0.0708, -0.3889],
        [-0.0217, -0.0702, -0.0482,  ..., -0.0806,  0.0768, -0.2165],
        [-0.0407, -0.0835, -0.0546,  ..., -0.0747,  0.0708, -0.3889]],
       device='cuda:0')
Computed C_score: tensor([0.8076, 0.8465, 0.8027, 0.7473, 0.8312, 0.4926, 0.7764, 0.6217, 0.7707,
        0.7854, 0.8854, 0.7155, 0.8887, 0.6522, 0.8425, 0.8078, 0.8603, 0.6480,
        0.8002, 0.6069, 0.7761, 0.7951, 0.9066, 0.7059, 0.9259, 0.6623, 0.7161,
        0.8218, 0.7972, 0.6930, 0.8647, 0.8732, 0.8140, 0.7724, 0.7209, 0.8486,
        0.7722, 0.7252, 0.7583, 0.7795, 0.8887, 0.8777, 0.8492, 0.5431, 0.8306,
        0.8196, 0.9618, 0.8182, 0.8541, 0.7874, 0.8422, 0.8488, 0.6831, 0.8110,
        0.8034, 0.8032, 0.7716, 0.6900, 0.7133, 0.8296, 0.6692, 0.7218, 0.7075,
        0.8767, 0.7438, 0.7134, 0.8015, 0.6103, 0.7637, 0.9087, 0.8007, 0.9486,
        0.7812, 0.7802, 0.7425, 0.6545, 0.7498, 0.6899, 0.7872, 0.7208, 0.7170,
        0.8937, 0.5445, 0.7149, 0.6723, 0.7905, 0.9486, 0.7026, 0.8243, 0.8278,
        0.7578, 0.7663, 0.7405, 0.7417, 0.7641, 0.8233, 0.5487, 0.7808, 0.6590,
        0.7958, 0.4828, 0.8368, 0.8153, 0.7502, 0.6751, 0.7719, 0.8110, 0.8110,
        0.8349, 0.8345, 0.8718, 0.7049, 0.7298, 0.7922, 0.7643, 0.7444, 0.7581,
        0.7086, 0.6295, 0.7109, 0.7997, 0.6434, 0.7884, 0.7952, 0.8246, 0.8054,
        0.7497, 0.7334, 0.9502, 0.7425, 0.5625, 0.7778, 0.7764, 0.9513, 0.7469,
        0.8295, 0.8246, 0.7387, 0.8355, 0.7814, 0.7026, 0.7767, 0.4709, 0.8256,
        0.9530, 0.8227, 0.7198, 0.7357, 0.6581, 0.8647, 0.7593, 0.7118, 0.9269,
        0.7953, 0.8135, 0.7528, 0.9205, 0.7432, 0.7711, 0.6725, 0.7247, 0.9534,
        0.7798, 0.6004, 0.8258, 0.6119, 0.9525, 0.6715, 0.6829, 0.8360, 0.7360,
        0.6029, 0.6877, 0.8483, 0.8620, 0.5725, 0.8257, 0.8286, 0.5754, 0.5974,
        0.9512, 0.7889, 0.7659, 0.7166, 0.7805, 0.7224, 0.8673, 0.9448, 0.6065,
        0.6797, 0.7732, 0.8229, 0.7251, 0.7123, 0.7120, 0.7500, 0.8424, 0.6979,
        0.7166], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(152.5749, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([199, 1])
Inertia: tensor([136.4903], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([199, 1280])
Centroid_list: tensor([[-0.0139, -0.0494, -0.0327,  ..., -0.0760,  0.0673, -0.5416],
        [-0.0547, -0.0986, -0.0596,  ..., -0.0742,  0.0670, -0.4061],
        [-0.0220, -0.0650, -0.0486,  ..., -0.0827,  0.0762, -0.1835],
        ...,
        [-0.0547, -0.0986, -0.0596,  ..., -0.0742,  0.0670, -0.4061],
        [-0.0220, -0.0650, -0.0486,  ..., -0.0827,  0.0762, -0.1835],
        [-0.0139, -0.0494, -0.0327,  ..., -0.0760,  0.0673, -0.5416]],
       device='cuda:0')
Computed C_score: tensor([0.8108, 0.8287, 0.7982, 0.7258, 0.8348, 0.4789, 0.8693, 0.7708, 0.8082,
        0.8148, 0.8904, 0.7300, 0.8932, 0.6479, 0.8353, 0.8807, 0.8631, 0.7078,
        0.7938, 0.6128, 0.7942, 0.8032, 0.8706, 0.7207, 0.9242, 0.7414, 0.7167,
        0.8225, 0.8166, 0.6889, 0.8437, 0.8799, 0.8202, 0.7707, 0.7127, 0.8530,
        0.7731, 0.7281, 0.7540, 0.7881, 0.8854, 0.8754, 0.8428, 0.5434, 0.8255,
        0.7938, 0.9683, 0.8170, 0.8578, 0.8001, 0.8850, 0.8488, 0.7752, 0.8888,
        0.7680, 0.8221, 0.7709, 0.7024, 0.7895, 0.9118, 0.6734, 0.7514, 0.6812,
        0.8690, 0.7468, 0.8908, 0.8863, 0.5825, 0.7670, 0.9286, 0.7973, 0.9555,
        0.7804, 0.8326, 0.7523, 0.6870, 0.7486, 0.6913, 0.7787, 0.8198, 0.7313,
        0.8998, 0.5706, 0.7145, 0.6686, 0.8718, 0.9539, 0.7747, 0.8592, 0.8257,
        0.8798, 0.8073, 0.7308, 0.6970, 0.7698, 0.8285, 0.5487, 0.7834, 0.6791,
        0.7873, 0.4655, 0.8307, 0.8215, 0.7463, 0.6728, 0.7757, 0.8136, 0.8150,
        0.8428, 0.8879, 0.8708, 0.7072, 0.7288, 0.8102, 0.7725, 0.7550, 0.7532,
        0.7177, 0.6273, 0.8365, 0.7909, 0.6127, 0.7987, 0.7650, 0.8262, 0.8054,
        0.7468, 0.8087, 0.9543, 0.7567, 0.6917, 0.7372, 0.7824, 0.9521, 0.7460,
        0.8232, 0.8223, 0.6979, 0.8337, 0.7758, 0.7925, 0.7838, 0.5044, 0.8312,
        0.9617, 0.8206, 0.8852, 0.7953, 0.6642, 0.8870, 0.7764, 0.6967, 0.9297,
        0.7921, 0.8172, 0.7856, 0.8996, 0.7588, 0.7984, 0.6763, 0.7316, 0.9582,
        0.8789, 0.6909, 0.8289, 0.6553, 0.9620, 0.6725, 0.8301, 0.8393, 0.7327,
        0.6000, 0.6836, 0.8500, 0.8533, 0.5512, 0.8261, 0.8160, 0.5802, 0.6092,
        0.9622, 0.8521, 0.7670, 0.7297, 0.7828, 0.7056, 0.8708, 0.9470, 0.6749,
        0.8174, 0.7552, 0.8349, 0.7843, 0.7931, 0.7154, 0.7486, 0.8942, 0.6895,
        0.6950], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(155.7969, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0045, 0.0116, 0.0232, 0.0378], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1942, 1280])
S-Scores: tensor([0.6624, 1.9855, 4.1582, 6.5011], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1942, 1])
Inertia: tensor([105.6786], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1942, 1280])
Centroid_list: tensor([[-0.0145, -0.0320, -0.0594,  ..., -0.0694,  0.0488, -0.2644],
        [-0.0145, -0.0320, -0.0594,  ..., -0.0694,  0.0488, -0.2644],
        [-0.0145, -0.0320, -0.0594,  ..., -0.0694,  0.0488, -0.2644],
        ...,
        [-0.0145, -0.0320, -0.0594,  ..., -0.0694,  0.0488, -0.2644],
        [-0.0145, -0.0320, -0.0594,  ..., -0.0694,  0.0488, -0.2644],
        [-0.0145, -0.0320, -0.0594,  ..., -0.0694,  0.0488, -0.2644]],
       device='cuda:0')
Computed C_score: tensor([0.8893, 0.5973, 0.5648,  ..., 0.8101, 0.6017, 0.8646], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1449.6255, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1942, 1])
Inertia: tensor([84.9522], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1942, 1280])
Centroid_list: tensor([[-0.0179, -0.0189, -0.0679,  ..., -0.0585,  0.0409, -0.3250],
        [-0.0086, -0.0595, -0.0430,  ..., -0.0877,  0.0682, -0.2036],
        [-0.0086, -0.0595, -0.0430,  ..., -0.0877,  0.0682, -0.2036],
        ...,
        [-0.0179, -0.0189, -0.0679,  ..., -0.0585,  0.0409, -0.3250],
        [-0.0086, -0.0595, -0.0430,  ..., -0.0877,  0.0682, -0.2036],
        [-0.0179, -0.0189, -0.0679,  ..., -0.0585,  0.0409, -0.3250]],
       device='cuda:0')
Computed C_score: tensor([0.9079, 0.7221, 0.6474,  ..., 0.8339, 0.6406, 0.8950], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1502.8823, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1942, 1])
Inertia: tensor([66.4114], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1942, 1280])
Centroid_list: tensor([[-0.0039, -0.0350, -0.0592,  ..., -0.0894,  0.0363, -0.2845],
        [-0.0098, -0.0593, -0.0426,  ..., -0.0866,  0.0692, -0.2036],
        [-0.0098, -0.0593, -0.0426,  ..., -0.0866,  0.0692, -0.2036],
        ...,
        [-0.0263, -0.0093, -0.0732,  ..., -0.0385,  0.0450, -0.3484],
        [-0.0098, -0.0593, -0.0426,  ..., -0.0866,  0.0692, -0.2036],
        [-0.0263, -0.0093, -0.0732,  ..., -0.0385,  0.0450, -0.3484]],
       device='cuda:0')
Computed C_score: tensor([0.9247, 0.7244, 0.6546,  ..., 0.8480, 0.6380, 0.8972], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1520.7161, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1942, 1])
Inertia: tensor([67.3278], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1942, 1280])
Centroid_list: tensor([[-0.0054, -0.0356, -0.0595,  ..., -0.0891,  0.0368, -0.2865],
        [-0.0089, -0.0601, -0.0406,  ..., -0.0897,  0.0667, -0.1380],
        [-0.0089, -0.0601, -0.0406,  ..., -0.0897,  0.0667, -0.1380],
        ...,
        [-0.0264, -0.0091, -0.0737,  ..., -0.0387,  0.0444, -0.3472],
        [-0.0089, -0.0601, -0.0406,  ..., -0.0897,  0.0667, -0.1380],
        [-0.0264, -0.0091, -0.0737,  ..., -0.0387,  0.0444, -0.3472]],
       device='cuda:0')
Computed C_score: tensor([0.9237, 0.7393, 0.6373,  ..., 0.8466, 0.6075, 0.8974], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1540.9673, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0005, 0.0013, 0.0027, 0.0042], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([302, 1280])
S-Scores: tensor([0.6586, 1.9883, 4.0518, 6.9205], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([302, 1])
Inertia: tensor([136.2998], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([302, 1280])
Centroid_list: tensor([[-0.0749, -0.0690, -0.0795,  ..., -0.0348,  0.0853, -0.4169],
        [-0.0749, -0.0690, -0.0795,  ..., -0.0348,  0.0853, -0.4169],
        [-0.0749, -0.0690, -0.0795,  ..., -0.0348,  0.0853, -0.4169],
        ...,
        [-0.0749, -0.0690, -0.0795,  ..., -0.0348,  0.0853, -0.4169],
        [-0.0749, -0.0690, -0.0795,  ..., -0.0348,  0.0853, -0.4169],
        [-0.0745, -0.0471, -0.0950,  ..., -0.0099,  0.0896, -0.6637]],
       device='cuda:0')
Computed C_score: tensor([0.7727, 0.7360, 0.8387, 0.8341, 0.5111, 0.6904, 0.7818, 0.8213, 0.8098,
        0.6527, 0.6362, 0.7324, 0.6201, 0.7173, 0.5329, 0.7316, 0.8015, 0.7668,
        0.6852, 0.7943, 0.6652, 0.5747, 0.7675, 0.7617, 0.7318, 0.7886, 0.5384,
        0.8410, 0.6186, 0.7427, 0.8096, 0.7670, 0.7842, 0.8016, 0.7738, 0.7105,
        0.8047, 0.6557, 0.8653, 0.7428, 0.5508, 0.7198, 0.6328, 0.6136, 0.7773,
        0.7498, 0.8312, 0.6335, 0.5848, 0.8042, 0.7355, 0.8094, 0.7429, 0.7066,
        0.4716, 0.7465, 0.7301, 0.7722, 0.7223, 0.7496, 0.8617, 0.7240, 0.6362,
        0.7612, 0.6456, 0.7459, 0.6860, 0.8332, 0.6883, 0.7925, 0.8017, 0.8302,
        0.5092, 0.6974, 0.7866, 0.7099, 0.7384, 0.8673, 0.7377, 0.7856, 0.7305,
        0.6476, 0.8042, 0.5078, 0.7467, 0.7731, 0.7127, 0.7719, 0.8168, 0.7491,
        0.7212, 0.8115, 0.7018, 0.7389, 0.6626, 0.7221, 0.7554, 0.6306, 0.8356,
        0.6327, 0.7713, 0.7318, 0.7624, 0.8112, 0.6647, 0.6025, 0.7962, 0.7188,
        0.6250, 0.6853, 0.7628, 0.5750, 0.5843, 0.7280, 0.6345, 0.6130, 0.7393,
        0.7504, 0.6384, 0.7060, 0.6625, 0.8150, 0.7217, 0.7232, 0.7578, 0.8214,
        0.6417, 0.7929, 0.6640, 0.6460, 0.7207, 0.6715, 0.8062, 0.7571, 0.7425,
        0.7415, 0.6181, 0.7424, 0.8126, 0.6332, 0.6594, 0.6795, 0.6462, 0.7318,
        0.7203, 0.8165, 0.7862, 0.8177, 0.7828, 0.5647, 0.6183, 0.7556, 0.7255,
        0.7151, 0.7585, 0.7006, 0.5717, 0.7004, 0.7952, 0.6822, 0.6888, 0.8017,
        0.7773, 0.7303, 0.5158, 0.7864, 0.6882, 0.6924, 0.7899, 0.4743, 0.7633,
        0.7396, 0.6188, 0.7585, 0.7118, 0.5761, 0.7255, 0.6659, 0.6770, 0.7371,
        0.8125, 0.7103, 0.6255, 0.7903, 0.7194, 0.6214, 0.7114, 0.5676, 0.6090,
        0.7061, 0.5351, 0.7392, 0.6836, 0.8554, 0.7835, 0.7577, 0.7112, 0.6040,
        0.7541, 0.6767, 0.6888, 0.7823, 0.7051, 0.7727, 0.7397, 0.7969, 0.6913,
        0.7622, 0.8441, 0.4600, 0.8324, 0.6788, 0.7188, 0.7746, 0.7664, 0.7515,
        0.8083, 0.7328, 0.7925, 0.7557, 0.7642, 0.7810, 0.7482, 0.8039, 0.8301,
        0.7975, 0.6804, 0.5929, 0.8253, 0.8631, 0.7220, 0.5018, 0.7238, 0.7534,
        0.6914, 0.7490, 0.5625, 0.8552, 0.5763, 0.7194, 0.7717, 0.7522, 0.7962,
        0.5143, 0.7113, 0.6710, 0.6080, 0.7497, 0.7051, 0.6312, 0.7349, 0.8201,
        0.8516, 0.7377, 0.6583, 0.8061, 0.7257, 0.6501, 0.7346, 0.6986, 0.6663,
        0.3383, 0.7570, 0.6231, 0.7070, 0.7333, 0.7486, 0.7425, 0.8086, 0.7425,
        0.7888, 0.7443, 0.8738, 0.7824, 0.7099, 0.6337, 0.6211, 0.7436, 0.6987,
        0.6221, 0.7505, 0.8188, 0.7516, 0.7655, 0.6673, 0.5933, 0.7180, 0.5764,
        0.6663, 0.6893, 0.7617, 0.8466, 0.7668, 0.5600, 0.8049, 0.8132, 0.6685,
        0.7524, 0.5345, 0.7936, 0.8284, 0.7731], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(216.8328, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([302, 1])
Inertia: tensor([100.7581], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([302, 1280])
Centroid_list: tensor([[-0.0837, -0.0608, -0.0859,  ..., -0.0297,  0.0777, -0.5858],
        [-0.0694, -0.0713, -0.0750,  ..., -0.0373,  0.0913, -0.3362],
        [-0.0694, -0.0713, -0.0750,  ..., -0.0373,  0.0913, -0.3362],
        ...,
        [-0.0694, -0.0713, -0.0750,  ..., -0.0373,  0.0913, -0.3362],
        [-0.0694, -0.0713, -0.0750,  ..., -0.0373,  0.0913, -0.3362],
        [-0.0702, -0.0437, -0.0986,  ..., -0.0027,  0.0941, -0.6711]],
       device='cuda:0')
Computed C_score: tensor([0.8362, 0.7562, 0.8750, 0.8947, 0.5027, 0.7809, 0.7846, 0.8163, 0.8571,
        0.6353, 0.6949, 0.7379, 0.6454, 0.8012, 0.5655, 0.7716, 0.7968, 0.7569,
        0.6776, 0.7689, 0.6457, 0.5613, 0.7520, 0.8174, 0.7242, 0.8196, 0.5569,
        0.8342, 0.6770, 0.7634, 0.8242, 0.7465, 0.8684, 0.7837, 0.7783, 0.7034,
        0.8722, 0.6321, 0.9169, 0.7285, 0.5580, 0.7133, 0.7968, 0.6076, 0.7636,
        0.7355, 0.7888, 0.7309, 0.6132, 0.8244, 0.7040, 0.8408, 0.8547, 0.7910,
        0.4914, 0.7708, 0.7578, 0.8065, 0.8212, 0.7612, 0.8913, 0.6824, 0.6690,
        0.7885, 0.6536, 0.7573, 0.7119, 0.8496, 0.6854, 0.8282, 0.7842, 0.8104,
        0.6395, 0.7158, 0.8972, 0.7017, 0.7660, 0.8231, 0.7401, 0.7749, 0.7547,
        0.6828, 0.8394, 0.5736, 0.7270, 0.7687, 0.7394, 0.7894, 0.7890, 0.9031,
        0.7264, 0.8709, 0.8149, 0.7230, 0.6611, 0.7435, 0.7416, 0.6627, 0.8603,
        0.6714, 0.7497, 0.7986, 0.8097, 0.8078, 0.6788, 0.5818, 0.8335, 0.7168,
        0.7298, 0.7417, 0.8935, 0.6154, 0.5660, 0.7849, 0.6166, 0.6169, 0.8393,
        0.7351, 0.7708, 0.7097, 0.6541, 0.8219, 0.7333, 0.6925, 0.7631, 0.8139,
        0.6301, 0.8626, 0.6637, 0.6586, 0.7350, 0.6788, 0.8192, 0.8361, 0.7838,
        0.7623, 0.6286, 0.7567, 0.8517, 0.6175, 0.6435, 0.6960, 0.6323, 0.7290,
        0.7539, 0.8385, 0.8482, 0.8552, 0.8587, 0.5731, 0.6224, 0.9037, 0.6913,
        0.7126, 0.8105, 0.6781, 0.5780, 0.7386, 0.8620, 0.6884, 0.6779, 0.8427,
        0.8271, 0.7773, 0.5454, 0.8202, 0.6814, 0.6900, 0.8221, 0.4995, 0.8421,
        0.7284, 0.7518, 0.7502, 0.7342, 0.5721, 0.7206, 0.6587, 0.6775, 0.7600,
        0.8190, 0.7939, 0.6081, 0.7997, 0.8667, 0.5870, 0.8326, 0.6209, 0.5956,
        0.8097, 0.5305, 0.7269, 0.6905, 0.8047, 0.8020, 0.7496, 0.7898, 0.5983,
        0.7669, 0.7502, 0.7020, 0.7945, 0.8192, 0.7847, 0.7257, 0.8200, 0.6760,
        0.7759, 0.8556, 0.4546, 0.8824, 0.7934, 0.7603, 0.7620, 0.8336, 0.7785,
        0.8341, 0.7580, 0.8026, 0.8310, 0.7763, 0.7771, 0.7923, 0.7870, 0.8075,
        0.8196, 0.6620, 0.5805, 0.8092, 0.8869, 0.7561, 0.5256, 0.7197, 0.8121,
        0.7201, 0.7529, 0.6167, 0.8229, 0.5602, 0.7088, 0.7606, 0.9131, 0.7901,
        0.5472, 0.8279, 0.6651, 0.6144, 0.7779, 0.7274, 0.6130, 0.7736, 0.8662,
        0.9013, 0.7432, 0.6919, 0.8356, 0.7643, 0.6880, 0.8086, 0.7140, 0.6518,
        0.3383, 0.7616, 0.6072, 0.7108, 0.7237, 0.7595, 0.8147, 0.8087, 0.7454,
        0.8335, 0.7556, 0.8782, 0.8310, 0.6966, 0.6157, 0.6001, 0.7593, 0.6975,
        0.6436, 0.8075, 0.8415, 0.8193, 0.7744, 0.6660, 0.5942, 0.8088, 0.5700,
        0.8150, 0.8397, 0.8025, 0.8027, 0.8009, 0.5454, 0.8113, 0.8467, 0.6810,
        0.7958, 0.5373, 0.7531, 0.8399, 0.8170], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(223.8657, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([302, 1])
Inertia: tensor([100.9447], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([302, 1280])
Centroid_list: tensor([[-0.0865, -0.0657, -0.0836,  ..., -0.0341,  0.0756, -0.6016],
        [-0.0717, -0.0718, -0.0750,  ..., -0.0373,  0.0913, -0.3447],
        [-0.0717, -0.0718, -0.0750,  ..., -0.0373,  0.0913, -0.3447],
        ...,
        [-0.0717, -0.0718, -0.0750,  ..., -0.0373,  0.0913, -0.3447],
        [-0.0717, -0.0718, -0.0750,  ..., -0.0373,  0.0913, -0.3447],
        [-0.0753, -0.0484, -0.1212,  ...,  0.0215,  0.0895, -0.6401]],
       device='cuda:0')
Computed C_score: tensor([0.8348, 0.7548, 0.8763, 0.8967, 0.5823, 0.7834, 0.7966, 0.8158, 0.8569,
        0.7025, 0.7006, 0.7598, 0.6347, 0.7871, 0.5962, 0.7729, 0.8112, 0.8166,
        0.7366, 0.7574, 0.6761, 0.6146, 0.7887, 0.8047, 0.7224, 0.8174, 0.5901,
        0.8771, 0.6535, 0.7441, 0.8202, 0.7429, 0.8826, 0.7808, 0.7865, 0.6924,
        0.8726, 0.6166, 0.9176, 0.7278, 0.6107, 0.7431, 0.8118, 0.6422, 0.7804,
        0.7375, 0.7878, 0.7498, 0.6066, 0.8195, 0.7139, 0.8790, 0.8628, 0.7931,
        0.4805, 0.7813, 0.7646, 0.8074, 0.8364, 0.7381, 0.8932, 0.6763, 0.7443,
        0.7870, 0.6710, 0.7377, 0.7151, 0.8627, 0.6813, 0.8282, 0.7815, 0.8252,
        0.6554, 0.7088, 0.9004, 0.7324, 0.7805, 0.8292, 0.7365, 0.8081, 0.7832,
        0.6763, 0.8496, 0.5510, 0.7238, 0.8075, 0.7275, 0.8459, 0.7888, 0.9124,
        0.7286, 0.8708, 0.8221, 0.7223, 0.6600, 0.7310, 0.7425, 0.6635, 0.9089,
        0.6466, 0.8095, 0.8062, 0.7625, 0.8141, 0.6759, 0.6101, 0.8386, 0.7215,
        0.7413, 0.7451, 0.9112, 0.6223, 0.5974, 0.7907, 0.6582, 0.6847, 0.8492,
        0.7800, 0.7851, 0.6978, 0.6918, 0.8043, 0.7202, 0.7169, 0.7621, 0.8246,
        0.6404, 0.8643, 0.6597, 0.6475, 0.7335, 0.7956, 0.8201, 0.8452, 0.7481,
        0.7470, 0.6276, 0.7529, 0.8537, 0.6302, 0.6389, 0.6719, 0.6517, 0.8064,
        0.7375, 0.8720, 0.8491, 0.8542, 0.8545, 0.5649, 0.6038, 0.9131, 0.7133,
        0.6902, 0.8121, 0.6780, 0.5862, 0.7381, 0.8638, 0.7214, 0.6816, 0.8513,
        0.8270, 0.7791, 0.5877, 0.8265, 0.7488, 0.6914, 0.8221, 0.4661, 0.8428,
        0.8102, 0.7564, 0.7490, 0.7384, 0.5706, 0.7145, 0.7149, 0.6745, 0.7590,
        0.8187, 0.7972, 0.6101, 0.8097, 0.8786, 0.6059, 0.8502, 0.6075, 0.6032,
        0.8188, 0.5824, 0.7225, 0.7755, 0.8198, 0.7794, 0.7823, 0.8028, 0.6200,
        0.7681, 0.7532, 0.6994, 0.7931, 0.8181, 0.8054, 0.7243, 0.9057, 0.6754,
        0.7786, 0.8242, 0.4874, 0.8836, 0.7888, 0.7886, 0.7824, 0.8467, 0.8859,
        0.8147, 0.7587, 0.8503, 0.8499, 0.7691, 0.7822, 0.7631, 0.7867, 0.8058,
        0.8359, 0.6613, 0.6050, 0.8103, 0.8525, 0.7512, 0.5187, 0.7585, 0.8206,
        0.7598, 0.7746, 0.6153, 0.8234, 0.6481, 0.7168, 0.7559, 0.9236, 0.8304,
        0.5636, 0.8346, 0.7194, 0.6402, 0.7771, 0.7309, 0.6325, 0.7812, 0.8685,
        0.9027, 0.7249, 0.6906, 0.8188, 0.7508, 0.6794, 0.8082, 0.7399, 0.7011,
        0.3880, 0.8095, 0.6619, 0.7097, 0.7440, 0.8015, 0.8158, 0.8088, 0.7262,
        0.8335, 0.7819, 0.8780, 0.8324, 0.7433, 0.6702, 0.6726, 0.7696, 0.7185,
        0.6544, 0.8094, 0.8565, 0.8102, 0.8604, 0.6640, 0.5972, 0.8097, 0.5708,
        0.8156, 0.8424, 0.8021, 0.8062, 0.8414, 0.5361, 0.8302, 0.8460, 0.7555,
        0.8008, 0.5385, 0.7524, 0.8403, 0.7702], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(227.1613, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([302, 1])
Inertia: tensor([97.9439], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([302, 1280])
Centroid_list: tensor([[-0.0924, -0.0753, -0.0830,  ..., -0.0395,  0.0722, -0.6149],
        [-0.0703, -0.0758, -0.0717,  ..., -0.0419,  0.0900, -0.3327],
        [-0.0703, -0.0758, -0.0717,  ..., -0.0419,  0.0900, -0.3327],
        ...,
        [-0.0703, -0.0758, -0.0717,  ..., -0.0419,  0.0900, -0.3327],
        [-0.0703, -0.0758, -0.0717,  ..., -0.0419,  0.0900, -0.3327],
        [-0.0838, -0.0473, -0.1094,  ...,  0.0020,  0.0916, -0.9177]],
       device='cuda:0')
Computed C_score: tensor([0.8405, 0.7449, 0.8736, 0.9022, 0.6035, 0.7943, 0.7723, 0.7978, 0.8500,
        0.7362, 0.6935, 0.7647, 0.6325, 0.7599, 0.6162, 0.7883, 0.8208, 0.7709,
        0.7346, 0.7525, 0.6614, 0.6583, 0.7859, 0.7972, 0.7163, 0.8086, 0.5981,
        0.8559, 0.6593, 0.8231, 0.8325, 0.7407, 0.9012, 0.8121, 0.7852, 0.7292,
        0.8699, 0.6249, 0.9235, 0.7815, 0.6233, 0.7063, 0.8069, 0.6210, 0.7698,
        0.7647, 0.8073, 0.7602, 0.6297, 0.8157, 0.7255, 0.8960, 0.8584, 0.7751,
        0.5098, 0.7643, 0.7559, 0.8201, 0.8391, 0.7565, 0.8800, 0.6820, 0.6835,
        0.7843, 0.6979, 0.7286, 0.6995, 0.8729, 0.6901, 0.8208, 0.7641, 0.7972,
        0.6881, 0.7138, 0.9067, 0.7642, 0.7730, 0.8261, 0.7652, 0.7965, 0.7330,
        0.6826, 0.8413, 0.5812, 0.7778, 0.8190, 0.7867, 0.8304, 0.7943, 0.9201,
        0.7263, 0.8663, 0.8395, 0.6912, 0.6802, 0.7337, 0.7333, 0.6593, 0.9039,
        0.7630, 0.7693, 0.8227, 0.8255, 0.8026, 0.7045, 0.6388, 0.8543, 0.7189,
        0.7689, 0.7431, 0.9184, 0.6431, 0.6913, 0.7816, 0.6968, 0.7028, 0.8415,
        0.8368, 0.8015, 0.7378, 0.7028, 0.8669, 0.7834, 0.8282, 0.7552, 0.8261,
        0.6358, 0.8657, 0.6864, 0.6764, 0.7302, 0.7734, 0.8108, 0.8529, 0.7817,
        0.7706, 0.6389, 0.7466, 0.8614, 0.6691, 0.6072, 0.7800, 0.6865, 0.7406,
        0.7441, 0.8784, 0.8577, 0.8421, 0.8574, 0.6768, 0.6228, 0.9161, 0.6909,
        0.7368, 0.8232, 0.7470, 0.5765, 0.7302, 0.8759, 0.6870, 0.7092, 0.8764,
        0.8331, 0.7670, 0.5358, 0.8122, 0.7479, 0.7092, 0.8273, 0.4953, 0.8600,
        0.7904, 0.7648, 0.7630, 0.7140, 0.5600, 0.7030, 0.7331, 0.6733, 0.7650,
        0.8248, 0.8087, 0.7316, 0.7948, 0.8884, 0.7410, 0.8804, 0.6248, 0.6420,
        0.8296, 0.6195, 0.7464, 0.7086, 0.8167, 0.8097, 0.7761, 0.8099, 0.6506,
        0.7749, 0.7702, 0.7588, 0.7807, 0.8170, 0.8210, 0.7132, 0.8646, 0.6715,
        0.7905, 0.8878, 0.4784, 0.8782, 0.7840, 0.7520, 0.8125, 0.8513, 0.8167,
        0.8517, 0.7772, 0.8431, 0.8451, 0.7614, 0.7669, 0.8266, 0.7895, 0.8028,
        0.8627, 0.6617, 0.6582, 0.8130, 0.8831, 0.7384, 0.5605, 0.7658, 0.8229,
        0.7732, 0.7629, 0.6281, 0.8277, 0.6846, 0.7331, 0.7829, 0.9326, 0.8025,
        0.5466, 0.8598, 0.6716, 0.6876, 0.7730, 0.7374, 0.6205, 0.7598, 0.8700,
        0.9120, 0.7560, 0.6845, 0.8138, 0.7986, 0.7938, 0.8146, 0.7405, 0.7312,
        0.4369, 0.8008, 0.6559, 0.6956, 0.7562, 0.8172, 0.8240, 0.8141, 0.7284,
        0.8400, 0.7663, 0.8880, 0.8322, 0.7672, 0.7163, 0.6854, 0.7671, 0.7376,
        0.6654, 0.8161, 0.8568, 0.8097, 0.8352, 0.7069, 0.6389, 0.8252, 0.5642,
        0.8009, 0.8390, 0.8092, 0.8051, 0.8387, 0.5718, 0.8179, 0.8392, 0.7356,
        0.8048, 0.5245, 0.7544, 0.8289, 0.8175], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(229.8891, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0030, 0.0088, 0.0175, 0.0292], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([4503, 1280])
S-Scores: tensor([0.5428, 1.6931, 3.3607, 5.5431], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([4503, 1])
Inertia: tensor([131.8573], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([4503, 1280])
Centroid_list: tensor([[-0.0414, -0.0616, -0.0595,  ..., -0.0606,  0.0826, -0.1797],
        [-0.0414, -0.0616, -0.0595,  ..., -0.0606,  0.0826, -0.1797],
        [-0.0798, -0.0207, -0.0614,  ..., -0.0050,  0.0736,  0.5658],
        ...,
        [-0.0798, -0.0207, -0.0614,  ..., -0.0050,  0.0736,  0.5658],
        [-0.0414, -0.0616, -0.0595,  ..., -0.0606,  0.0826, -0.1797],
        [-0.0414, -0.0616, -0.0595,  ..., -0.0606,  0.0826, -0.1797]],
       device='cuda:0')
Computed C_score: tensor([0.7784, 0.5710, 0.7195,  ..., 0.8966, 0.6613, 0.4998], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3455.1050, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4503, 1])
Inertia: tensor([175.7769], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([4503, 1280])
Centroid_list: tensor([[-0.0388, -0.0549, -0.0592,  ..., -0.0602,  0.0792, -0.1215],
        [-0.0388, -0.0549, -0.0592,  ..., -0.0602,  0.0792, -0.1215],
        [-0.0813, -0.0196, -0.0615,  ..., -0.0032,  0.0734,  0.5854],
        ...,
        [-0.0813, -0.0196, -0.0615,  ..., -0.0032,  0.0734,  0.5854],
        [-0.0469, -0.0700, -0.0600,  ..., -0.0584,  0.0874, -0.2242],
        [-0.0388, -0.0549, -0.0592,  ..., -0.0602,  0.0792, -0.1215]],
       device='cuda:0')
Computed C_score: tensor([0.6884, 0.6631, 0.7180,  ..., 0.8977, 0.8151, 0.5497], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3564.9556, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4503, 1])
Inertia: tensor([146.0744], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([4503, 1280])
Centroid_list: tensor([[-0.0293, -0.0602, -0.0491,  ..., -0.0724,  0.0877, -0.1448],
        [-0.0427, -0.0550, -0.0611,  ..., -0.0566,  0.0780, -0.1048],
        [-0.0814, -0.0195, -0.0615,  ..., -0.0031,  0.0734,  0.5874],
        ...,
        [-0.0814, -0.0195, -0.0615,  ..., -0.0031,  0.0734,  0.5874],
        [-0.0693, -0.0824, -0.0786,  ..., -0.0383,  0.0851, -0.4017],
        [-0.0427, -0.0550, -0.0611,  ..., -0.0566,  0.0780, -0.1048]],
       device='cuda:0')
Computed C_score: tensor([0.7603, 0.6639, 0.7179,  ..., 0.8978, 0.9276, 0.5626], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3609.4258, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4503, 1])
Inertia: tensor([146.1564], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([4503, 1280])
Centroid_list: tensor([[-0.0292, -0.0602, -0.0491,  ..., -0.0723,  0.0877, -0.1450],
        [-0.0430, -0.0548, -0.0609,  ..., -0.0566,  0.0779, -0.1012],
        [-0.0905, -0.0234, -0.0695,  ..., -0.0018,  0.0719,  0.2762],
        ...,
        [-0.0684, -0.0136, -0.0501,  ..., -0.0044,  0.0757,  1.0395],
        [-0.0693, -0.0824, -0.0786,  ..., -0.0383,  0.0851, -0.4017],
        [-0.0430, -0.0548, -0.0609,  ..., -0.0566,  0.0779, -0.1012]],
       device='cuda:0')
Computed C_score: tensor([0.7602, 0.6640, 0.7484,  ..., 0.9229, 0.9276, 0.5627], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3657.3293, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0002, 0.0005, 0.0009, 0.0015], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([2201, 1280])
S-Scores: tensor([0.6885, 1.9776, 2.7437, 6.6811], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([2201, 1])
Inertia: tensor([185.4596], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([2201, 1280])
Centroid_list: tensor([[-0.0025, -0.0492, -0.0740,  ..., -0.0395,  0.0402, -0.3433],
        [-0.0369, -0.0680, -0.0691,  ..., -0.0533,  0.0741, -0.3942],
        [-0.0025, -0.0492, -0.0740,  ..., -0.0395,  0.0402, -0.3433],
        ...,
        [-0.0025, -0.0492, -0.0740,  ..., -0.0395,  0.0402, -0.3433],
        [-0.0025, -0.0492, -0.0740,  ..., -0.0395,  0.0402, -0.3433],
        [-0.0369, -0.0680, -0.0691,  ..., -0.0533,  0.0741, -0.3942]],
       device='cuda:0')
Computed C_score: tensor([0.7146, 0.6834, 0.5434,  ..., 0.6824, 0.7241, 0.8079], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1597.0228, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2201, 1])
Inertia: tensor([178.4132], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([2201, 1280])
Centroid_list: tensor([[-0.0250, -0.0635, -0.0712,  ..., -0.0565,  0.0609, -0.3883],
        [-0.0250, -0.0635, -0.0712,  ..., -0.0565,  0.0609, -0.3883],
        [ 0.0081, -0.0413, -0.0740,  ..., -0.0322,  0.0327, -0.3192],
        ...,
        [ 0.0081, -0.0413, -0.0740,  ..., -0.0322,  0.0327, -0.3192],
        [ 0.0081, -0.0413, -0.0740,  ..., -0.0322,  0.0327, -0.3192],
        [-0.0498, -0.0768, -0.0718,  ..., -0.0432,  0.0800, -0.4075]],
       device='cuda:0')
Computed C_score: tensor([0.7268, 0.7305, 0.5781,  ..., 0.7195, 0.7765, 0.8951], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1636.0753, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2201, 1])
Inertia: tensor([177.8616], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([2201, 1280])
Centroid_list: tensor([[-0.0248, -0.0636, -0.0714,  ..., -0.0570,  0.0605, -0.3849],
        [-0.0248, -0.0636, -0.0714,  ..., -0.0570,  0.0605, -0.3849],
        [ 0.0084, -0.0410, -0.0739,  ..., -0.0315,  0.0325, -0.3204],
        ...,
        [ 0.0084, -0.0410, -0.0739,  ..., -0.0315,  0.0325, -0.3204],
        [ 0.0084, -0.0410, -0.0739,  ..., -0.0315,  0.0325, -0.3204],
        [-0.0498, -0.0761, -0.0718,  ..., -0.0433,  0.0802, -0.4109]],
       device='cuda:0')
Computed C_score: tensor([0.7278, 0.7298, 0.5802,  ..., 0.7184, 0.7784, 0.8950], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1636.9825, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2201, 1])
Inertia: tensor([132.5467], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([2201, 1280])
Centroid_list: tensor([[-0.0300, -0.0763, -0.0729,  ..., -0.0566,  0.0499, -0.4419],
        [-0.0300, -0.0763, -0.0729,  ..., -0.0566,  0.0499, -0.4419],
        [ 0.0103, -0.0428, -0.0740,  ..., -0.0244,  0.0207, -0.3260],
        ...,
        [ 0.0103, -0.0428, -0.0740,  ..., -0.0244,  0.0207, -0.3260],
        [ 0.0103, -0.0428, -0.0740,  ..., -0.0244,  0.0207, -0.3260],
        [-0.0615, -0.0869, -0.0831,  ..., -0.0291,  0.0767, -0.5039]],
       device='cuda:0')
Computed C_score: tensor([0.8061, 0.7651, 0.5977,  ..., 0.7220, 0.7912, 0.9431], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1693.5299, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0004, 0.0012, 0.0017, 0.0039], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([200, 1280])
S-Scores: tensor([0.7149, 2.0321, 4.0576, 6.4554], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([200, 1])
Inertia: tensor([158.7000], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([200, 1280])
Centroid_list: tensor([[ 0.0081, -0.0516, -0.0694,  ..., -0.0486,  0.0701, -0.4103],
        [-0.0502, -0.0773, -0.0765,  ..., -0.0513,  0.0793, -0.4113],
        [ 0.0081, -0.0516, -0.0694,  ..., -0.0486,  0.0701, -0.4103],
        ...,
        [ 0.0081, -0.0516, -0.0694,  ..., -0.0486,  0.0701, -0.4103],
        [ 0.0081, -0.0516, -0.0694,  ..., -0.0486,  0.0701, -0.4103],
        [ 0.0081, -0.0516, -0.0694,  ..., -0.0486,  0.0701, -0.4103]],
       device='cuda:0')
Computed C_score: tensor([0.7859, 0.7963, 0.7431, 0.7341, 0.6772, 0.6856, 0.9340, 0.7080, 0.7266,
        0.8195, 0.7532, 0.8532, 0.5707, 0.7760, 0.7594, 0.5192, 0.5775, 0.5646,
        0.8925, 0.6610, 0.7671, 0.7771, 0.8821, 0.5189, 0.6366, 0.8788, 0.6427,
        0.7958, 0.7180, 0.7718, 0.6048, 0.6975, 0.9029, 0.7918, 0.6706, 0.6397,
        0.7778, 0.7662, 0.4388, 0.5271, 0.7596, 0.6304, 0.7318, 0.6505, 0.8159,
        0.4892, 0.6543, 0.5721, 0.5989, 0.6013, 0.7664, 0.7007, 0.7603, 0.6478,
        0.6812, 0.8320, 0.8536, 0.7452, 0.7465, 0.7686, 0.5744, 0.7415, 0.6868,
        0.6320, 0.7504, 0.4764, 0.7753, 0.7184, 0.6726, 0.6745, 0.6455, 0.6606,
        0.6827, 0.7093, 0.6141, 0.5842, 0.7215, 0.6610, 0.6658, 0.7200, 0.6309,
        0.7389, 0.7721, 0.6484, 0.5716, 0.7263, 0.6052, 0.8385, 0.7446, 0.7240,
        0.7582, 0.9117, 0.6335, 0.7081, 0.7698, 0.6974, 0.6319, 0.8106, 0.7143,
        0.7263, 0.7857, 0.7150, 0.6782, 0.7188, 0.7078, 0.7510, 0.6573, 0.7649,
        0.6678, 0.6227, 0.8640, 0.7816, 0.4838, 0.7597, 0.7658, 0.6929, 0.7771,
        0.7730, 0.4089, 0.8047, 0.6703, 0.8382, 0.7913, 0.8598, 0.7247, 0.8103,
        0.8076, 0.7405, 0.6049, 0.8015, 0.5717, 0.6676, 0.6684, 0.6874, 0.7213,
        0.8544, 0.6365, 0.7227, 0.7143, 0.6762, 0.7170, 0.7918, 0.7027, 0.7196,
        0.7445, 0.6077, 0.6481, 0.6379, 0.6971, 0.6583, 0.6610, 0.7046, 0.7771,
        0.7950, 0.5402, 0.5557, 0.4954, 0.6988, 0.6815, 0.7298, 0.7958, 0.8536,
        0.7408, 0.4680, 0.7072, 0.8466, 0.5802, 0.5679, 0.5075, 0.8048, 0.6503,
        0.7509, 0.6895, 0.6876, 0.8887, 0.7915, 0.6588, 0.8006, 0.7094, 0.6372,
        0.7178, 0.6994, 0.6658, 0.8581, 0.8792, 0.7028, 0.6952, 0.6791, 0.6394,
        0.6688, 0.7271, 0.7578, 0.7643, 0.7506, 0.4923, 0.7467, 0.6571, 0.6708,
        0.6907, 0.7163], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(141.1095, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([200, 1])
Inertia: tensor([163.4220], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([200, 1280])
Centroid_list: tensor([[ 0.0220, -0.0482, -0.0768,  ..., -0.0565,  0.0638, -0.3275],
        [-0.0587, -0.0799, -0.0785,  ..., -0.0422,  0.0857, -0.4620],
        [ 0.0220, -0.0482, -0.0768,  ..., -0.0565,  0.0638, -0.3275],
        ...,
        [ 0.0220, -0.0482, -0.0768,  ..., -0.0565,  0.0638, -0.3275],
        [-0.0251, -0.0643, -0.0651,  ..., -0.0465,  0.0768, -0.4622],
        [ 0.0220, -0.0482, -0.0768,  ..., -0.0565,  0.0638, -0.3275]],
       device='cuda:0')
Computed C_score: tensor([0.7754, 0.7620, 0.7440, 0.6719, 0.6279, 0.6693, 0.9477, 0.7392, 0.7108,
        0.8125, 0.8127, 0.9253, 0.5514, 0.7593, 0.7907, 0.5392, 0.5595, 0.6618,
        0.9621, 0.6531, 0.8833, 0.8275, 0.8553, 0.5621, 0.6444, 0.8494, 0.6964,
        0.8539, 0.7341, 0.7476, 0.6671, 0.6977, 0.9419, 0.8187, 0.7462, 0.6682,
        0.7590, 0.8018, 0.4768, 0.5303, 0.7093, 0.6216, 0.6785, 0.5898, 0.8953,
        0.4815, 0.6500, 0.6394, 0.6982, 0.6657, 0.8158, 0.7271, 0.7587, 0.6355,
        0.7427, 0.8620, 0.9215, 0.7489, 0.7629, 0.7374, 0.6524, 0.7856, 0.7110,
        0.7244, 0.7303, 0.5017, 0.7621, 0.7058, 0.7106, 0.6490, 0.6897, 0.6756,
        0.6815, 0.7685, 0.5856, 0.6202, 0.8309, 0.7087, 0.6979, 0.7586, 0.6222,
        0.7637, 0.7781, 0.6778, 0.5987, 0.8260, 0.6786, 0.9213, 0.8244, 0.7322,
        0.7597, 0.9289, 0.7277, 0.7329, 0.7530, 0.7598, 0.6882, 0.8726, 0.8005,
        0.7923, 0.8178, 0.7448, 0.7311, 0.7713, 0.6957, 0.7526, 0.6240, 0.7292,
        0.6572, 0.6921, 0.9072, 0.8106, 0.4960, 0.7421, 0.7263, 0.7397, 0.8011,
        0.7448, 0.4699, 0.8940, 0.6334, 0.9202, 0.7467, 0.9186, 0.7670, 0.8639,
        0.8735, 0.7516, 0.5923, 0.7664, 0.5488, 0.6723, 0.6692, 0.7003, 0.7481,
        0.7940, 0.6083, 0.7318, 0.6947, 0.6888, 0.7759, 0.8126, 0.6791, 0.6997,
        0.7171, 0.5724, 0.6753, 0.6162, 0.7340, 0.6599, 0.6478, 0.7112, 0.7739,
        0.7161, 0.6063, 0.5390, 0.4911, 0.7213, 0.6833, 0.7578, 0.7872, 0.9210,
        0.7312, 0.5041, 0.7362, 0.9223, 0.6561, 0.5754, 0.5398, 0.8112, 0.6989,
        0.7641, 0.7351, 0.7682, 0.9305, 0.8329, 0.5836, 0.8401, 0.7265, 0.6920,
        0.7194, 0.6785, 0.7227, 0.8957, 0.9095, 0.7091, 0.7423, 0.7219, 0.7137,
        0.6876, 0.7983, 0.7312, 0.8471, 0.7807, 0.4524, 0.8025, 0.6653, 0.7315,
        0.7457, 0.7221], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(145.3292, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([200, 1])
Inertia: tensor([156.5300], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([200, 1280])
Centroid_list: tensor([[ 0.0265, -0.0543, -0.0796,  ..., -0.0614,  0.0628, -0.2778],
        [-0.0560, -0.0737, -0.0781,  ..., -0.0600,  0.0747, -0.3160],
        [ 0.0265, -0.0543, -0.0796,  ..., -0.0614,  0.0628, -0.2778],
        ...,
        [ 0.0265, -0.0543, -0.0796,  ..., -0.0614,  0.0628, -0.2778],
        [ 0.0031, -0.0455, -0.0581,  ..., -0.0361,  0.0788, -0.5562],
        [ 0.0265, -0.0543, -0.0796,  ..., -0.0614,  0.0628, -0.2778]],
       device='cuda:0')
Computed C_score: tensor([0.7843, 0.7504, 0.7459, 0.7682, 0.7533, 0.6875, 0.9372, 0.7716, 0.7051,
        0.7707, 0.7583, 0.9357, 0.6038, 0.8494, 0.7894, 0.5194, 0.5841, 0.6756,
        0.9754, 0.6547, 0.8417, 0.8364, 0.8422, 0.5793, 0.6579, 0.8692, 0.7202,
        0.8956, 0.7709, 0.8051, 0.6316, 0.7003, 0.9361, 0.8872, 0.7242, 0.7005,
        0.7493, 0.7881, 0.5105, 0.5304, 0.7022, 0.6311, 0.7369, 0.7248, 0.9191,
        0.5277, 0.7265, 0.6546, 0.6945, 0.6842, 0.8392, 0.7244, 0.7585, 0.6483,
        0.7358, 0.8865, 0.9591, 0.8100, 0.8042, 0.7755, 0.6197, 0.7582, 0.7695,
        0.7224, 0.7445, 0.4722, 0.7492, 0.7502, 0.7189, 0.6999, 0.7086, 0.6595,
        0.6559, 0.7783, 0.6308, 0.5805, 0.8100, 0.7103, 0.7304, 0.7729, 0.6559,
        0.8077, 0.8021, 0.6981, 0.5580, 0.7716, 0.6633, 0.9560, 0.8154, 0.6865,
        0.7925, 0.8953, 0.6922, 0.7000, 0.7301, 0.7286, 0.7099, 0.9179, 0.7962,
        0.7651, 0.7605, 0.7728, 0.7519, 0.7435, 0.7404, 0.7803, 0.7082, 0.7410,
        0.6679, 0.6883, 0.9273, 0.8004, 0.5104, 0.7265, 0.7579, 0.6918, 0.7599,
        0.8129, 0.4439, 0.9274, 0.6983, 0.9558, 0.8054, 0.9469, 0.7969, 0.8285,
        0.8954, 0.7270, 0.5660, 0.7552, 0.5663, 0.6968, 0.6676, 0.7074, 0.7620,
        0.8743, 0.6712, 0.7129, 0.7266, 0.7035, 0.7817, 0.7343, 0.6996, 0.7297,
        0.7353, 0.6774, 0.7252, 0.6425, 0.7391, 0.7146, 0.6299, 0.7154, 0.7536,
        0.7822, 0.5676, 0.6542, 0.5720, 0.7087, 0.7234, 0.7241, 0.8187, 0.9506,
        0.7351, 0.5086, 0.7830, 0.9529, 0.6601, 0.5652, 0.5413, 0.7549, 0.7319,
        0.7532, 0.7173, 0.8140, 0.9443, 0.8812, 0.6248, 0.8187, 0.7055, 0.7111,
        0.6501, 0.7224, 0.7659, 0.8987, 0.9264, 0.7251, 0.7880, 0.7019, 0.7307,
        0.7228, 0.8051, 0.7448, 0.8127, 0.7968, 0.4751, 0.8072, 0.7502, 0.7356,
        0.7068, 0.7534], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(147.9044, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([200, 1])
Inertia: tensor([148.9137], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([200, 1280])
Centroid_list: tensor([[ 0.0166, -0.0576, -0.0776,  ..., -0.0644,  0.0584, -0.2760],
        [-0.0588, -0.0743, -0.0764,  ..., -0.0596,  0.0759, -0.3166],
        [ 0.0166, -0.0576, -0.0776,  ..., -0.0644,  0.0584, -0.2760],
        ...,
        [ 0.0166, -0.0576, -0.0776,  ..., -0.0644,  0.0584, -0.2760],
        [ 0.0035, -0.0441, -0.0555,  ..., -0.0335,  0.0807, -0.5486],
        [ 0.0166, -0.0576, -0.0776,  ..., -0.0644,  0.0584, -0.2760]],
       device='cuda:0')
Computed C_score: tensor([0.7944, 0.7374, 0.7413, 0.7595, 0.7349, 0.6930, 0.9372, 0.7940, 0.6931,
        0.7717, 0.7692, 0.9357, 0.5799, 0.8446, 0.7794, 0.6087, 0.5637, 0.6418,
        0.9754, 0.6360, 0.8524, 0.8378, 0.8333, 0.5718, 0.7504, 0.8679, 0.7391,
        0.9003, 0.8027, 0.7964, 0.7796, 0.7021, 0.9361, 0.8889, 0.7339, 0.7243,
        0.7440, 0.7833, 0.5394, 0.5266, 0.7718, 0.6306, 0.7902, 0.7276, 0.9191,
        0.5363, 0.7440, 0.6266, 0.7295, 0.6536, 0.8331, 0.7153, 0.7660, 0.6505,
        0.7647, 0.8816, 0.9591, 0.8030, 0.8417, 0.7669, 0.7786, 0.7609, 0.7653,
        0.7381, 0.7510, 0.5689, 0.7513, 0.7965, 0.7189, 0.6897, 0.7250, 0.7064,
        0.6494, 0.7408, 0.6378, 0.6766, 0.8258, 0.6934, 0.7331, 0.7680, 0.6714,
        0.8392, 0.8001, 0.6946, 0.6287, 0.7844, 0.7271, 0.9560, 0.8177, 0.6844,
        0.7808, 0.8953, 0.7028, 0.7077, 0.7508, 0.7380, 0.7163, 0.9179, 0.8065,
        0.7680, 0.7608, 0.7752, 0.7420, 0.7851, 0.7794, 0.7974, 0.6801, 0.7293,
        0.6851, 0.7077, 0.9273, 0.7772, 0.5141, 0.7558, 0.7561, 0.6992, 0.7650,
        0.8049, 0.5788, 0.9274, 0.6887, 0.9558, 0.8061, 0.9469, 0.8053, 0.8285,
        0.8954, 0.7287, 0.5736, 0.7925, 0.5671, 0.7136, 0.6563, 0.7038, 0.7667,
        0.8756, 0.6965, 0.7267, 0.7188, 0.7214, 0.7874, 0.7307, 0.7069, 0.7362,
        0.7270, 0.6866, 0.7305, 0.6323, 0.7642, 0.7687, 0.6123, 0.7349, 0.7520,
        0.8064, 0.7473, 0.6457, 0.5889, 0.6953, 0.7218, 0.7294, 0.8603, 0.9506,
        0.7322, 0.5337, 0.8334, 0.9529, 0.6260, 0.7207, 0.5363, 0.7498, 0.7412,
        0.7537, 0.7267, 0.8105, 0.9443, 0.8808, 0.6674, 0.8219, 0.7128, 0.7147,
        0.7011, 0.7746, 0.7785, 0.8987, 0.9264, 0.7483, 0.8186, 0.6986, 0.7021,
        0.7237, 0.8188, 0.7466, 0.8222, 0.7871, 0.4829, 0.8195, 0.7623, 0.7152,
        0.6982, 0.7867], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(150.1762, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0050, 0.0138, 0.0267, 0.0412], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([2449, 1280])
S-Scores: tensor([0.6539, 2.0308, 4.0861, 6.3591], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([2449, 1])
Inertia: tensor([205.1412], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([2449, 1280])
Centroid_list: tensor([[-0.0478, -0.0728, -0.0765,  ..., -0.0573,  0.0795, -0.4131],
        [-0.0478, -0.0728, -0.0765,  ..., -0.0573,  0.0795, -0.4131],
        [-0.0107, -0.0561, -0.0861,  ..., -0.0619,  0.0576, -0.3646],
        ...,
        [-0.0107, -0.0561, -0.0861,  ..., -0.0619,  0.0576, -0.3646],
        [-0.0478, -0.0728, -0.0765,  ..., -0.0573,  0.0795, -0.4131],
        [-0.0107, -0.0561, -0.0861,  ..., -0.0619,  0.0576, -0.3646]],
       device='cuda:0')
Computed C_score: tensor([0.7318, 0.7269, 0.5810,  ..., 0.7049, 0.7111, 0.7405], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1660.7119, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2449, 1])
Inertia: tensor([220.3552], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([2449, 1280])
Centroid_list: tensor([[-0.0479, -0.0724, -0.0759,  ..., -0.0556,  0.0814, -0.3923],
        [-0.0479, -0.0724, -0.0759,  ..., -0.0556,  0.0814, -0.3923],
        [ 0.0009, -0.0452, -0.0855,  ..., -0.0593,  0.0567, -0.2836],
        ...,
        [ 0.0009, -0.0452, -0.0855,  ..., -0.0593,  0.0567, -0.2836],
        [-0.0479, -0.0724, -0.0759,  ..., -0.0556,  0.0814, -0.3923],
        [-0.0359, -0.0769, -0.0858,  ..., -0.0664,  0.0618, -0.5169]],
       device='cuda:0')
Computed C_score: tensor([0.7194, 0.7209, 0.5930,  ..., 0.7474, 0.6965, 0.8025], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1718.6882, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2449, 1])
Inertia: tensor([226.8226], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([2449, 1280])
Centroid_list: tensor([[-0.0488, -0.0732, -0.0759,  ..., -0.0557,  0.0811, -0.3917],
        [-0.0488, -0.0732, -0.0759,  ..., -0.0557,  0.0811, -0.3917],
        [-0.0106, -0.0467, -0.0751,  ..., -0.0596,  0.0759, -0.2305],
        ...,
        [ 0.0091, -0.0478, -0.0975,  ..., -0.0593,  0.0364, -0.4147],
        [-0.0488, -0.0732, -0.0759,  ..., -0.0557,  0.0811, -0.3917],
        [-0.0415, -0.0818, -0.0860,  ..., -0.0679,  0.0612, -0.5149]],
       device='cuda:0')
Computed C_score: tensor([0.7122, 0.7144, 0.6192,  ..., 0.7844, 0.6890, 0.7961], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1756.0190, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([2449, 1])
Inertia: tensor([137.2437], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([2449, 1280])
Centroid_list: tensor([[-0.0317, -0.0610, -0.0718,  ..., -0.0693,  0.0813, -0.3107],
        [-0.0317, -0.0610, -0.0718,  ..., -0.0693,  0.0813, -0.3107],
        [ 0.0115, -0.0429, -0.0926,  ..., -0.0630,  0.0451, -0.3280],
        ...,
        [-0.0147, -0.0507, -0.0788,  ..., -0.0532,  0.0707, -0.2919],
        [-0.0317, -0.0610, -0.0718,  ..., -0.0693,  0.0813, -0.3107],
        [-0.0432, -0.0850, -0.0857,  ..., -0.0687,  0.0597, -0.5193]],
       device='cuda:0')
Computed C_score: tensor([0.8310, 0.8232, 0.6044,  ..., 0.7286, 0.8100, 0.7911], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1786.2517, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0004, 0.0012, 0.0023, 0.0035], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([69, 1280])
S-Scores: tensor([0.7816, 2.0466, 4.1700, 6.6514], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([69, 1])
Inertia: tensor([181.5027], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([69, 1280])
Centroid_list: tensor([[-0.0253, -0.0748, -0.0515,  ..., -0.0652,  0.0761, -0.2449],
        [-0.0418, -0.0492, -0.0402,  ..., -0.0988,  0.0561,  0.0915],
        [-0.0253, -0.0748, -0.0515,  ..., -0.0652,  0.0761, -0.2449],
        ...,
        [-0.0253, -0.0748, -0.0515,  ..., -0.0652,  0.0761, -0.2449],
        [-0.0418, -0.0492, -0.0402,  ..., -0.0988,  0.0561,  0.0915],
        [-0.0253, -0.0748, -0.0515,  ..., -0.0652,  0.0761, -0.2449]],
       device='cuda:0')
Computed C_score: tensor([0.7507, 0.6273, 0.6487, 0.8194, 0.7311, 0.8007, 0.8094, 0.7746, 0.5349,
        0.5942, 0.7756, 0.6887, 0.8024, 0.7661, 0.7657, 0.7490, 0.7430, 0.7355,
        0.7785, 0.7473, 0.6529, 0.6626, 0.4442, 0.6837, 0.7070, 0.6100, 0.5161,
        0.7600, 0.6373, 0.7871, 0.6273, 0.6149, 0.7011, 0.5801, 0.6056, 0.7208,
        0.7736, 0.7028, 0.7611, 0.4809, 0.7257, 0.7222, 0.5868, 0.7202, 0.7703,
        0.8315, 0.7759, 0.7277, 0.7702, 0.7308, 0.8508, 0.8109, 0.5972, 0.7809,
        0.7594, 0.5979, 0.7512, 0.7848, 0.5142, 0.8340, 0.7085, 0.7178, 0.6299,
        0.6938, 0.8094, 0.7819, 0.4166, 0.5964, 0.6614], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(48.3305, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([69, 1])
Inertia: tensor([145.4324], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([69, 1280])
Centroid_list: tensor([[-0.0294, -0.0835, -0.0558,  ..., -0.0660,  0.0675, -0.1574],
        [-0.0432, -0.0493, -0.0412,  ..., -0.0993,  0.0560,  0.0331],
        [-0.0268, -0.0499, -0.0380,  ..., -0.0821,  0.0753, -0.0393],
        ...,
        [-0.0432, -0.0493, -0.0412,  ..., -0.0993,  0.0560,  0.0331],
        [-0.0432, -0.0493, -0.0412,  ..., -0.0993,  0.0560,  0.0331],
        [-0.0294, -0.0835, -0.0558,  ..., -0.0660,  0.0675, -0.1574]],
       device='cuda:0')
Computed C_score: tensor([0.8118, 0.6715, 0.8203, 0.8607, 0.7425, 0.8217, 0.8274, 0.9030, 0.5821,
        0.6359, 0.7758, 0.7424, 0.8218, 0.7881, 0.8997, 0.7684, 0.8910, 0.7261,
        0.8034, 0.7756, 0.7144, 0.6851, 0.4557, 0.7436, 0.7111, 0.5867, 0.5273,
        0.8542, 0.6860, 0.8090, 0.6717, 0.7163, 0.9100, 0.6138, 0.6804, 0.9020,
        0.7429, 0.6762, 0.7233, 0.4649, 0.7359, 0.7668, 0.5651, 0.7519, 0.7514,
        0.8184, 0.8639, 0.7296, 0.8059, 0.7154, 0.8652, 0.8104, 0.5978, 0.8666,
        0.7850, 0.8013, 0.7308, 0.8082, 0.5688, 0.8098, 0.7381, 0.8084, 0.7601,
        0.6700, 0.8375, 0.7274, 0.4164, 0.6672, 0.7035], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(51.0207, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([69, 1])
Inertia: tensor([115.3999], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([69, 1280])
Centroid_list: tensor([[-0.0242, -0.0893, -0.0503,  ..., -0.0758,  0.0666,  0.0150],
        [-0.0242, -0.0893, -0.0503,  ..., -0.0758,  0.0666,  0.0150],
        [-0.0420, -0.0692, -0.0529,  ..., -0.0622,  0.0738, -0.2405],
        ...,
        [-0.0411, -0.0464, -0.0418,  ..., -0.1021,  0.0561, -0.0269],
        [-0.0411, -0.0464, -0.0418,  ..., -0.1021,  0.0561, -0.0269],
        [-0.0242, -0.0893, -0.0503,  ..., -0.0758,  0.0666,  0.0150]],
       device='cuda:0')
Computed C_score: tensor([0.8602, 0.6672, 0.7826, 0.8719, 0.7389, 0.8130, 0.8316, 0.8947, 0.6569,
        0.6375, 0.7352, 0.7535, 0.8116, 0.7829, 0.9015, 0.7818, 0.8961, 0.7122,
        0.8091, 0.7535, 0.7166, 0.6771, 0.5095, 0.7533, 0.6628, 0.5919, 0.5290,
        0.8934, 0.6747, 0.7366, 0.7450, 0.7991, 0.9088, 0.6756, 0.6857, 0.8988,
        0.8190, 0.7310, 0.7321, 0.4710, 0.7142, 0.7757, 0.5675, 0.7603, 0.7489,
        0.8192, 0.8763, 0.7162, 0.8783, 0.7875, 0.8749, 0.8129, 0.6084, 0.9065,
        0.7054, 0.7937, 0.7226, 0.7631, 0.6471, 0.8096, 0.7506, 0.7790, 0.6992,
        0.7092, 0.8424, 0.7645, 0.4364, 0.6694, 0.7288], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(51.5708, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([69, 1])
Inertia: tensor([103.0244], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([69, 1280])
Centroid_list: tensor([[-0.0190, -0.0942, -0.0547,  ..., -0.0727,  0.0811,  0.0274],
        [-0.0379, -0.0526, -0.0465,  ..., -0.1044,  0.0530,  0.0373],
        [-0.0307, -0.0555, -0.0442,  ..., -0.0871,  0.0749, -0.0711],
        ...,
        [-0.0426, -0.0695, -0.0551,  ..., -0.0665,  0.0643, -0.2073],
        [-0.0379, -0.0526, -0.0465,  ..., -0.1044,  0.0530,  0.0373],
        [-0.0190, -0.0942, -0.0547,  ..., -0.0727,  0.0811,  0.0274]],
       device='cuda:0')
Computed C_score: tensor([0.8759, 0.6882, 0.8447, 0.8504, 0.7549, 0.8026, 0.8055, 0.9000, 0.7126,
        0.6075, 0.8115, 0.7658, 0.8092, 0.8130, 0.8860, 0.7645, 0.8769, 0.7826,
        0.7876, 0.7852, 0.7419, 0.7153, 0.5185, 0.7707, 0.6699, 0.6056, 0.5145,
        0.8341, 0.7085, 0.8019, 0.7573, 0.7443, 0.9091, 0.6887, 0.7133, 0.9060,
        0.8088, 0.8003, 0.7906, 0.4900, 0.7549, 0.7883, 0.5603, 0.7508, 0.7431,
        0.9089, 0.8622, 0.7509, 0.8324, 0.8215, 0.8423, 0.7889, 0.5920, 0.8489,
        0.8229, 0.8283, 0.7513, 0.8303, 0.6910, 0.9295, 0.7430, 0.8078, 0.7648,
        0.7191, 0.8304, 0.8976, 0.4768, 0.7043, 0.7480], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(52.8048, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0159, 0.0386, 0.0748, 0.1119], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1763, 1280])
S-Scores: tensor([0.6338, 1.8401, 3.6120, 6.2258], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1763, 1])
Inertia: tensor([244.3278], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1763, 1280])
Centroid_list: tensor([[-0.0414, -0.0686, -0.0823,  ..., -0.0609,  0.0788, -0.3797],
        [-0.0414, -0.0686, -0.0823,  ..., -0.0609,  0.0788, -0.3797],
        [-0.0275, -0.0405, -0.0656,  ..., -0.0208,  0.0443, -0.6443],
        ...,
        [-0.0414, -0.0686, -0.0823,  ..., -0.0609,  0.0788, -0.3797],
        [-0.0275, -0.0405, -0.0656,  ..., -0.0208,  0.0443, -0.6443],
        [-0.0414, -0.0686, -0.0823,  ..., -0.0609,  0.0788, -0.3797]],
       device='cuda:0')
Computed C_score: tensor([0.5937, 0.6367, 0.7824,  ..., 0.5729, 0.4150, 0.7378], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1324.8368, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1763, 1])
Inertia: tensor([189.0591], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1763, 1280])
Centroid_list: tensor([[-0.0290, -0.0520, -0.0827,  ..., -0.0576,  0.0747, -0.3420],
        [-0.0512, -0.0822, -0.0816,  ..., -0.0588,  0.0809, -0.4016],
        [-0.0301, -0.0403, -0.0594,  ..., -0.0100,  0.0347, -0.7673],
        ...,
        [-0.0290, -0.0520, -0.0827,  ..., -0.0576,  0.0747, -0.3420],
        [-0.0290, -0.0520, -0.0827,  ..., -0.0576,  0.0747, -0.3420],
        [-0.0512, -0.0822, -0.0816,  ..., -0.0588,  0.0809, -0.4016]],
       device='cuda:0')
Computed C_score: tensor([0.6886, 0.6593, 0.7816,  ..., 0.6410, 0.5283, 0.7374], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1366.4333, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1763, 1])
Inertia: tensor([193.6014], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1763, 1280])
Centroid_list: tensor([[-0.0294, -0.0504, -0.0848,  ..., -0.0527,  0.0747, -0.3298],
        [-0.0332, -0.0662, -0.0752,  ..., -0.0721,  0.0771, -0.3685],
        [-0.0301, -0.0404, -0.0593,  ..., -0.0103,  0.0347, -0.7650],
        ...,
        [-0.0294, -0.0504, -0.0848,  ..., -0.0527,  0.0747, -0.3298],
        [-0.0294, -0.0504, -0.0848,  ..., -0.0527,  0.0747, -0.3298],
        [-0.0332, -0.0662, -0.0752,  ..., -0.0721,  0.0771, -0.3685]],
       device='cuda:0')
Computed C_score: tensor([0.6794, 0.5979, 0.7801,  ..., 0.6453, 0.5363, 0.7883], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1384.5051, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1763, 1])
Inertia: tensor([185.6603], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1763, 1280])
Centroid_list: tensor([[-0.0146, -0.0420, -0.0879,  ..., -0.0584,  0.0801, -0.2102],
        [-0.0380, -0.0684, -0.0790,  ..., -0.0682,  0.0779, -0.3718],
        [-0.0286, -0.0372, -0.0601,  ..., -0.0071,  0.0308, -0.7678],
        ...,
        [-0.0146, -0.0420, -0.0879,  ..., -0.0584,  0.0801, -0.2102],
        [-0.0146, -0.0420, -0.0879,  ..., -0.0584,  0.0801, -0.2102],
        [-0.0380, -0.0684, -0.0790,  ..., -0.0682,  0.0779, -0.3718]],
       device='cuda:0')
Computed C_score: tensor([0.6955, 0.6202, 0.7715,  ..., 0.6087, 0.5531, 0.7615], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1401.4070, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0005, 0.0013, 0.0026, 0.0044], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([328, 1280])
S-Scores: tensor([0.7011, 2.1472, 4.0265, 6.1918], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([328, 1])
Inertia: tensor([144.5411], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([328, 1280])
Centroid_list: tensor([[-0.0503, -0.0501, -0.0326,  ..., -0.0624,  0.0806, -0.1592],
        [-0.0503, -0.0501, -0.0326,  ..., -0.0624,  0.0806, -0.1592],
        [-0.0503, -0.0501, -0.0326,  ..., -0.0624,  0.0806, -0.1592],
        ...,
        [-0.0503, -0.0501, -0.0326,  ..., -0.0624,  0.0806, -0.1592],
        [-0.0503, -0.0501, -0.0326,  ..., -0.0624,  0.0806, -0.1592],
        [-0.0503, -0.0501, -0.0326,  ..., -0.0624,  0.0806, -0.1592]],
       device='cuda:0')
Computed C_score: tensor([0.7090, 0.7470, 0.6059, 0.8152, 0.5945, 0.7618, 0.7243, 0.5498, 0.5097,
        0.5054, 0.7341, 0.6460, 0.8369, 0.7284, 0.5175, 0.7441, 0.7981, 0.6312,
        0.7206, 0.6708, 0.7797, 0.5790, 0.5516, 0.8589, 0.5804, 0.8056, 0.7697,
        0.7081, 0.5547, 0.8063, 0.6967, 0.7157, 0.6996, 0.6832, 0.3631, 0.7248,
        0.8289, 0.6348, 0.7596, 0.7214, 0.5193, 0.7840, 0.7126, 0.7139, 0.8378,
        0.5510, 0.7335, 0.7473, 0.7553, 0.7296, 0.5857, 0.7232, 0.5376, 0.5694,
        0.8371, 0.6406, 0.6581, 0.7867, 0.7889, 0.7258, 0.6970, 0.6861, 0.5995,
        0.6359, 0.7793, 0.6858, 0.6134, 0.8657, 0.8000, 0.7381, 0.7255, 0.6696,
        0.6492, 0.7804, 0.6675, 0.6433, 0.7958, 0.7179, 0.6688, 0.7286, 0.6349,
        0.6436, 0.6914, 0.7469, 0.6727, 0.7110, 0.6908, 0.5912, 0.6628, 0.6874,
        0.7209, 0.5736, 0.6495, 0.7464, 0.6538, 0.5721, 0.5041, 0.7317, 0.7255,
        0.5685, 0.6138, 0.7115, 0.7454, 0.6068, 0.7767, 0.7932, 0.6578, 0.5153,
        0.7671, 0.7108, 0.5782, 0.8066, 0.6611, 0.4756, 0.8359, 0.6755, 0.6784,
        0.7411, 0.4233, 0.5229, 0.6136, 0.7072, 0.7516, 0.6729, 0.8141, 0.7038,
        0.5666, 0.5447, 0.5408, 0.7307, 0.7361, 0.6826, 0.6734, 0.5756, 0.7577,
        0.6583, 0.7470, 0.7320, 0.5256, 0.5960, 0.8697, 0.7299, 0.6084, 0.6697,
        0.7891, 0.6925, 0.5975, 0.6562, 0.4977, 0.6034, 0.6356, 0.5914, 0.7333,
        0.6801, 0.6086, 0.6206, 0.5852, 0.7677, 0.5601, 0.6721, 0.5833, 0.7167,
        0.5802, 0.6636, 0.7937, 0.7314, 0.7360, 0.6304, 0.7567, 0.6459, 0.7173,
        0.6107, 0.7669, 0.7486, 0.6874, 0.7147, 0.7512, 0.7002, 0.6899, 0.6393,
        0.7960, 0.6779, 0.6525, 0.7147, 0.6990, 0.6821, 0.4994, 0.5625, 0.7778,
        0.8014, 0.7057, 0.7678, 0.5275, 0.5893, 0.7026, 0.5399, 0.8208, 0.6278,
        0.7461, 0.6618, 0.8251, 0.6082, 0.7537, 0.8734, 0.6502, 0.7212, 0.5903,
        0.7890, 0.6199, 0.6532, 0.6915, 0.7732, 0.7067, 0.7442, 0.7925, 0.7465,
        0.6088, 0.7798, 0.6972, 0.6194, 0.5989, 0.7776, 0.5641, 0.7530, 0.7422,
        0.6601, 0.6302, 0.6373, 0.7511, 0.8407, 0.6796, 0.7870, 0.6965, 0.5164,
        0.6103, 0.6849, 0.7479, 0.7445, 0.6714, 0.6046, 0.6016, 0.7442, 0.6877,
        0.8489, 0.6567, 0.5280, 0.7116, 0.7624, 0.5726, 0.7323, 0.7100, 0.7107,
        0.7681, 0.6202, 0.7552, 0.5538, 0.7164, 0.7441, 0.6301, 0.7674, 0.6573,
        0.6417, 0.5686, 0.6228, 0.6927, 0.6842, 0.5800, 0.7736, 0.7432, 0.5759,
        0.7376, 0.7687, 0.6571, 0.7638, 0.6230, 0.7210, 0.6503, 0.6429, 0.6554,
        0.7309, 0.6558, 0.6515, 0.6367, 0.8049, 0.7407, 0.6771, 0.7235, 0.6162,
        0.6753, 0.7647, 0.7380, 0.7110, 0.6893, 0.6723, 0.8120, 0.5617, 0.7664,
        0.7647, 0.5688, 0.7603, 0.7846, 0.7665, 0.5185, 0.5855, 0.6939, 0.7047,
        0.7228, 0.6503, 0.7995, 0.7527, 0.7697, 0.5503, 0.7471, 0.7971, 0.7293,
        0.7879, 0.6632, 0.7762, 0.7386, 0.8279, 0.8933, 0.7382, 0.7597, 0.5921,
        0.7985, 0.5661, 0.6268, 0.6760], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(225.1113, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([328, 1])
Inertia: tensor([135.9963], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([328, 1280])
Centroid_list: tensor([[-0.0650, -0.0557, -0.0383,  ..., -0.0687,  0.0764, -0.0013],
        [-0.0650, -0.0557, -0.0383,  ..., -0.0687,  0.0764, -0.0013],
        [-0.0325, -0.0467, -0.0254,  ..., -0.0560,  0.0838, -0.4810],
        ...,
        [-0.0325, -0.0467, -0.0254,  ..., -0.0560,  0.0838, -0.4810],
        [-0.0650, -0.0557, -0.0383,  ..., -0.0687,  0.0764, -0.0013],
        [-0.0650, -0.0557, -0.0383,  ..., -0.0687,  0.0764, -0.0013]],
       device='cuda:0')
Computed C_score: tensor([0.7283, 0.7606, 0.6926, 0.8219, 0.5839, 0.7760, 0.7168, 0.5098, 0.5411,
        0.5413, 0.7084, 0.6869, 0.8198, 0.7561, 0.5656, 0.7242, 0.8200, 0.6215,
        0.8245, 0.6517, 0.7606, 0.5448, 0.5364, 0.8594, 0.6420, 0.8074, 0.7919,
        0.7382, 0.5611, 0.8094, 0.6826, 0.7535, 0.6907, 0.7271, 0.3699, 0.7872,
        0.8442, 0.6599, 0.7818, 0.7234, 0.5109, 0.7899, 0.6881, 0.7101, 0.8467,
        0.5913, 0.7056, 0.8134, 0.7733, 0.7869, 0.5801, 0.7147, 0.5611, 0.5981,
        0.8246, 0.7231, 0.6462, 0.8141, 0.8002, 0.7355, 0.6653, 0.8176, 0.5931,
        0.7044, 0.7951, 0.6471, 0.6670, 0.8528, 0.7828, 0.7247, 0.7371, 0.6633,
        0.7016, 0.7756, 0.7297, 0.6385, 0.7758, 0.7425, 0.6760, 0.7385, 0.6187,
        0.6458, 0.7093, 0.7296, 0.7364, 0.8311, 0.7419, 0.5948, 0.7532, 0.6965,
        0.7547, 0.5787, 0.6960, 0.7127, 0.6419, 0.5594, 0.5810, 0.7064, 0.7750,
        0.6375, 0.6052, 0.7159, 0.7578, 0.5990, 0.7961, 0.7706, 0.7237, 0.5299,
        0.7961, 0.7314, 0.6138, 0.8247, 0.6493, 0.4840, 0.8459, 0.8168, 0.6787,
        0.7904, 0.4484, 0.5290, 0.6282, 0.6829, 0.8289, 0.7759, 0.8324, 0.7732,
        0.6140, 0.5803, 0.5463, 0.7263, 0.7363, 0.6759, 0.6516, 0.5538, 0.7767,
        0.6683, 0.7160, 0.7169, 0.5911, 0.6296, 0.8883, 0.7539, 0.6178, 0.6947,
        0.8077, 0.6962, 0.6890, 0.6601, 0.5093, 0.6615, 0.6104, 0.6042, 0.8136,
        0.7448, 0.6423, 0.6647, 0.6002, 0.7903, 0.5916, 0.6446, 0.5798, 0.7446,
        0.5821, 0.6642, 0.7860, 0.7143, 0.7937, 0.6234, 0.7273, 0.6249, 0.7133,
        0.6395, 0.7707, 0.7492, 0.7267, 0.7869, 0.7517, 0.7399, 0.6540, 0.6655,
        0.7989, 0.7186, 0.6469, 0.7079, 0.7373, 0.6920, 0.5666, 0.5456, 0.7513,
        0.7859, 0.7037, 0.7860, 0.5621, 0.7105, 0.7275, 0.5975, 0.8097, 0.6383,
        0.7622, 0.7183, 0.8135, 0.6254, 0.7629, 0.8819, 0.7179, 0.7841, 0.6312,
        0.7703, 0.6904, 0.6537, 0.7550, 0.7649, 0.6970, 0.7231, 0.7859, 0.7625,
        0.6462, 0.7594, 0.7251, 0.7289, 0.6403, 0.7605, 0.5845, 0.7611, 0.7693,
        0.7043, 0.6265, 0.6703, 0.7785, 0.8486, 0.6607, 0.8006, 0.7261, 0.5752,
        0.6446, 0.6734, 0.7625, 0.7184, 0.7065, 0.6035, 0.6402, 0.7801, 0.7195,
        0.8619, 0.6733, 0.5834, 0.6959, 0.8054, 0.6073, 0.7546, 0.6862, 0.7236,
        0.7460, 0.6096, 0.7756, 0.5456, 0.7343, 0.7652, 0.6451, 0.7536, 0.7579,
        0.6540, 0.5807, 0.6301, 0.7193, 0.7160, 0.6087, 0.7511, 0.7625, 0.6069,
        0.7281, 0.7882, 0.6469, 0.7493, 0.6404, 0.7647, 0.6455, 0.7690, 0.7919,
        0.7240, 0.7330, 0.7220, 0.6210, 0.8129, 0.8439, 0.7690, 0.7092, 0.5995,
        0.7220, 0.7633, 0.7155, 0.7156, 0.7705, 0.6758, 0.7848, 0.5950, 0.7664,
        0.7804, 0.6032, 0.7701, 0.7991, 0.7761, 0.5548, 0.6359, 0.7285, 0.7400,
        0.7171, 0.6392, 0.7857, 0.7330, 0.7744, 0.5767, 0.7074, 0.8190, 0.7546,
        0.8073, 0.6700, 0.7541, 0.7473, 0.8475, 0.8944, 0.7116, 0.7141, 0.6484,
        0.7958, 0.5665, 0.6870, 0.6940], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(230.9568, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([328, 1])
Inertia: tensor([144.1558], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([328, 1280])
Centroid_list: tensor([[-0.0583, -0.0494, -0.0374,  ..., -0.0644,  0.0797,  0.0706],
        [-0.0891, -0.0898, -0.0507,  ..., -0.0754,  0.0678, -0.3998],
        [-0.0317, -0.0429, -0.0242,  ..., -0.0544,  0.0842, -0.4794],
        ...,
        [-0.0317, -0.0429, -0.0242,  ..., -0.0544,  0.0842, -0.4794],
        [-0.0583, -0.0494, -0.0374,  ..., -0.0644,  0.0797,  0.0706],
        [-0.0583, -0.0494, -0.0374,  ..., -0.0644,  0.0797,  0.0706]],
       device='cuda:0')
Computed C_score: tensor([0.7094, 0.8339, 0.7029, 0.8391, 0.6062, 0.7846, 0.7534, 0.6349, 0.5610,
        0.5758, 0.7684, 0.7139, 0.8982, 0.8540, 0.5998, 0.8270, 0.8793, 0.6085,
        0.8349, 0.6711, 0.8105, 0.5545, 0.5272, 0.8050, 0.6266, 0.8205, 0.8502,
        0.7422, 0.5624, 0.7605, 0.7012, 0.7582, 0.7003, 0.7222, 0.3651, 0.7985,
        0.8628, 0.8268, 0.8455, 0.7317, 0.5663, 0.8326, 0.7683, 0.7054, 0.8039,
        0.6518, 0.8733, 0.8168, 0.8350, 0.7893, 0.5612, 0.7686, 0.5879, 0.5781,
        0.9018, 0.7217, 0.7412, 0.8842, 0.8160, 0.7719, 0.6670, 0.8303, 0.5606,
        0.7096, 0.8526, 0.6884, 0.6716, 0.9068, 0.8204, 0.7197, 0.7617, 0.6368,
        0.7161, 0.8040, 0.7293, 0.6788, 0.8730, 0.8168, 0.6700, 0.7743, 0.6383,
        0.6822, 0.7194, 0.7321, 0.7479, 0.8397, 0.7611, 0.5879, 0.7585, 0.7595,
        0.7631, 0.5790, 0.7056, 0.8792, 0.6604, 0.5503, 0.6135, 0.8565, 0.7675,
        0.6191, 0.6404, 0.7160, 0.7670, 0.6077, 0.8277, 0.8730, 0.7230, 0.5407,
        0.7976, 0.7410, 0.6663, 0.7940, 0.6831, 0.4801, 0.8559, 0.8307, 0.6607,
        0.8075, 0.4594, 0.5107, 0.6298, 0.8154, 0.8289, 0.7842, 0.8508, 0.7862,
        0.6176, 0.5710, 0.5661, 0.6939, 0.7425, 0.8168, 0.6711, 0.5735, 0.8344,
        0.7715, 0.8817, 0.8613, 0.6133, 0.6285, 0.9072, 0.8140, 0.6252, 0.7509,
        0.8386, 0.7022, 0.6935, 0.6997, 0.5852, 0.6496, 0.6404, 0.6587, 0.8127,
        0.7246, 0.7322, 0.6482, 0.6100, 0.8609, 0.6156, 0.7245, 0.5660, 0.7354,
        0.6193, 0.7050, 0.8014, 0.7385, 0.8020, 0.6266, 0.8922, 0.6463, 0.6775,
        0.6783, 0.7855, 0.7353, 0.7083, 0.7696, 0.7495, 0.7546, 0.6832, 0.6805,
        0.7901, 0.7423, 0.6319, 0.8933, 0.7744, 0.6610, 0.5647, 0.5674, 0.9089,
        0.7876, 0.6881, 0.8318, 0.5410, 0.7066, 0.7262, 0.5928, 0.8548, 0.6422,
        0.7795, 0.7273, 0.8237, 0.6150, 0.8113, 0.8425, 0.6954, 0.7900, 0.6197,
        0.8624, 0.7006, 0.6344, 0.7389, 0.7410, 0.6853, 0.8740, 0.7582, 0.7612,
        0.6292, 0.8708, 0.7567, 0.7306, 0.6447, 0.7903, 0.5851, 0.7442, 0.8254,
        0.8256, 0.6411, 0.6641, 0.8064, 0.8420, 0.7783, 0.8274, 0.7815, 0.5504,
        0.6536, 0.6627, 0.7606, 0.7053, 0.8158, 0.5789, 0.6494, 0.7471, 0.7234,
        0.8736, 0.6695, 0.5958, 0.7248, 0.8324, 0.6115, 0.7556, 0.8111, 0.7975,
        0.8653, 0.5855, 0.8163, 0.5671, 0.7445, 0.8086, 0.6806, 0.8158, 0.7628,
        0.6316, 0.7016, 0.6048, 0.7199, 0.7975, 0.6181, 0.8892, 0.7664, 0.5893,
        0.7444, 0.8170, 0.6822, 0.8097, 0.6662, 0.7280, 0.7077, 0.7720, 0.7837,
        0.7035, 0.7215, 0.7073, 0.6267, 0.8525, 0.8413, 0.7801, 0.8239, 0.6669,
        0.7075, 0.7607, 0.8270, 0.7121, 0.7786, 0.7014, 0.7814, 0.6154, 0.7358,
        0.7891, 0.5974, 0.7797, 0.8088, 0.7946, 0.5861, 0.6494, 0.7751, 0.7367,
        0.7262, 0.7082, 0.8084, 0.8396, 0.7931, 0.5529, 0.7318, 0.8763, 0.8173,
        0.8558, 0.7219, 0.8796, 0.7440, 0.9036, 0.8694, 0.7505, 0.7393, 0.6981,
        0.7551, 0.5689, 0.6658, 0.6998], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(239.1516, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([328, 1])
Inertia: tensor([145.1610], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([328, 1280])
Centroid_list: tensor([[-0.0586, -0.0498, -0.0375,  ..., -0.0642,  0.0793,  0.0700],
        [-0.0885, -0.0893, -0.0499,  ..., -0.0753,  0.0678, -0.4096],
        [-0.0314, -0.0431, -0.0239,  ..., -0.0541,  0.0839, -0.4876],
        ...,
        [-0.0314, -0.0431, -0.0239,  ..., -0.0541,  0.0839, -0.4876],
        [-0.0586, -0.0498, -0.0375,  ..., -0.0642,  0.0793,  0.0700],
        [-0.0586, -0.0498, -0.0375,  ..., -0.0642,  0.0793,  0.0700]],
       device='cuda:0')
Computed C_score: tensor([0.7072, 0.8347, 0.7014, 0.8863, 0.6090, 0.7887, 0.7553, 0.6345, 0.5618,
        0.5773, 0.7694, 0.7174, 0.8973, 0.8630, 0.6005, 0.8281, 0.8913, 0.6093,
        0.8372, 0.6722, 0.8112, 0.5567, 0.5244, 0.8021, 0.6283, 0.8797, 0.8238,
        0.7421, 0.5598, 0.7649, 0.7044, 0.7599, 0.7007, 0.7212, 0.4279, 0.7985,
        0.8658, 0.8284, 0.8629, 0.7197, 0.5638, 0.8759, 0.7677, 0.7039, 0.8042,
        0.6531, 0.8738, 0.8211, 0.8408, 0.7887, 0.5571, 0.7701, 0.5881, 0.5778,
        0.8997, 0.7223, 0.7421, 0.8585, 0.8459, 0.8371, 0.6671, 0.8322, 0.5609,
        0.7117, 0.8913, 0.6893, 0.6669, 0.9058, 0.8195, 0.7198, 0.7740, 0.6445,
        0.7125, 0.8039, 0.7312, 0.6805, 0.8731, 0.8272, 0.6679, 0.8006, 0.6399,
        0.6836, 0.7230, 0.7332, 0.7471, 0.8412, 0.7628, 0.5863, 0.7576, 0.8056,
        0.7629, 0.5787, 0.7083, 0.8807, 0.6595, 0.6047, 0.6147, 0.8584, 0.7693,
        0.6221, 0.6392, 0.7149, 0.8452, 0.6051, 0.9683, 0.8742, 0.7211, 0.5406,
        0.8013, 0.7437, 0.6674, 0.7952, 0.6846, 0.4766, 0.8446, 0.8326, 0.7590,
        0.8077, 0.4588, 0.5042, 0.6330, 0.8169, 0.8313, 0.7829, 0.8275, 0.7857,
        0.6162, 0.5717, 0.5663, 0.6950, 0.7445, 0.8176, 0.6671, 0.5747, 0.8953,
        0.7712, 0.8833, 0.8637, 0.6139, 0.6284, 0.8815, 0.9508, 0.6275, 0.9266,
        0.9625, 0.7624, 0.6946, 0.7682, 0.5839, 0.6484, 0.6408, 0.6589, 0.8134,
        0.7242, 0.7321, 0.6462, 0.6061, 0.8897, 0.6188, 0.7260, 0.5622, 0.7326,
        0.6673, 0.7777, 0.8000, 0.7402, 0.8027, 0.6271, 0.8941, 0.6473, 0.6767,
        0.6798, 0.8203, 0.7480, 0.7101, 0.7692, 0.8021, 0.7527, 0.6836, 0.6791,
        0.7869, 0.7434, 0.6752, 0.8943, 0.7753, 0.6163, 0.5580, 0.5638, 0.9094,
        0.7873, 0.6770, 0.8890, 0.5429, 0.7034, 0.7239, 0.5926, 0.8553, 0.6577,
        0.9372, 0.7292, 0.8234, 0.6109, 0.8376, 0.8649, 0.6962, 0.7919, 0.6199,
        0.8631, 0.7026, 0.6355, 0.7417, 0.7417, 0.6866, 0.8725, 0.7559, 0.7610,
        0.6310, 0.8714, 0.7580, 0.7289, 0.6461, 0.7892, 0.6549, 0.9094, 0.8366,
        0.8266, 0.6429, 0.6643, 0.8077, 0.8595, 0.7788, 0.8681, 0.9129, 0.5490,
        0.6531, 0.6288, 0.7242, 0.7053, 0.8162, 0.6142, 0.6488, 0.7467, 0.7248,
        0.8339, 0.6690, 0.5950, 0.7253, 0.8342, 0.6137, 0.7547, 0.8130, 0.8076,
        0.8639, 0.5884, 0.8156, 0.5679, 0.7478, 0.9609, 0.6830, 0.8128, 0.7611,
        0.6255, 0.7021, 0.6059, 0.7189, 0.7707, 0.6128, 0.8883, 0.7672, 0.5861,
        0.7446, 0.9610, 0.6817, 0.8071, 0.6677, 0.7260, 0.7090, 0.7707, 0.7809,
        0.7002, 0.7209, 0.7069, 0.6258, 0.9034, 0.8415, 0.7815, 0.8217, 0.6668,
        0.7073, 0.8216, 0.8265, 0.7130, 0.7816, 0.7585, 0.7823, 0.6175, 0.7885,
        0.7881, 0.5971, 0.9249, 0.9220, 0.7798, 0.5827, 0.6440, 0.7758, 0.7389,
        0.7231, 0.7095, 0.8085, 0.8395, 0.7690, 0.5525, 0.7340, 0.9144, 0.9316,
        0.9349, 0.8127, 0.8799, 0.8471, 0.9108, 0.8742, 0.7495, 0.7413, 0.6992,
        0.7414, 0.5699, 0.6628, 0.6980], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(242.5595, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0031, 0.0092, 0.0166, 0.0249], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([243, 1280])
S-Scores: tensor([0.6125, 1.9442, 3.8469, 6.2167], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([243, 1])
Inertia: tensor([181.4667], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([243, 1280])
Centroid_list: tensor([[-0.0568, -0.0810, -0.0681,  ..., -0.0857,  0.0579, -0.2493],
        [-0.0568, -0.0810, -0.0681,  ..., -0.0857,  0.0579, -0.2493],
        [-0.0568, -0.0810, -0.0681,  ..., -0.0857,  0.0579, -0.2493],
        ...,
        [-0.0568, -0.0810, -0.0681,  ..., -0.0857,  0.0579, -0.2493],
        [-0.0390, -0.0791, -0.0543,  ..., -0.0628,  0.0888, -0.2743],
        [-0.0568, -0.0810, -0.0681,  ..., -0.0857,  0.0579, -0.2493]],
       device='cuda:0')
Computed C_score: tensor([0.7335, 0.7138, 0.7341, 0.6668, 0.7956, 0.5859, 0.6683, 0.7889, 0.7940,
        0.7933, 0.8070, 0.4570, 0.5460, 0.8281, 0.7659, 0.6504, 0.7763, 0.8247,
        0.8432, 0.7257, 0.7436, 0.7850, 0.7721, 0.5850, 0.7863, 0.5576, 0.7693,
        0.6366, 0.8487, 0.7523, 0.6806, 0.7279, 0.6424, 0.7871, 0.7900, 0.6855,
        0.8092, 0.7070, 0.7678, 0.5698, 0.7798, 0.7837, 0.7300, 0.7993, 0.7640,
        0.7769, 0.7577, 0.8546, 0.9031, 0.7608, 0.5448, 0.7685, 0.8223, 0.7975,
        0.7923, 0.5238, 0.6071, 0.8556, 0.7375, 0.7954, 0.8302, 0.7466, 0.8389,
        0.6412, 0.6855, 0.7306, 0.5691, 0.7595, 0.4681, 0.7606, 0.7044, 0.8493,
        0.8544, 0.6908, 0.8394, 0.5706, 0.6081, 0.8301, 0.6137, 0.6712, 0.4571,
        0.6251, 0.6561, 0.6722, 0.7852, 0.5370, 0.7113, 0.7248, 0.5333, 0.7319,
        0.6319, 0.7130, 0.5733, 0.6930, 0.7501, 0.7263, 0.8168, 0.8268, 0.8764,
        0.8416, 0.6392, 0.8406, 0.6960, 0.5208, 0.5775, 0.5332, 0.5487, 0.7568,
        0.7661, 0.5738, 0.5881, 0.5183, 0.6041, 0.7736, 0.8133, 0.8451, 0.7973,
        0.5966, 0.7774, 0.5537, 0.7251, 0.6163, 0.6968, 0.7495, 0.7055, 0.8533,
        0.5169, 0.8267, 0.6759, 0.7895, 0.7830, 0.7689, 0.8043, 0.7935, 0.8728,
        0.7327, 0.8200, 0.6859, 0.6116, 0.6442, 0.7603, 0.6798, 0.7882, 0.5556,
        0.5490, 0.6167, 0.7461, 0.6751, 0.7686, 0.6452, 0.7632, 0.7287, 0.8192,
        0.8362, 0.8629, 0.7590, 0.7145, 0.9107, 0.7297, 0.8796, 0.7522, 0.6167,
        0.6686, 0.4412, 0.7633, 0.6184, 0.7654, 0.8275, 0.8897, 0.7000, 0.6357,
        0.8157, 0.8888, 0.5843, 0.6868, 0.7857, 0.7249, 0.7132, 0.8489, 0.7645,
        0.7634, 0.6921, 0.6008, 0.6628, 0.8082, 0.6378, 0.8078, 0.7690, 0.7332,
        0.7203, 0.6721, 0.7494, 0.7968, 0.6687, 0.5922, 0.7477, 0.7979, 0.6503,
        0.8243, 0.5841, 0.6982, 0.5835, 0.7193, 0.6894, 0.7419, 0.8670, 0.7786,
        0.8349, 0.7620, 0.8472, 0.8523, 0.8082, 0.6101, 0.7914, 0.7444, 0.8049,
        0.8594, 0.6483, 0.6490, 0.8438, 0.8217, 0.7322, 0.8216, 0.5884, 0.8754,
        0.6296, 0.7696, 0.6875, 0.7995, 0.8268, 0.8568, 0.7231, 0.7386, 0.7610,
        0.8858, 0.8664, 0.7658, 0.8643, 0.7836, 0.8451, 0.7121, 0.7635, 0.4975],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(176.5041, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([243, 1])
Inertia: tensor([130.3121], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([243, 1280])
Centroid_list: tensor([[-0.0663, -0.0864, -0.0786,  ..., -0.0893,  0.0501, -0.2329],
        [-0.0427, -0.0743, -0.0543,  ..., -0.0804,  0.0706, -0.2797],
        [-0.0663, -0.0864, -0.0786,  ..., -0.0893,  0.0501, -0.2329],
        ...,
        [-0.0427, -0.0743, -0.0543,  ..., -0.0804,  0.0706, -0.2797],
        [-0.0411, -0.0802, -0.0550,  ..., -0.0583,  0.0899, -0.2555],
        [-0.0427, -0.0743, -0.0543,  ..., -0.0804,  0.0706, -0.2797]],
       device='cuda:0')
Computed C_score: tensor([0.8177, 0.6995, 0.7339, 0.7450, 0.8316, 0.6568, 0.7008, 0.8188, 0.7947,
        0.8399, 0.7681, 0.5463, 0.5182, 0.8446, 0.8278, 0.7019, 0.8402, 0.8175,
        0.8367, 0.8228, 0.7512, 0.8704, 0.7972, 0.5833, 0.8502, 0.6142, 0.8420,
        0.6521, 0.8322, 0.8001, 0.7081, 0.7194, 0.7389, 0.8437, 0.8598, 0.7555,
        0.8383, 0.6969, 0.7699, 0.5807, 0.7359, 0.8054, 0.7499, 0.8613, 0.7914,
        0.8069, 0.8127, 0.8471, 0.9152, 0.7798, 0.5600, 0.7736, 0.8107, 0.8281,
        0.7706, 0.5226, 0.6195, 0.8291, 0.7575, 0.7839, 0.8010, 0.7738, 0.8805,
        0.6904, 0.7123, 0.6695, 0.5349, 0.7820, 0.5485, 0.8199, 0.6256, 0.8796,
        0.8315, 0.6770, 0.8478, 0.6378, 0.6731, 0.8589, 0.6331, 0.7281, 0.6048,
        0.6531, 0.6165, 0.6725, 0.7644, 0.5812, 0.6602, 0.7088, 0.6101, 0.7966,
        0.6817, 0.8130, 0.5835, 0.7035, 0.7647, 0.6842, 0.8002, 0.7937, 0.8853,
        0.8504, 0.6870, 0.8256, 0.7796, 0.6495, 0.5715, 0.5345, 0.5732, 0.7360,
        0.7381, 0.6676, 0.5937, 0.6076, 0.6492, 0.8090, 0.8131, 0.8729, 0.8432,
        0.7181, 0.8563, 0.6422, 0.8183, 0.6214, 0.7629, 0.7105, 0.6603, 0.8586,
        0.5636, 0.8517, 0.6614, 0.7487, 0.7909, 0.8493, 0.8439, 0.7838, 0.8983,
        0.7836, 0.8141, 0.7571, 0.7192, 0.6746, 0.7570, 0.7120, 0.8264, 0.5967,
        0.6220, 0.6749, 0.7812, 0.7508, 0.7853, 0.7921, 0.8097, 0.6848, 0.7986,
        0.8290, 0.8758, 0.8384, 0.7861, 0.9097, 0.7771, 0.8815, 0.8308, 0.6996,
        0.6727, 0.4831, 0.8266, 0.6287, 0.7392, 0.8460, 0.8936, 0.7290, 0.6578,
        0.8165, 0.9194, 0.6006, 0.6736, 0.8239, 0.7351, 0.7972, 0.8857, 0.7634,
        0.7727, 0.7349, 0.7188, 0.7877, 0.8103, 0.6423, 0.8054, 0.8419, 0.6732,
        0.7957, 0.7512, 0.7274, 0.8713, 0.7356, 0.6558, 0.6920, 0.8237, 0.6496,
        0.8411, 0.6131, 0.7456, 0.6429, 0.7808, 0.7450, 0.6982, 0.8620, 0.7257,
        0.8837, 0.7661, 0.8382, 0.8465, 0.8127, 0.5864, 0.8131, 0.7177, 0.8485,
        0.8795, 0.5781, 0.7142, 0.8118, 0.8283, 0.6963, 0.7865, 0.5608, 0.8930,
        0.7043, 0.7652, 0.7156, 0.8186, 0.8067, 0.8970, 0.8242, 0.7960, 0.8423,
        0.9053, 0.8453, 0.7777, 0.8950, 0.8172, 0.8770, 0.7595, 0.7287, 0.4964],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(182.5912, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([243, 1])
Inertia: tensor([125.8578], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([243, 1280])
Centroid_list: tensor([[-0.0729, -0.0866, -0.0813,  ..., -0.0892,  0.0486, -0.2188],
        [-0.0239, -0.0666, -0.0489,  ..., -0.0801,  0.0699, -0.2279],
        [-0.0729, -0.0866, -0.0813,  ..., -0.0892,  0.0486, -0.2188],
        ...,
        [-0.0444, -0.0825, -0.0588,  ..., -0.0817,  0.0755, -0.3335],
        [-0.0444, -0.0825, -0.0588,  ..., -0.0817,  0.0755, -0.3335],
        [-0.0239, -0.0666, -0.0489,  ..., -0.0801,  0.0699, -0.2279]],
       device='cuda:0')
Computed C_score: tensor([0.8247, 0.7677, 0.7248, 0.7392, 0.8165, 0.6463, 0.7033, 0.8058, 0.8205,
        0.8253, 0.7627, 0.5089, 0.5910, 0.8529, 0.8383, 0.7309, 0.8461, 0.7591,
        0.8297, 0.8306, 0.7189, 0.8724, 0.8037, 0.5834, 0.8504, 0.6550, 0.8424,
        0.6580, 0.7621, 0.8070, 0.7038, 0.7700, 0.7918, 0.8523, 0.8621, 0.7300,
        0.8815, 0.6228, 0.7783, 0.5003, 0.7523, 0.7803, 0.7443, 0.8542, 0.8401,
        0.8154, 0.8246, 0.8466, 0.8864, 0.7986, 0.5577, 0.7505, 0.8217, 0.8768,
        0.7748, 0.6225, 0.6827, 0.8405, 0.7659, 0.7857, 0.8156, 0.8086, 0.9198,
        0.6740, 0.7137, 0.7720, 0.6968, 0.7690, 0.5241, 0.8065, 0.7414, 0.8946,
        0.8263, 0.7208, 0.8524, 0.6562, 0.7117, 0.8453, 0.5995, 0.6838, 0.6401,
        0.6559, 0.6681, 0.6908, 0.7659, 0.6016, 0.6948, 0.7610, 0.6649, 0.7970,
        0.7276, 0.8168, 0.6075, 0.7212, 0.7763, 0.6908, 0.8013, 0.8313, 0.8774,
        0.8409, 0.7570, 0.7989, 0.7358, 0.6351, 0.6304, 0.6261, 0.6477, 0.7864,
        0.7469, 0.7026, 0.6488, 0.6616, 0.6898, 0.8630, 0.7578, 0.8863, 0.8273,
        0.7505, 0.8620, 0.6031, 0.8321, 0.7306, 0.8237, 0.8010, 0.7176, 0.8651,
        0.5512, 0.8636, 0.7951, 0.7536, 0.7735, 0.8596, 0.8557, 0.7815, 0.9162,
        0.7897, 0.8284, 0.8213, 0.7498, 0.6995, 0.7512, 0.7625, 0.8022, 0.5608,
        0.5814, 0.6307, 0.7517, 0.7404, 0.7825, 0.8430, 0.8084, 0.7630, 0.8100,
        0.8428, 0.8822, 0.8489, 0.7928, 0.8778, 0.7829, 0.8860, 0.8437, 0.6511,
        0.7026, 0.5223, 0.8241, 0.7177, 0.8360, 0.8608, 0.8808, 0.7798, 0.7262,
        0.8075, 0.9508, 0.6850, 0.6695, 0.8813, 0.7101, 0.8206, 0.9183, 0.7268,
        0.7716, 0.7736, 0.7662, 0.7709, 0.8044, 0.6848, 0.7979, 0.8411, 0.7662,
        0.8045, 0.7114, 0.7642, 0.8785, 0.7392, 0.6541, 0.7725, 0.8518, 0.6775,
        0.8482, 0.7241, 0.7664, 0.6800, 0.7303, 0.7639, 0.7269, 0.8049, 0.7687,
        0.8848, 0.7828, 0.8085, 0.8455, 0.8196, 0.6960, 0.8000, 0.7920, 0.9039,
        0.8786, 0.6634, 0.7921, 0.8162, 0.8271, 0.8044, 0.7731, 0.5934, 0.9038,
        0.7712, 0.7905, 0.7227, 0.8348, 0.7531, 0.9365, 0.8127, 0.8032, 0.8483,
        0.9327, 0.8386, 0.7893, 0.8964, 0.8387, 0.9101, 0.7270, 0.7302, 0.5622],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(186.5249, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([243, 1])
Inertia: tensor([117.6902], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([243, 1280])
Centroid_list: tensor([[-0.0511, -0.0817, -0.0799,  ..., -0.0889,  0.0497, -0.1961],
        [-0.0267, -0.0608, -0.0457,  ..., -0.0787,  0.0716, -0.1969],
        [-0.0511, -0.0817, -0.0799,  ..., -0.0889,  0.0497, -0.1961],
        ...,
        [-0.0934, -0.0997, -0.0729,  ..., -0.0872,  0.0558, -0.3712],
        [-0.0033, -0.0674, -0.0433,  ..., -0.0748,  0.0973, -0.2076],
        [-0.0267, -0.0608, -0.0457,  ..., -0.0787,  0.0716, -0.1969]],
       device='cuda:0')
Computed C_score: tensor([0.8377, 0.7729, 0.7116, 0.7384, 0.8321, 0.6866, 0.7104, 0.8303, 0.9172,
        0.8572, 0.8658, 0.5541, 0.6054, 0.8275, 0.8313, 0.7873, 0.8701, 0.7649,
        0.8214, 0.8490, 0.7414, 0.8910, 0.7914, 0.5937, 0.8803, 0.6882, 0.8595,
        0.6507, 0.8351, 0.8213, 0.7292, 0.7688, 0.7863, 0.8703, 0.8752, 0.8062,
        0.9015, 0.7276, 0.7834, 0.6052, 0.8785, 0.8062, 0.7029, 0.8713, 0.8647,
        0.8207, 0.8118, 0.8769, 0.8521, 0.8673, 0.5845, 0.7228, 0.8930, 0.8935,
        0.9149, 0.6205, 0.6792, 0.9255, 0.7592, 0.8267, 0.7834, 0.8146, 0.9348,
        0.6760, 0.7456, 0.7033, 0.6753, 0.7971, 0.5197, 0.8424, 0.8303, 0.8610,
        0.8127, 0.7245, 0.8480, 0.6794, 0.7282, 0.8619, 0.6528, 0.7347, 0.6952,
        0.6672, 0.6944, 0.7245, 0.7652, 0.6311, 0.8630, 0.7959, 0.6709, 0.8094,
        0.7170, 0.8063, 0.6128, 0.7251, 0.7574, 0.8363, 0.8000, 0.8201, 0.8620,
        0.8325, 0.7540, 0.7681, 0.7789, 0.5869, 0.6228, 0.6132, 0.6311, 0.8657,
        0.7705, 0.7322, 0.7752, 0.6709, 0.7047, 0.8888, 0.8367, 0.8815, 0.8580,
        0.7468, 0.8809, 0.6413, 0.8379, 0.7139, 0.8620, 0.7612, 0.8056, 0.8571,
        0.5570, 0.8233, 0.7662, 0.8707, 0.7862, 0.8757, 0.8370, 0.7840, 0.9053,
        0.8420, 0.8548, 0.7558, 0.7238, 0.7010, 0.7655, 0.7535, 0.8373, 0.5964,
        0.6055, 0.6610, 0.8334, 0.7513, 0.7813, 0.7610, 0.7960, 0.6880, 0.9064,
        0.8749, 0.8936, 0.8427, 0.8103, 0.8701, 0.7627, 0.8734, 0.8586, 0.6618,
        0.6803, 0.5511, 0.8156, 0.7139, 0.7608, 0.8565, 0.8624, 0.8080, 0.7294,
        0.7961, 0.9502, 0.6681, 0.7009, 0.9012, 0.7330, 0.8092, 0.9178, 0.7754,
        0.7821, 0.7615, 0.7132, 0.7418, 0.8278, 0.6481, 0.7940, 0.8533, 0.7019,
        0.8042, 0.7103, 0.7379, 0.8915, 0.7579, 0.6679, 0.8368, 0.8703, 0.6723,
        0.8471, 0.7236, 0.8199, 0.6862, 0.8104, 0.7440, 0.8421, 0.8777, 0.9000,
        0.8904, 0.7810, 0.8043, 0.8756, 0.8300, 0.6821, 0.8317, 0.7890, 0.9214,
        0.8645, 0.8107, 0.8341, 0.9223, 0.8122, 0.7907, 0.9156, 0.7365, 0.9037,
        0.7594, 0.8700, 0.7111, 0.7919, 0.8377, 0.9435, 0.8254, 0.8185, 0.8672,
        0.9370, 0.8925, 0.7839, 0.8685, 0.7814, 0.9179, 0.8074, 0.8728, 0.5698],
       device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(190.7806, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0035, 0.0105, 0.0202, 0.0316], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1942, 1280])
S-Scores: tensor([0.6624, 1.9855, 4.1582, 6.5011], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1942, 1])
Inertia: tensor([105.6786], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1942, 1280])
Centroid_list: tensor([[-0.0145, -0.0320, -0.0594,  ..., -0.0694,  0.0488, -0.2644],
        [-0.0145, -0.0320, -0.0594,  ..., -0.0694,  0.0488, -0.2644],
        [-0.0145, -0.0320, -0.0594,  ..., -0.0694,  0.0488, -0.2644],
        ...,
        [-0.0145, -0.0320, -0.0594,  ..., -0.0694,  0.0488, -0.2644],
        [-0.0145, -0.0320, -0.0594,  ..., -0.0694,  0.0488, -0.2644],
        [-0.0145, -0.0320, -0.0594,  ..., -0.0694,  0.0488, -0.2644]],
       device='cuda:0')
Computed C_score: tensor([0.8893, 0.5973, 0.5648,  ..., 0.8101, 0.6017, 0.4366], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1449.1975, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1942, 1])
Inertia: tensor([84.9522], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1942, 1280])
Centroid_list: tensor([[-0.0179, -0.0189, -0.0679,  ..., -0.0585,  0.0409, -0.3250],
        [-0.0086, -0.0595, -0.0430,  ..., -0.0877,  0.0682, -0.2036],
        [-0.0086, -0.0595, -0.0430,  ..., -0.0877,  0.0682, -0.2036],
        ...,
        [-0.0179, -0.0189, -0.0679,  ..., -0.0585,  0.0409, -0.3250],
        [-0.0086, -0.0595, -0.0430,  ..., -0.0877,  0.0682, -0.2036],
        [-0.0086, -0.0595, -0.0430,  ..., -0.0877,  0.0682, -0.2036]],
       device='cuda:0')
Computed C_score: tensor([0.9079, 0.7221, 0.6474,  ..., 0.8339, 0.6406, 0.5375], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1502.5249, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1942, 1])
Inertia: tensor([66.4114], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1942, 1280])
Centroid_list: tensor([[-0.0039, -0.0350, -0.0592,  ..., -0.0894,  0.0363, -0.2845],
        [-0.0098, -0.0593, -0.0426,  ..., -0.0866,  0.0692, -0.2036],
        [-0.0098, -0.0593, -0.0426,  ..., -0.0866,  0.0692, -0.2036],
        ...,
        [-0.0263, -0.0093, -0.0732,  ..., -0.0385,  0.0450, -0.3484],
        [-0.0098, -0.0593, -0.0426,  ..., -0.0866,  0.0692, -0.2036],
        [-0.0098, -0.0593, -0.0426,  ..., -0.0866,  0.0692, -0.2036]],
       device='cuda:0')
Computed C_score: tensor([0.9247, 0.7244, 0.6546,  ..., 0.8480, 0.6380, 0.5390], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1520.3579, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1942, 1])
Inertia: tensor([67.3278], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1942, 1280])
Centroid_list: tensor([[-0.0054, -0.0356, -0.0595,  ..., -0.0891,  0.0368, -0.2865],
        [-0.0089, -0.0601, -0.0406,  ..., -0.0897,  0.0667, -0.1380],
        [-0.0089, -0.0601, -0.0406,  ..., -0.0897,  0.0667, -0.1380],
        ...,
        [-0.0264, -0.0091, -0.0737,  ..., -0.0387,  0.0444, -0.3472],
        [-0.0089, -0.0601, -0.0406,  ..., -0.0897,  0.0667, -0.1380],
        [-0.0089, -0.0601, -0.0406,  ..., -0.0897,  0.0667, -0.1380]],
       device='cuda:0')
Computed C_score: tensor([0.9237, 0.7393, 0.6373,  ..., 0.8466, 0.6075, 0.5966], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1540.6665, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0005, 0.0013, 0.0027, 0.0042], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([678, 1280])
S-Scores: tensor([0.7254, 2.1532, 4.2361, 6.9729], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([678, 1])
Inertia: tensor([230.3015], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([678, 1280])
Centroid_list: tensor([[-0.0339, -0.0613, -0.0627,  ..., -0.0508,  0.0707, -0.4718],
        [ 0.0063, -0.0413, -0.0644,  ..., -0.0369,  0.0587, -0.3758],
        [ 0.0063, -0.0413, -0.0644,  ..., -0.0369,  0.0587, -0.3758],
        ...,
        [-0.0339, -0.0613, -0.0627,  ..., -0.0508,  0.0707, -0.4718],
        [ 0.0063, -0.0413, -0.0644,  ..., -0.0369,  0.0587, -0.3758],
        [-0.0339, -0.0613, -0.0627,  ..., -0.0508,  0.0707, -0.4718]],
       device='cuda:0')
Computed C_score: tensor([0.6388, 0.6535, 0.6907, 0.5525, 0.6654, 0.7313, 0.6802, 0.8004, 0.6806,
        0.7082, 0.6900, 0.5889, 0.5556, 0.8849, 0.7072, 0.6738, 0.7694, 0.7112,
        0.7473, 0.6222, 0.7312, 0.7127, 0.7906, 0.6794, 0.6647, 0.7675, 0.7401,
        0.6721, 0.8549, 0.6752, 0.5612, 0.6624, 0.6411, 0.7235, 0.7296, 0.7020,
        0.6887, 0.6555, 0.7146, 0.6671, 0.5679, 0.7113, 0.6897, 0.6526, 0.7093,
        0.7215, 0.7719, 0.7006, 0.5638, 0.7840, 0.7079, 0.7649, 0.3687, 0.7505,
        0.8406, 0.8719, 0.6646, 0.6877, 0.6715, 0.7370, 0.6669, 0.7016, 0.7097,
        0.6326, 0.6428, 0.7109, 0.6914, 0.6411, 0.6405, 0.7857, 0.6059, 0.6438,
        0.6020, 0.7958, 0.7806, 0.7596, 0.8314, 0.7165, 0.8858, 0.7297, 0.6797,
        0.8070, 0.6359, 0.8362, 0.8092, 0.6406, 0.6272, 0.7225, 0.8025, 0.6064,
        0.6358, 0.7132, 0.7643, 0.6841, 0.6974, 0.6525, 0.6664, 0.4387, 0.5786,
        0.5799, 0.6060, 0.7222, 0.5398, 0.8282, 0.8488, 0.7826, 0.6920, 0.6563,
        0.6634, 0.7720, 0.7834, 0.6964, 0.7895, 0.5650, 0.6934, 0.5581, 0.7841,
        0.6278, 0.6096, 0.7549, 0.6031, 0.5414, 0.6676, 0.6089, 0.6125, 0.7771,
        0.7579, 0.6408, 0.5597, 0.7125, 0.5390, 0.6093, 0.6851, 0.6143, 0.6425,
        0.6899, 0.8078, 0.6222, 0.7827, 0.7051, 0.5177, 0.7318, 0.8628, 0.7728,
        0.7241, 0.7234, 0.8432, 0.6611, 0.6502, 0.4987, 0.5738, 0.6047, 0.5906,
        0.6283, 0.6694, 0.6589, 0.6524, 0.6262, 0.6708, 0.6901, 0.6585, 0.6395,
        0.6984, 0.6076, 0.7099, 0.8087, 0.7533, 0.9031, 0.7119, 0.8761, 0.7942,
        0.6465, 0.8366, 0.7200, 0.6241, 0.4338, 0.5927, 0.6820, 0.6766, 0.6699,
        0.5988, 0.8541, 0.7173, 0.5939, 0.8587, 0.7491, 0.7015, 0.6605, 0.5378,
        0.7144, 0.7259, 0.8451, 0.7059, 0.4861, 0.7930, 0.5985, 0.6458, 0.6081,
        0.6921, 0.6994, 0.7629, 0.6621, 0.6786, 0.6606, 0.7207, 0.7597, 0.8581,
        0.5092, 0.7262, 0.6450, 0.5579, 0.5622, 0.7954, 0.7179, 0.7419, 0.7040,
        0.5862, 0.6224, 0.7943, 0.7125, 0.6837, 0.6872, 0.8264, 0.6802, 0.6628,
        0.7175, 0.7191, 0.8129, 0.5216, 0.7573, 0.7560, 0.8311, 0.6563, 0.6545,
        0.7609, 0.4387, 0.6554, 0.7193, 0.5479, 0.7817, 0.7721, 0.6357, 0.6638,
        0.7142, 0.6490, 0.8633, 0.7378, 0.6453, 0.6763, 0.8189, 0.7324, 0.6370,
        0.8348, 0.5355, 0.7658, 0.5507, 0.7513, 0.7383, 0.6568, 0.7677, 0.6555,
        0.6446, 0.6555, 0.6417, 0.7225, 0.6003, 0.6544, 0.7300, 0.6411, 0.7114,
        0.6204, 0.7657, 0.6450, 0.5826, 0.8024, 0.5760, 0.8036, 0.6500, 0.7559,
        0.7174, 0.7712, 0.5555, 0.7008, 0.5421, 0.6705, 0.6333, 0.6695, 0.7224,
        0.7281, 0.7658, 0.7456, 0.6610, 0.8393, 0.6686, 0.6700, 0.6477, 0.7103,
        0.6924, 0.6678, 0.7761, 0.6691, 0.7599, 0.7143, 0.8311, 0.4976, 0.7104,
        0.7470, 0.6490, 0.7072, 0.8225, 0.6858, 0.7641, 0.5317, 0.7962, 0.7786,
        0.7973, 0.7379, 0.8715, 0.7399, 0.7183, 0.7806, 0.6512, 0.7857, 0.7594,
        0.5547, 0.6628, 0.7991, 0.7454, 0.6765, 0.6769, 0.7049, 0.6084, 0.7560,
        0.6695, 0.5784, 0.6517, 0.7316, 0.7061, 0.8591, 0.7367, 0.7429, 0.6740,
        0.6476, 0.6237, 0.6195, 0.6617, 0.6627, 0.7245, 0.6304, 0.6961, 0.6809,
        0.7081, 0.9026, 0.6493, 0.8033, 0.7937, 0.7282, 0.6948, 0.7595, 0.6475,
        0.6869, 0.6536, 0.6917, 0.7893, 0.8702, 0.4025, 0.7714, 0.7566, 0.6101,
        0.6454, 0.5576, 0.7303, 0.7237, 0.8509, 0.6532, 0.5986, 0.7446, 0.6317,
        0.6981, 0.6134, 0.6397, 0.8707, 0.6964, 0.7070, 0.8459, 0.6568, 0.6364,
        0.4527, 0.6932, 0.7798, 0.8123, 0.7043, 0.6370, 0.6501, 0.5701, 0.6137,
        0.4885, 0.7203, 0.7334, 0.8241, 0.7443, 0.7359, 0.5384, 0.7036, 0.7929,
        0.7091, 0.6485, 0.7453, 0.7854, 0.7491, 0.5916, 0.7127, 0.7841, 0.7887,
        0.8142, 0.6372, 0.7376, 0.6960, 0.5902, 0.6794, 0.5845, 0.6135, 0.5993,
        0.6781, 0.6097, 0.5265, 0.5615, 0.7695, 0.6417, 0.6705, 0.5312, 0.7672,
        0.6642, 0.8814, 0.6627, 0.7068, 0.6086, 0.5647, 0.7003, 0.6903, 0.8213,
        0.7362, 0.7434, 0.7488, 0.8031, 0.6462, 0.6598, 0.7914, 0.7519, 0.7885,
        0.5560, 0.7465, 0.7875, 0.6354, 0.5038, 0.6209, 0.7811, 0.7316, 0.8257,
        0.7000, 0.7388, 0.7159, 0.7180, 0.6727, 0.7681, 0.7395, 0.6425, 0.7332,
        0.7866, 0.6098, 0.5816, 0.6744, 0.8403, 0.5734, 0.7742, 0.7208, 0.7799,
        0.6937, 0.7538, 0.7169, 0.7649, 0.8174, 0.7456, 0.7630, 0.6612, 0.7373,
        0.7641, 0.6423, 0.7263, 0.7334, 0.6213, 0.7352, 0.6739, 0.6583, 0.7565,
        0.8585, 0.6601, 0.7654, 0.6449, 0.7303, 0.6142, 0.4644, 0.7285, 0.8573,
        0.8938, 0.8546, 0.8379, 0.6715, 0.6593, 0.7421, 0.5473, 0.5105, 0.6638,
        0.5259, 0.4533, 0.5739, 0.6265, 0.6262, 0.8063, 0.7224, 0.5958, 0.6930,
        0.7463, 0.6738, 0.6428, 0.7964, 0.8348, 0.7807, 0.7682, 0.6530, 0.5570,
        0.6176, 0.7732, 0.6127, 0.6597, 0.7371, 0.5806, 0.4809, 0.8243, 0.7862,
        0.7280, 0.6863, 0.6538, 0.6741, 0.6944, 0.7485, 0.6527, 0.6790, 0.6300,
        0.7013, 0.6857, 0.6517, 0.7617, 0.7001, 0.7854, 0.6560, 0.5910, 0.6145,
        0.7455, 0.6869, 0.7346, 0.7420, 0.6640, 0.6117, 0.6138, 0.7841, 0.4745,
        0.4849, 0.7722, 0.5525, 0.7624, 0.5503, 0.7655, 0.6956, 0.7306, 0.7739,
        0.7500, 0.6239, 0.7508, 0.7006, 0.7227, 0.6382, 0.6624, 0.5442, 0.7047,
        0.8461, 0.5740, 0.7781, 0.6138, 0.7178, 0.5675, 0.6793, 0.7737, 0.8442,
        0.7637, 0.6230, 0.7658, 0.6752, 0.8755, 0.5002, 0.7223, 0.8652, 0.7772,
        0.7357, 0.7641, 0.6575, 0.6891, 0.7679, 0.3232, 0.7664, 0.7272, 0.5812,
        0.7388, 0.7967, 0.6464, 0.6432, 0.7205, 0.6674, 0.6767, 0.7049, 0.5139,
        0.6287, 0.5307, 0.6242, 0.6935, 0.7907, 0.8150, 0.6852, 0.6979, 0.6111,
        0.6573, 0.5884, 0.5955, 0.7897, 0.7913, 0.6500, 0.5781, 0.6717, 0.6554,
        0.6722, 0.8159, 0.8850, 0.7380, 0.4813, 0.6894, 0.7362, 0.7736, 0.7046,
        0.6965, 0.6613, 0.6350, 0.6783, 0.6061, 0.8188, 0.5838, 0.7492, 0.7640,
        0.6766, 0.7645, 0.7390, 0.7658, 0.7150, 0.7176, 0.6684, 0.6410, 0.8578,
        0.7319, 0.7542, 0.6087, 0.7819, 0.6615, 0.8116, 0.6966, 0.6068, 0.5209,
        0.8015, 0.5132, 0.7737], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(469.7618, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([678, 1])
Inertia: tensor([226.2702], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([678, 1280])
Centroid_list: tensor([[-0.0279, -0.0673, -0.0703,  ..., -0.0429,  0.0596, -0.5298],
        [-0.0279, -0.0673, -0.0703,  ..., -0.0429,  0.0596, -0.5298],
        [ 0.0158, -0.0330, -0.0620,  ..., -0.0363,  0.0592, -0.3178],
        ...,
        [-0.0335, -0.0592, -0.0605,  ..., -0.0510,  0.0737, -0.4770],
        [ 0.0158, -0.0330, -0.0620,  ..., -0.0363,  0.0592, -0.3178],
        [-0.0335, -0.0592, -0.0605,  ..., -0.0510,  0.0737, -0.4770]],
       device='cuda:0')
Computed C_score: tensor([0.6294, 0.7175, 0.6717, 0.7013, 0.8088, 0.7757, 0.7599, 0.8270, 0.8150,
        0.6682, 0.6092, 0.5815, 0.5310, 0.8897, 0.8712, 0.6708, 0.7784, 0.8309,
        0.7456, 0.6663, 0.8367, 0.7259, 0.8553, 0.6900, 0.6763, 0.7659, 0.7256,
        0.7035, 0.8837, 0.6835, 0.7207, 0.6467, 0.6541, 0.6980, 0.7318, 0.6774,
        0.7999, 0.6832, 0.7651, 0.6802, 0.5756, 0.7815, 0.6771, 0.6596, 0.7317,
        0.7475, 0.8475, 0.7626, 0.5781, 0.8008, 0.7161, 0.7978, 0.3929, 0.7454,
        0.8662, 0.8863, 0.6778, 0.6826, 0.6693, 0.7509, 0.7336, 0.6563, 0.7263,
        0.6894, 0.6485, 0.7189, 0.8537, 0.6523, 0.6456, 0.7469, 0.6359, 0.6705,
        0.6379, 0.7668, 0.8039, 0.7856, 0.8543, 0.7244, 0.8965, 0.7419, 0.7015,
        0.8112, 0.6198, 0.8334, 0.8482, 0.6089, 0.6590, 0.7522, 0.7979, 0.6474,
        0.6528, 0.7214, 0.7900, 0.6927, 0.8528, 0.6868, 0.6912, 0.4616, 0.6103,
        0.6940, 0.6334, 0.7577, 0.5447, 0.8743, 0.8753, 0.7912, 0.6966, 0.6528,
        0.6895, 0.8214, 0.8015, 0.7276, 0.8432, 0.5449, 0.7232, 0.5881, 0.7782,
        0.6477, 0.6478, 0.8688, 0.6185, 0.5445, 0.7011, 0.6041, 0.6255, 0.8381,
        0.7736, 0.6790, 0.5451, 0.7145, 0.6059, 0.6095, 0.6828, 0.6059, 0.6313,
        0.6808, 0.8628, 0.6110, 0.7711, 0.7115, 0.5302, 0.7301, 0.9053, 0.7535,
        0.7191, 0.7208, 0.8597, 0.7087, 0.6321, 0.4920, 0.6017, 0.6368, 0.5823,
        0.6257, 0.7942, 0.6384, 0.6413, 0.8091, 0.6799, 0.6919, 0.7917, 0.6404,
        0.7925, 0.8007, 0.7032, 0.7698, 0.7480, 0.9288, 0.7213, 0.8974, 0.8020,
        0.6484, 0.8289, 0.7228, 0.6347, 0.4233, 0.5996, 0.7197, 0.6966, 0.7025,
        0.6532, 0.8837, 0.7417, 0.5864, 0.8556, 0.7914, 0.6710, 0.6567, 0.5542,
        0.7468, 0.7441, 0.8359, 0.7313, 0.5298, 0.8210, 0.5949, 0.6907, 0.6071,
        0.7522, 0.7446, 0.7702, 0.6705, 0.7144, 0.6817, 0.7451, 0.7454, 0.8905,
        0.5353, 0.7493, 0.6408, 0.5562, 0.5555, 0.7802, 0.7336, 0.8406, 0.7017,
        0.6059, 0.6373, 0.7707, 0.7123, 0.7077, 0.6961, 0.8935, 0.6885, 0.6555,
        0.7382, 0.7049, 0.7980, 0.6318, 0.7892, 0.8612, 0.8498, 0.7934, 0.6895,
        0.7571, 0.4616, 0.6579, 0.7344, 0.5688, 0.7916, 0.7424, 0.7259, 0.6786,
        0.7580, 0.6859, 0.8942, 0.7022, 0.6129, 0.6868, 0.7864, 0.7392, 0.6646,
        0.8518, 0.5389, 0.7519, 0.5564, 0.7747, 0.8307, 0.7131, 0.8495, 0.6501,
        0.6711, 0.7250, 0.6332, 0.7644, 0.6044, 0.6485, 0.8204, 0.6659, 0.7675,
        0.6578, 0.7775, 0.6858, 0.6029, 0.8179, 0.5859, 0.7867, 0.6732, 0.7501,
        0.7819, 0.8664, 0.5762, 0.6757, 0.5260, 0.6479, 0.6243, 0.6941, 0.7241,
        0.7586, 0.7944, 0.7534, 0.6729, 0.8812, 0.6518, 0.7693, 0.8051, 0.6926,
        0.6814, 0.6698, 0.7902, 0.6880, 0.7655, 0.7323, 0.8133, 0.4781, 0.7296,
        0.8439, 0.6544, 0.7697, 0.8311, 0.7057, 0.7952, 0.5359, 0.8123, 0.7447,
        0.8069, 0.8733, 0.8949, 0.7528, 0.7626, 0.7555, 0.6898, 0.8620, 0.8423,
        0.5470, 0.6812, 0.8188, 0.7473, 0.6892, 0.6787, 0.7106, 0.5985, 0.7863,
        0.7052, 0.6064, 0.6699, 0.7111, 0.7398, 0.8393, 0.7498, 0.8710, 0.7694,
        0.7105, 0.6391, 0.6258, 0.6734, 0.8348, 0.7330, 0.6227, 0.7057, 0.6880,
        0.6868, 0.9300, 0.6919, 0.7937, 0.7917, 0.7126, 0.7865, 0.7392, 0.6891,
        0.6698, 0.6458, 0.6901, 0.8321, 0.8835, 0.3973, 0.7583, 0.8249, 0.6061,
        0.6628, 0.5544, 0.7330, 0.7304, 0.8568, 0.6341, 0.6273, 0.7584, 0.6502,
        0.7259, 0.6324, 0.6325, 0.9009, 0.7058, 0.7184, 0.8703, 0.7425, 0.6293,
        0.4424, 0.6900, 0.7800, 0.8914, 0.8390, 0.6593, 0.6898, 0.5903, 0.6364,
        0.5025, 0.7357, 0.7498, 0.8321, 0.7348, 0.7226, 0.5033, 0.7210, 0.8662,
        0.7140, 0.6293, 0.7432, 0.7775, 0.8215, 0.6211, 0.6871, 0.7964, 0.7628,
        0.8536, 0.6737, 0.7756, 0.7257, 0.5981, 0.6818, 0.5797, 0.5961, 0.6169,
        0.6798, 0.7066, 0.5292, 0.5582, 0.7610, 0.6995, 0.6740, 0.5551, 0.7979,
        0.6563, 0.8976, 0.6833, 0.7374, 0.6094, 0.5907, 0.6904, 0.7044, 0.8444,
        0.8668, 0.7303, 0.7880, 0.8453, 0.6557, 0.6471, 0.8038, 0.7721, 0.7912,
        0.5938, 0.8271, 0.7618, 0.6375, 0.5060, 0.6506, 0.7971, 0.7207, 0.8366,
        0.7270, 0.7554, 0.6888, 0.7309, 0.7164, 0.8628, 0.7467, 0.6775, 0.7899,
        0.8461, 0.5954, 0.5999, 0.6924, 0.8330, 0.5820, 0.7817, 0.7482, 0.8653,
        0.7954, 0.7474, 0.7310, 0.7705, 0.8546, 0.7397, 0.8057, 0.6634, 0.7330,
        0.8578, 0.6739, 0.7989, 0.8307, 0.6287, 0.7592, 0.7721, 0.6710, 0.7643,
        0.8456, 0.6965, 0.7804, 0.7542, 0.7554, 0.5961, 0.4894, 0.7285, 0.8374,
        0.8906, 0.8975, 0.8420, 0.7004, 0.6863, 0.7562, 0.5476, 0.5478, 0.7710,
        0.5459, 0.4755, 0.6228, 0.6499, 0.5987, 0.8314, 0.6943, 0.6015, 0.7118,
        0.7686, 0.7243, 0.6479, 0.8242, 0.8644, 0.8064, 0.7373, 0.6519, 0.5533,
        0.6399, 0.8844, 0.5858, 0.6776, 0.8125, 0.5761, 0.5121, 0.7869, 0.8944,
        0.7119, 0.6861, 0.6423, 0.6939, 0.6865, 0.7631, 0.6764, 0.7068, 0.6161,
        0.7366, 0.7100, 0.6609, 0.8026, 0.7131, 0.7912, 0.6701, 0.7906, 0.7265,
        0.8797, 0.6714, 0.7089, 0.8379, 0.6506, 0.6231, 0.6012, 0.7769, 0.4720,
        0.4688, 0.8881, 0.5641, 0.8339, 0.5397, 0.7910, 0.6889, 0.7408, 0.8747,
        0.7499, 0.6165, 0.8427, 0.7216, 0.7823, 0.6772, 0.8371, 0.5558, 0.7644,
        0.8827, 0.6050, 0.7842, 0.6347, 0.7693, 0.5852, 0.6651, 0.9037, 0.8683,
        0.8778, 0.6740, 0.7614, 0.6773, 0.9064, 0.5267, 0.7221, 0.8846, 0.7922,
        0.7278, 0.7275, 0.6775, 0.6915, 0.7724, 0.2979, 0.8843, 0.8625, 0.5824,
        0.7527, 0.7815, 0.6696, 0.6509, 0.7483, 0.7001, 0.6691, 0.7450, 0.5172,
        0.7168, 0.5385, 0.6607, 0.6907, 0.8092, 0.8247, 0.7291, 0.7215, 0.5527,
        0.6948, 0.6065, 0.6173, 0.7811, 0.8501, 0.6673, 0.5844, 0.7853, 0.6478,
        0.7760, 0.8395, 0.8880, 0.7379, 0.4734, 0.6902, 0.7489, 0.7774, 0.8704,
        0.7435, 0.6419, 0.6560, 0.6710, 0.5839, 0.8210, 0.5974, 0.7212, 0.7533,
        0.6721, 0.7631, 0.7421, 0.7512, 0.8517, 0.7212, 0.6569, 0.6219, 0.8869,
        0.7326, 0.7355, 0.5959, 0.7531, 0.6750, 0.8023, 0.6959, 0.6124, 0.5425,
        0.8389, 0.5515, 0.7456], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(485.0547, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([678, 1])
Inertia: tensor([224.7549], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([678, 1280])
Centroid_list: tensor([[-0.0310, -0.0681, -0.0708,  ..., -0.0424,  0.0590, -0.5360],
        [-0.0310, -0.0681, -0.0708,  ..., -0.0424,  0.0590, -0.5360],
        [ 0.0175, -0.0384, -0.0549,  ..., -0.0467,  0.0587, -0.4585],
        ...,
        [-0.0379, -0.0628, -0.0616,  ..., -0.0513,  0.0745, -0.4530],
        [ 0.0175, -0.0384, -0.0549,  ..., -0.0467,  0.0587, -0.4585],
        [-0.0310, -0.0681, -0.0708,  ..., -0.0424,  0.0590, -0.5360]],
       device='cuda:0')
Computed C_score: tensor([0.6337, 0.7171, 0.6888, 0.7041, 0.8110, 0.7736, 0.7594, 0.8447, 0.8146,
        0.6672, 0.6940, 0.5595, 0.5517, 0.8964, 0.8739, 0.6655, 0.7747, 0.8329,
        0.7402, 0.6679, 0.8395, 0.7686, 0.8535, 0.6804, 0.6859, 0.8188, 0.7740,
        0.6976, 0.8900, 0.6852, 0.7215, 0.7129, 0.6980, 0.6975, 0.7118, 0.6596,
        0.8044, 0.7110, 0.7634, 0.7124, 0.6189, 0.7779, 0.7416, 0.6924, 0.7632,
        0.7178, 0.8473, 0.7620, 0.6713, 0.7883, 0.7231, 0.8166, 0.3810, 0.7421,
        0.8809, 0.8972, 0.7397, 0.7548, 0.7263, 0.7432, 0.7314, 0.7017, 0.7187,
        0.6894, 0.7383, 0.7263, 0.8605, 0.7077, 0.6802, 0.7389, 0.6260, 0.7146,
        0.6577, 0.7787, 0.7699, 0.7855, 0.8487, 0.7173, 0.8974, 0.7831, 0.7128,
        0.7932, 0.5776, 0.8321, 0.8512, 0.6218, 0.6573, 0.7917, 0.7788, 0.7133,
        0.6513, 0.7478, 0.7887, 0.7399, 0.8530, 0.7492, 0.6754, 0.4663, 0.6335,
        0.6949, 0.6947, 0.7966, 0.6134, 0.8779, 0.8880, 0.7829, 0.6953, 0.6648,
        0.7612, 0.8195, 0.7961, 0.6950, 0.8437, 0.5224, 0.7141, 0.5845, 0.7909,
        0.7017, 0.7060, 0.8731, 0.6127, 0.5604, 0.7824, 0.6350, 0.6599, 0.8353,
        0.7703, 0.7334, 0.5969, 0.6987, 0.6074, 0.7298, 0.6753, 0.6950, 0.6991,
        0.6793, 0.8626, 0.6650, 0.7441, 0.6624, 0.5769, 0.7954, 0.9183, 0.7485,
        0.7193, 0.7123, 0.8688, 0.7173, 0.6822, 0.5400, 0.6410, 0.6193, 0.5669,
        0.6416, 0.7986, 0.6420, 0.6775, 0.8161, 0.7794, 0.7230, 0.7945, 0.6850,
        0.7907, 0.8074, 0.7017, 0.7770, 0.7557, 0.9268, 0.7193, 0.9064, 0.8142,
        0.6463, 0.8045, 0.7382, 0.6789, 0.4389, 0.6913, 0.7131, 0.6896, 0.7805,
        0.6571, 0.8963, 0.7595, 0.6664, 0.8601, 0.7882, 0.6678, 0.7374, 0.5690,
        0.7122, 0.7201, 0.8422, 0.7282, 0.5710, 0.8323, 0.6788, 0.6838, 0.5901,
        0.7486, 0.7427, 0.7694, 0.7369, 0.7995, 0.6668, 0.7549, 0.7641, 0.8959,
        0.5525, 0.7565, 0.6366, 0.5515, 0.5858, 0.7514, 0.7752, 0.8467, 0.7045,
        0.6084, 0.6519, 0.7717, 0.6916, 0.7267, 0.7837, 0.8944, 0.6937, 0.7200,
        0.7332, 0.7316, 0.7965, 0.6362, 0.8067, 0.8646, 0.8526, 0.7951, 0.7187,
        0.7412, 0.4663, 0.6693, 0.7349, 0.5421, 0.7827, 0.8272, 0.7264, 0.6875,
        0.7581, 0.6916, 0.9080, 0.7039, 0.6557, 0.7208, 0.7682, 0.7268, 0.6490,
        0.8607, 0.6060, 0.7468, 0.5766, 0.8056, 0.8319, 0.7144, 0.8500, 0.6264,
        0.6966, 0.7261, 0.7155, 0.7670, 0.6921, 0.7512, 0.8198, 0.6614, 0.7678,
        0.6510, 0.7653, 0.6888, 0.6740, 0.8294, 0.6032, 0.7662, 0.6686, 0.7345,
        0.7810, 0.8702, 0.6177, 0.7078, 0.5790, 0.7399, 0.6427, 0.7269, 0.7456,
        0.7983, 0.7972, 0.7499, 0.6678, 0.8945, 0.6872, 0.7737, 0.8103, 0.7197,
        0.7300, 0.6334, 0.7881, 0.7562, 0.8094, 0.7570, 0.8019, 0.5142, 0.7930,
        0.8445, 0.7124, 0.7684, 0.8364, 0.6883, 0.7949, 0.5191, 0.8158, 0.7149,
        0.8181, 0.8771, 0.9062, 0.7983, 0.7633, 0.7786, 0.6922, 0.8626, 0.8399,
        0.5488, 0.7060, 0.8363, 0.7515, 0.7733, 0.7114, 0.6892, 0.6524, 0.8262,
        0.7651, 0.6194, 0.7610, 0.7560, 0.7141, 0.8293, 0.7517, 0.8724, 0.7720,
        0.7116, 0.7406, 0.6990, 0.7179, 0.8407, 0.7237, 0.6249, 0.7304, 0.7034,
        0.7772, 0.9296, 0.6862, 0.7808, 0.7830, 0.6890, 0.7859, 0.7357, 0.7041,
        0.6594, 0.6309, 0.7519, 0.8490, 0.8872, 0.4129, 0.7435, 0.8231, 0.6715,
        0.7422, 0.5490, 0.7429, 0.7309, 0.8425, 0.6471, 0.6286, 0.7429, 0.7302,
        0.7784, 0.6059, 0.6398, 0.9050, 0.7135, 0.7625, 0.8652, 0.7409, 0.6822,
        0.4801, 0.6620, 0.7752, 0.8892, 0.8379, 0.7376, 0.6896, 0.5917, 0.6976,
        0.5613, 0.7366, 0.7284, 0.8320, 0.7230, 0.7718, 0.5147, 0.7040, 0.8716,
        0.7074, 0.6848, 0.7345, 0.7688, 0.8208, 0.6785, 0.6716, 0.8316, 0.8150,
        0.8676, 0.6598, 0.8265, 0.7872, 0.5891, 0.7522, 0.6572, 0.6480, 0.6756,
        0.7368, 0.7084, 0.6276, 0.5636, 0.7590, 0.7000, 0.6715, 0.5873, 0.7932,
        0.7327, 0.9075, 0.6702, 0.7945, 0.6685, 0.5759, 0.6744, 0.7174, 0.8484,
        0.8703, 0.7177, 0.7926, 0.8594, 0.7628, 0.6844, 0.7843, 0.8159, 0.7902,
        0.6096, 0.8260, 0.7723, 0.6607, 0.5325, 0.6928, 0.7948, 0.7169, 0.8417,
        0.7387, 0.8084, 0.6907, 0.7677, 0.7174, 0.8615, 0.7354, 0.7265, 0.7883,
        0.8479, 0.6271, 0.6569, 0.6707, 0.8248, 0.5645, 0.8341, 0.7484, 0.8673,
        0.7940, 0.7912, 0.7294, 0.7636, 0.8642, 0.7306, 0.8042, 0.6823, 0.7525,
        0.8562, 0.6691, 0.7970, 0.8279, 0.6755, 0.7860, 0.7761, 0.7315, 0.7511,
        0.8475, 0.7281, 0.7788, 0.7560, 0.7516, 0.5534, 0.4785, 0.7801, 0.8339,
        0.8900, 0.9111, 0.8538, 0.7437, 0.7448, 0.7322, 0.5855, 0.5680, 0.7712,
        0.5419, 0.5228, 0.6776, 0.6633, 0.6420, 0.8284, 0.7338, 0.6646, 0.7885,
        0.7787, 0.7587, 0.6391, 0.8153, 0.8730, 0.8245, 0.7116, 0.6607, 0.6230,
        0.6338, 0.8838, 0.6682, 0.7444, 0.8117, 0.6240, 0.5322, 0.7828, 0.8948,
        0.7025, 0.7038, 0.6148, 0.6867, 0.7454, 0.7352, 0.6684, 0.7473, 0.6654,
        0.7091, 0.6835, 0.6744, 0.8277, 0.7105, 0.7731, 0.7401, 0.7958, 0.7295,
        0.8811, 0.6325, 0.7249, 0.8409, 0.6560, 0.6674, 0.5750, 0.7657, 0.5840,
        0.4628, 0.8936, 0.5674, 0.8374, 0.5583, 0.7860, 0.6941, 0.8034, 0.8739,
        0.7446, 0.7148, 0.8416, 0.7626, 0.7819, 0.7324, 0.8440, 0.5532, 0.7655,
        0.8949, 0.6031, 0.7712, 0.6774, 0.7632, 0.5663, 0.6786, 0.9038, 0.8713,
        0.8804, 0.6746, 0.7479, 0.7135, 0.9158, 0.5206, 0.7238, 0.8949, 0.7912,
        0.7468, 0.7189, 0.7257, 0.7485, 0.7747, 0.2962, 0.8836, 0.8637, 0.6702,
        0.8019, 0.7776, 0.7237, 0.7924, 0.7736, 0.6827, 0.6586, 0.8040, 0.5827,
        0.7135, 0.5327, 0.6595, 0.7623, 0.8202, 0.8095, 0.7116, 0.7850, 0.6076,
        0.7479, 0.6294, 0.5943, 0.7830, 0.8541, 0.6658, 0.6934, 0.7904, 0.6255,
        0.7768, 0.8465, 0.8973, 0.7364, 0.5482, 0.6781, 0.7625, 0.7678, 0.8741,
        0.7583, 0.6454, 0.6972, 0.7586, 0.5834, 0.8042, 0.6221, 0.6930, 0.7654,
        0.6807, 0.7847, 0.7256, 0.7381, 0.8540, 0.7110, 0.7067, 0.6176, 0.9015,
        0.7138, 0.7936, 0.5941, 0.7959, 0.7017, 0.7934, 0.7013, 0.6963, 0.5878,
        0.8403, 0.5369, 0.7069], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(495.6431, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([678, 1])
Inertia: tensor([226.7189], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([678, 1280])
Centroid_list: tensor([[-0.0321, -0.0703, -0.0709,  ..., -0.0435,  0.0582, -0.5328],
        [-0.0321, -0.0703, -0.0709,  ..., -0.0435,  0.0582, -0.5328],
        [ 0.0149, -0.0456, -0.0811,  ..., -0.0222,  0.0660, -0.3315],
        ...,
        [-0.0443, -0.0672, -0.0642,  ..., -0.0506,  0.0752, -0.4777],
        [ 0.0149, -0.0456, -0.0811,  ..., -0.0222,  0.0660, -0.3315],
        [ 0.0075, -0.0214, -0.0521,  ..., -0.0425,  0.0588, -0.2551]],
       device='cuda:0')
Computed C_score: tensor([0.6326, 0.7139, 0.6914, 0.7083, 0.8121, 0.7689, 0.7610, 0.8674, 0.8161,
        0.7295, 0.7415, 0.5860, 0.5460, 0.9005, 0.8779, 0.6831, 0.7699, 0.8354,
        0.7348, 0.6643, 0.8410, 0.7577, 0.8540, 0.6677, 0.6746, 0.8685, 0.7588,
        0.7056, 0.8906, 0.6861, 0.7266, 0.7294, 0.6741, 0.6966, 0.7038, 0.6522,
        0.8070, 0.7561, 0.7582, 0.7524, 0.6110, 0.7764, 0.7548, 0.6608, 0.7632,
        0.7130, 0.8445, 0.7589, 0.6822, 0.7673, 0.6998, 0.8132, 0.4469, 0.7366,
        0.8978, 0.9074, 0.7508, 0.7713, 0.7395, 0.7512, 0.7328, 0.7348, 0.7350,
        0.6819, 0.7618, 0.7219, 0.8664, 0.7150, 0.6917, 0.7516, 0.6633, 0.7113,
        0.6444, 0.7761, 0.8046, 0.7808, 0.8327, 0.7215, 0.8956, 0.7839, 0.6880,
        0.7803, 0.6038, 0.8261, 0.8521, 0.6395, 0.6574, 0.7304, 0.7725, 0.6678,
        0.6497, 0.7619, 0.7853, 0.7457, 0.8590, 0.7392, 0.7225, 0.4670, 0.5964,
        0.7001, 0.7094, 0.7502, 0.6014, 0.8790, 0.9054, 0.7790, 0.6828, 0.7018,
        0.7832, 0.8161, 0.7945, 0.7460, 0.8402, 0.6250, 0.7574, 0.7652, 0.7902,
        0.7062, 0.6628, 0.8749, 0.6104, 0.5719, 0.8180, 0.6301, 0.6589, 0.8341,
        0.7662, 0.7627, 0.5971, 0.7478, 0.6017, 0.7437, 0.6972, 0.6626, 0.7124,
        0.7602, 0.8632, 0.6279, 0.7518, 0.7365, 0.5910, 0.8408, 0.9330, 0.7651,
        0.7185, 0.7081, 0.8799, 0.7698, 0.6793, 0.6054, 0.6265, 0.6358, 0.6567,
        0.6773, 0.7989, 0.6491, 0.7264, 0.8207, 0.7782, 0.7217, 0.7974, 0.6897,
        0.7914, 0.8158, 0.7301, 0.7803, 0.8137, 0.9201, 0.7108, 0.9181, 0.8306,
        0.6750, 0.8261, 0.7165, 0.6457, 0.4869, 0.7280, 0.7325, 0.6910, 0.7519,
        0.6520, 0.9134, 0.8059, 0.6891, 0.8627, 0.7833, 0.7510, 0.7385, 0.5556,
        0.7059, 0.7261, 0.8453, 0.7254, 0.5657, 0.8245, 0.6754, 0.6846, 0.6091,
        0.7506, 0.7392, 0.7611, 0.7465, 0.7879, 0.6809, 0.7416, 0.7738, 0.9042,
        0.6636, 0.7431, 0.6354, 0.5426, 0.5957, 0.7481, 0.8313, 0.8539, 0.7121,
        0.7012, 0.6776, 0.7731, 0.7086, 0.8087, 0.7580, 0.8992, 0.7240, 0.7333,
        0.7723, 0.7289, 0.7880, 0.6361, 0.7752, 0.8656, 0.8477, 0.7982, 0.7369,
        0.7282, 0.4670, 0.6957, 0.7599, 0.6791, 0.7716, 0.8459, 0.7287, 0.6835,
        0.7701, 0.7214, 0.9246, 0.7046, 0.6418, 0.7203, 0.7661, 0.7807, 0.7011,
        0.8674, 0.6179, 0.7362, 0.5657, 0.8216, 0.8330, 0.7126, 0.8541, 0.6326,
        0.7111, 0.7229, 0.7275, 0.7679, 0.6804, 0.7553, 0.8211, 0.6839, 0.7670,
        0.6356, 0.7939, 0.6895, 0.6818, 0.8493, 0.5932, 0.7721, 0.6766, 0.8006,
        0.7780, 0.8760, 0.6208, 0.7355, 0.5981, 0.7829, 0.6974, 0.7264, 0.7360,
        0.7910, 0.7673, 0.7445, 0.6939, 0.9094, 0.7022, 0.7793, 0.8161, 0.7588,
        0.7197, 0.7685, 0.7824, 0.7404, 0.8195, 0.7935, 0.7549, 0.5458, 0.8067,
        0.8519, 0.7233, 0.7633, 0.8626, 0.6690, 0.7889, 0.6227, 0.8220, 0.7147,
        0.8368, 0.8786, 0.9182, 0.7798, 0.7629, 0.7856, 0.6562, 0.8608, 0.8417,
        0.5509, 0.7547, 0.8578, 0.8416, 0.8376, 0.8093, 0.7016, 0.6483, 0.8163,
        0.7436, 0.6333, 0.8212, 0.7760, 0.7055, 0.8110, 0.7532, 0.8716, 0.7756,
        0.7085, 0.7527, 0.7072, 0.6950, 0.8470, 0.7242, 0.6414, 0.7177, 0.7491,
        0.7962, 0.9272, 0.6598, 0.7612, 0.8467, 0.7587, 0.7859, 0.7301, 0.7779,
        0.6185, 0.7391, 0.7791, 0.8703, 0.8879, 0.4301, 0.7665, 0.8225, 0.6445,
        0.7686, 0.6198, 0.7488, 0.7210, 0.8162, 0.6930, 0.6596, 0.7206, 0.7386,
        0.7620, 0.5826, 0.7192, 0.9006, 0.7281, 0.7531, 0.8534, 0.7381, 0.6985,
        0.5429, 0.7196, 0.7648, 0.8880, 0.8428, 0.7605, 0.6924, 0.6399, 0.6739,
        0.5672, 0.7349, 0.7274, 0.8276, 0.7053, 0.7787, 0.5393, 0.7107, 0.8727,
        0.7144, 0.6910, 0.7470, 0.7685, 0.8184, 0.6908, 0.7220, 0.8459, 0.8113,
        0.8846, 0.6506, 0.8255, 0.7651, 0.6150, 0.7751, 0.6560, 0.6970, 0.6559,
        0.7530, 0.7070, 0.6437, 0.5659, 0.7548, 0.6973, 0.6734, 0.6307, 0.7752,
        0.7418, 0.9188, 0.6715, 0.7571, 0.6491, 0.5771, 0.6812, 0.7407, 0.8594,
        0.8718, 0.7023, 0.7973, 0.8775, 0.7808, 0.6632, 0.7624, 0.8585, 0.7930,
        0.6354, 0.8244, 0.7721, 0.6629, 0.5592, 0.7475, 0.7762, 0.7356, 0.8451,
        0.8082, 0.8292, 0.6679, 0.7757, 0.7146, 0.8621, 0.7326, 0.7102, 0.7876,
        0.8492, 0.6123, 0.7383, 0.6624, 0.8083, 0.6224, 0.8253, 0.7421, 0.8672,
        0.7930, 0.7987, 0.7221, 0.7510, 0.8711, 0.7368, 0.8004, 0.6944, 0.7244,
        0.8575, 0.6698, 0.7987, 0.8264, 0.6562, 0.7931, 0.7751, 0.7109, 0.7404,
        0.8515, 0.7578, 0.7825, 0.7545, 0.7460, 0.5879, 0.5903, 0.8377, 0.8224,
        0.8846, 0.9248, 0.8677, 0.7711, 0.7380, 0.7722, 0.5619, 0.6726, 0.7694,
        0.6286, 0.5084, 0.6915, 0.6528, 0.6123, 0.8244, 0.7925, 0.6866, 0.8031,
        0.7886, 0.7341, 0.7573, 0.7987, 0.8853, 0.8093, 0.7770, 0.6825, 0.6453,
        0.6226, 0.8835, 0.6922, 0.7443, 0.8139, 0.6188, 0.6652, 0.7832, 0.8970,
        0.7004, 0.7305, 0.6267, 0.6711, 0.7544, 0.7321, 0.7168, 0.7499, 0.6908,
        0.7782, 0.6895, 0.6808, 0.7944, 0.7061, 0.8428, 0.7582, 0.8038, 0.7296,
        0.8827, 0.7237, 0.7236, 0.8422, 0.6635, 0.6672, 0.6505, 0.7470, 0.5897,
        0.4680, 0.8961, 0.6671, 0.8425, 0.5677, 0.7805, 0.7136, 0.8514, 0.8746,
        0.7382, 0.7458, 0.8432, 0.7692, 0.7803, 0.7381, 0.8499, 0.5536, 0.7628,
        0.9049, 0.5889, 0.7564, 0.6841, 0.7624, 0.6302, 0.6924, 0.9075, 0.8683,
        0.8865, 0.6696, 0.7515, 0.7310, 0.9260, 0.5402, 0.7204, 0.9087, 0.7936,
        0.7476, 0.7162, 0.7108, 0.8102, 0.7745, 0.2584, 0.8857, 0.8675, 0.6719,
        0.8404, 0.7785, 0.7111, 0.8070, 0.7832, 0.7007, 0.6606, 0.7680, 0.6037,
        0.7151, 0.5704, 0.7021, 0.7559, 0.8342, 0.7890, 0.7372, 0.8186, 0.6404,
        0.7132, 0.6264, 0.7101, 0.7858, 0.8539, 0.6678, 0.7036, 0.7919, 0.6933,
        0.7767, 0.8519, 0.9095, 0.7657, 0.5334, 0.6983, 0.7421, 0.7499, 0.8797,
        0.7416, 0.6514, 0.6985, 0.7877, 0.5862, 0.7780, 0.6176, 0.6825, 0.7765,
        0.7238, 0.7746, 0.7963, 0.7235, 0.8560, 0.7035, 0.7231, 0.6188, 0.9178,
        0.7704, 0.8238, 0.6194, 0.7664, 0.7209, 0.7787, 0.6990, 0.7095, 0.5875,
        0.8420, 0.5646, 0.7261], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(502.5403, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0015, 0.0044, 0.0085, 0.0137], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([4503, 1280])
S-Scores: tensor([0.5428, 1.6931, 3.3607, 5.5431], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([4503, 1])
Inertia: tensor([131.8573], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([4503, 1280])
Centroid_list: tensor([[-0.0414, -0.0616, -0.0595,  ..., -0.0606,  0.0826, -0.1797],
        [-0.0414, -0.0616, -0.0595,  ..., -0.0606,  0.0826, -0.1797],
        [-0.0798, -0.0207, -0.0614,  ..., -0.0050,  0.0736,  0.5658],
        ...,
        [-0.0798, -0.0207, -0.0614,  ..., -0.0050,  0.0736,  0.5658],
        [-0.0414, -0.0616, -0.0595,  ..., -0.0606,  0.0826, -0.1797],
        [-0.0414, -0.0616, -0.0595,  ..., -0.0606,  0.0826, -0.1797]],
       device='cuda:0')
Computed C_score: tensor([0.7784, 0.5710, 0.7195,  ..., 0.8966, 0.6613, 0.5994], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3455.2046, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4503, 1])
Inertia: tensor([175.7769], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([4503, 1280])
Centroid_list: tensor([[-0.0388, -0.0549, -0.0592,  ..., -0.0602,  0.0792, -0.1215],
        [-0.0388, -0.0549, -0.0592,  ..., -0.0602,  0.0792, -0.1215],
        [-0.0813, -0.0196, -0.0615,  ..., -0.0032,  0.0734,  0.5854],
        ...,
        [-0.0813, -0.0196, -0.0615,  ..., -0.0032,  0.0734,  0.5854],
        [-0.0469, -0.0700, -0.0600,  ..., -0.0584,  0.0874, -0.2242],
        [-0.0388, -0.0549, -0.0592,  ..., -0.0602,  0.0792, -0.1215]],
       device='cuda:0')
Computed C_score: tensor([0.6884, 0.6631, 0.7180,  ..., 0.8977, 0.8151, 0.7304], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3565.1362, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4503, 1])
Inertia: tensor([146.0744], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([4503, 1280])
Centroid_list: tensor([[-0.0293, -0.0602, -0.0491,  ..., -0.0724,  0.0877, -0.1448],
        [-0.0427, -0.0550, -0.0611,  ..., -0.0566,  0.0780, -0.1048],
        [-0.0814, -0.0195, -0.0615,  ..., -0.0031,  0.0734,  0.5874],
        ...,
        [-0.0814, -0.0195, -0.0615,  ..., -0.0031,  0.0734,  0.5874],
        [-0.0693, -0.0824, -0.0786,  ..., -0.0383,  0.0851, -0.4017],
        [-0.0427, -0.0550, -0.0611,  ..., -0.0566,  0.0780, -0.1048]],
       device='cuda:0')
Computed C_score: tensor([0.7603, 0.6639, 0.7179,  ..., 0.8978, 0.9276, 0.7399], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3609.6030, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4503, 1])
Inertia: tensor([146.1564], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([4503, 1280])
Centroid_list: tensor([[-0.0292, -0.0602, -0.0491,  ..., -0.0723,  0.0877, -0.1450],
        [-0.0430, -0.0548, -0.0609,  ..., -0.0566,  0.0779, -0.1012],
        [-0.0905, -0.0234, -0.0695,  ..., -0.0018,  0.0719,  0.2762],
        ...,
        [-0.0684, -0.0136, -0.0501,  ..., -0.0044,  0.0757,  1.0395],
        [-0.0693, -0.0824, -0.0786,  ..., -0.0383,  0.0851, -0.4017],
        [-0.0430, -0.0548, -0.0609,  ..., -0.0566,  0.0779, -0.1012]],
       device='cuda:0')
Computed C_score: tensor([0.7602, 0.6640, 0.7484,  ..., 0.9229, 0.9276, 0.7399], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3657.5063, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0002, 0.0005, 0.0009, 0.0015], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([4286, 1280])
S-Scores: tensor([0.6111, 1.7625, 3.6975, 5.9457], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([4286, 1])
Inertia: tensor([77.6045], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([4286, 1280])
Centroid_list: tensor([[ 0.0274, -0.0664, -0.0732,  ..., -0.0224,  0.0710, -0.5564],
        [-0.0369, -0.0634, -0.0878,  ..., -0.0540,  0.0811, -0.3334],
        [ 0.0274, -0.0664, -0.0732,  ..., -0.0224,  0.0710, -0.5564],
        ...,
        [-0.0369, -0.0634, -0.0878,  ..., -0.0540,  0.0811, -0.3334],
        [-0.0369, -0.0634, -0.0878,  ..., -0.0540,  0.0811, -0.3334],
        [ 0.0274, -0.0664, -0.0732,  ..., -0.0224,  0.0710, -0.5564]],
       device='cuda:0')
Computed C_score: tensor([0.8684, 0.5554, 0.7989,  ..., 0.7850, 0.7405, 0.8037], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3166.3921, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4286, 1])
Inertia: tensor([77.3866], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([4286, 1280])
Centroid_list: tensor([[ 0.0290, -0.0656, -0.0709,  ..., -0.0213,  0.0714, -0.5580],
        [-0.0274, -0.0577, -0.0906,  ..., -0.0560,  0.0788, -0.3156],
        [ 0.0290, -0.0656, -0.0709,  ..., -0.0213,  0.0714, -0.5580],
        ...,
        [-0.0533, -0.0801, -0.0842,  ..., -0.0466,  0.0839, -0.4124],
        [-0.0274, -0.0577, -0.0906,  ..., -0.0560,  0.0788, -0.3156],
        [ 0.0290, -0.0656, -0.0709,  ..., -0.0213,  0.0714, -0.5580]],
       device='cuda:0')
Computed C_score: tensor([0.8692, 0.6707, 0.7940,  ..., 0.8128, 0.7100, 0.7950], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3280.8130, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4286, 1])
Inertia: tensor([88.3173], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([4286, 1280])
Centroid_list: tensor([[ 0.0140, -0.0828, -0.0609,  ..., -0.0182,  0.0723, -0.5217],
        [-0.0284, -0.0562, -0.0909,  ..., -0.0565,  0.0789, -0.3070],
        [ 0.0140, -0.0828, -0.0609,  ..., -0.0182,  0.0723, -0.5217],
        ...,
        [-0.0527, -0.0800, -0.0843,  ..., -0.0477,  0.0837, -0.4138],
        [-0.0284, -0.0562, -0.0909,  ..., -0.0565,  0.0789, -0.3070],
        [ 0.0140, -0.0828, -0.0609,  ..., -0.0182,  0.0723, -0.5217]],
       device='cuda:0')
Computed C_score: tensor([0.8519, 0.6778, 0.8205,  ..., 0.8123, 0.7049, 0.7939], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3326.1528, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([4286, 1])
Inertia: tensor([88.3924], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([4286, 1280])
Centroid_list: tensor([[ 0.0138, -0.0830, -0.0604,  ..., -0.0177,  0.0725, -0.5188],
        [-0.0284, -0.0507, -0.0930,  ..., -0.0553,  0.0794, -0.2776],
        [ 0.0138, -0.0830, -0.0604,  ..., -0.0177,  0.0725, -0.5188],
        ...,
        [-0.0334, -0.0726, -0.0820,  ..., -0.0606,  0.0799, -0.3609],
        [-0.0334, -0.0726, -0.0820,  ..., -0.0606,  0.0799, -0.3609],
        [ 0.0138, -0.0830, -0.0604,  ..., -0.0177,  0.0725, -0.5188]],
       device='cuda:0')
Computed C_score: tensor([0.8519, 0.7290, 0.8211,  ..., 0.8072, 0.8024, 0.7933], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3375.6748, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0002, 0.0005, 0.0011, 0.0018], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(3, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([328, 1280])
S-Scores: tensor([0.7011, 2.1472, 4.0265, 6.1918], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([328, 1])
Inertia: tensor([144.5411], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([328, 1280])
Centroid_list: tensor([[-0.0503, -0.0501, -0.0326,  ..., -0.0624,  0.0806, -0.1592],
        [-0.0503, -0.0501, -0.0326,  ..., -0.0624,  0.0806, -0.1592],
        [-0.0503, -0.0501, -0.0326,  ..., -0.0624,  0.0806, -0.1592],
        ...,
        [-0.0503, -0.0501, -0.0326,  ..., -0.0624,  0.0806, -0.1592],
        [-0.0503, -0.0501, -0.0326,  ..., -0.0624,  0.0806, -0.1592],
        [-0.0503, -0.0501, -0.0326,  ..., -0.0624,  0.0806, -0.1592]],
       device='cuda:0')
Computed C_score: tensor([0.7090, 0.7470, 0.6059, 0.8152, 0.5945, 0.7618, 0.7243, 0.5498, 0.5097,
        0.5054, 0.7341, 0.6460, 0.8369, 0.7284, 0.5175, 0.7441, 0.7981, 0.6312,
        0.7206, 0.6708, 0.7797, 0.5790, 0.5516, 0.8589, 0.5804, 0.8056, 0.7697,
        0.7081, 0.5547, 0.8063, 0.6967, 0.7157, 0.6996, 0.6832, 0.3631, 0.7248,
        0.8289, 0.6348, 0.7596, 0.7214, 0.5193, 0.7840, 0.7126, 0.7139, 0.8378,
        0.5510, 0.7335, 0.7473, 0.7553, 0.7296, 0.5857, 0.7232, 0.5376, 0.5694,
        0.8371, 0.6406, 0.6581, 0.7867, 0.7889, 0.7258, 0.6970, 0.6861, 0.5995,
        0.6359, 0.7793, 0.6858, 0.6134, 0.8657, 0.8000, 0.7381, 0.7255, 0.6696,
        0.6492, 0.7804, 0.6675, 0.6433, 0.7958, 0.7179, 0.6688, 0.7286, 0.6349,
        0.6436, 0.6914, 0.7469, 0.6727, 0.7110, 0.6908, 0.5912, 0.6628, 0.6874,
        0.7209, 0.5736, 0.6495, 0.7464, 0.6538, 0.5721, 0.5041, 0.7317, 0.7255,
        0.5685, 0.6138, 0.7115, 0.7454, 0.6068, 0.7767, 0.7932, 0.6578, 0.5153,
        0.7671, 0.7108, 0.5782, 0.8066, 0.6611, 0.4756, 0.8359, 0.6755, 0.6784,
        0.7411, 0.4233, 0.5229, 0.6136, 0.7072, 0.7516, 0.6729, 0.8141, 0.7038,
        0.5666, 0.5447, 0.5408, 0.7307, 0.7361, 0.6826, 0.6734, 0.5756, 0.7577,
        0.6583, 0.7470, 0.7320, 0.5256, 0.5960, 0.8697, 0.7299, 0.6084, 0.6697,
        0.7891, 0.6925, 0.5975, 0.6562, 0.4977, 0.6034, 0.6356, 0.5914, 0.7333,
        0.6801, 0.6086, 0.6206, 0.5852, 0.7677, 0.5601, 0.6721, 0.5833, 0.7167,
        0.5802, 0.6636, 0.7937, 0.7314, 0.7360, 0.6304, 0.7567, 0.6459, 0.7173,
        0.6107, 0.7669, 0.7486, 0.6874, 0.7147, 0.7512, 0.7002, 0.6899, 0.6393,
        0.7960, 0.6779, 0.6525, 0.7147, 0.6990, 0.6821, 0.4994, 0.5625, 0.7778,
        0.8014, 0.7057, 0.7678, 0.5275, 0.5893, 0.7026, 0.5399, 0.8208, 0.6278,
        0.7461, 0.6618, 0.8251, 0.6082, 0.7537, 0.8734, 0.6502, 0.7212, 0.5903,
        0.7890, 0.6199, 0.6532, 0.6915, 0.7732, 0.7067, 0.7442, 0.7925, 0.7465,
        0.6088, 0.7798, 0.6972, 0.6194, 0.5989, 0.7776, 0.5641, 0.7530, 0.7422,
        0.6601, 0.6302, 0.6373, 0.7511, 0.8407, 0.6796, 0.7870, 0.6965, 0.5164,
        0.6103, 0.6849, 0.7479, 0.7445, 0.6714, 0.6046, 0.6016, 0.7442, 0.6877,
        0.8489, 0.6567, 0.5280, 0.7116, 0.7624, 0.5726, 0.7323, 0.7100, 0.7107,
        0.7681, 0.6202, 0.7552, 0.5538, 0.7164, 0.7441, 0.6301, 0.7674, 0.6573,
        0.6417, 0.5686, 0.6228, 0.6927, 0.6842, 0.5800, 0.7736, 0.7432, 0.5759,
        0.7376, 0.7687, 0.6571, 0.7638, 0.6230, 0.7210, 0.6503, 0.6429, 0.6554,
        0.7309, 0.6558, 0.6515, 0.6367, 0.8049, 0.7407, 0.6771, 0.7235, 0.6162,
        0.6753, 0.7647, 0.7380, 0.7110, 0.6893, 0.6723, 0.8120, 0.5617, 0.7664,
        0.7647, 0.5688, 0.7603, 0.7846, 0.7665, 0.5185, 0.5855, 0.6939, 0.7047,
        0.7228, 0.6503, 0.7995, 0.7527, 0.7697, 0.5503, 0.7471, 0.7971, 0.7293,
        0.7879, 0.6632, 0.7762, 0.7386, 0.8279, 0.8933, 0.7382, 0.7597, 0.5921,
        0.7985, 0.5661, 0.6268, 0.7937], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(225.2290, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([328, 1])
Inertia: tensor([135.9963], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([328, 1280])
Centroid_list: tensor([[-0.0650, -0.0557, -0.0383,  ..., -0.0687,  0.0764, -0.0013],
        [-0.0650, -0.0557, -0.0383,  ..., -0.0687,  0.0764, -0.0013],
        [-0.0325, -0.0467, -0.0254,  ..., -0.0560,  0.0838, -0.4810],
        ...,
        [-0.0325, -0.0467, -0.0254,  ..., -0.0560,  0.0838, -0.4810],
        [-0.0650, -0.0557, -0.0383,  ..., -0.0687,  0.0764, -0.0013],
        [-0.0650, -0.0557, -0.0383,  ..., -0.0687,  0.0764, -0.0013]],
       device='cuda:0')
Computed C_score: tensor([0.7283, 0.7606, 0.6926, 0.8219, 0.5839, 0.7760, 0.7168, 0.5098, 0.5411,
        0.5413, 0.7084, 0.6869, 0.8198, 0.7561, 0.5656, 0.7242, 0.8200, 0.6215,
        0.8245, 0.6517, 0.7606, 0.5448, 0.5364, 0.8594, 0.6420, 0.8074, 0.7919,
        0.7382, 0.5611, 0.8094, 0.6826, 0.7535, 0.6907, 0.7271, 0.3699, 0.7872,
        0.8442, 0.6599, 0.7818, 0.7234, 0.5109, 0.7899, 0.6881, 0.7101, 0.8467,
        0.5913, 0.7056, 0.8134, 0.7733, 0.7869, 0.5801, 0.7147, 0.5611, 0.5981,
        0.8246, 0.7231, 0.6462, 0.8141, 0.8002, 0.7355, 0.6653, 0.8176, 0.5931,
        0.7044, 0.7951, 0.6471, 0.6670, 0.8528, 0.7828, 0.7247, 0.7371, 0.6633,
        0.7016, 0.7756, 0.7297, 0.6385, 0.7758, 0.7425, 0.6760, 0.7385, 0.6187,
        0.6458, 0.7093, 0.7296, 0.7364, 0.8311, 0.7419, 0.5948, 0.7532, 0.6965,
        0.7547, 0.5787, 0.6960, 0.7127, 0.6419, 0.5594, 0.5810, 0.7064, 0.7750,
        0.6375, 0.6052, 0.7159, 0.7578, 0.5990, 0.7961, 0.7706, 0.7237, 0.5299,
        0.7961, 0.7314, 0.6138, 0.8247, 0.6493, 0.4840, 0.8459, 0.8168, 0.6787,
        0.7904, 0.4484, 0.5290, 0.6282, 0.6829, 0.8289, 0.7759, 0.8324, 0.7732,
        0.6140, 0.5803, 0.5463, 0.7263, 0.7363, 0.6759, 0.6516, 0.5538, 0.7767,
        0.6683, 0.7160, 0.7169, 0.5911, 0.6296, 0.8883, 0.7539, 0.6178, 0.6947,
        0.8077, 0.6962, 0.6890, 0.6601, 0.5093, 0.6615, 0.6104, 0.6042, 0.8136,
        0.7448, 0.6423, 0.6647, 0.6002, 0.7903, 0.5916, 0.6446, 0.5798, 0.7446,
        0.5821, 0.6642, 0.7860, 0.7143, 0.7937, 0.6234, 0.7273, 0.6249, 0.7133,
        0.6395, 0.7707, 0.7492, 0.7267, 0.7869, 0.7517, 0.7399, 0.6540, 0.6655,
        0.7989, 0.7186, 0.6469, 0.7079, 0.7373, 0.6920, 0.5666, 0.5456, 0.7513,
        0.7859, 0.7037, 0.7860, 0.5621, 0.7105, 0.7275, 0.5975, 0.8097, 0.6383,
        0.7622, 0.7183, 0.8135, 0.6254, 0.7629, 0.8819, 0.7179, 0.7841, 0.6312,
        0.7703, 0.6904, 0.6537, 0.7550, 0.7649, 0.6970, 0.7231, 0.7859, 0.7625,
        0.6462, 0.7594, 0.7251, 0.7289, 0.6403, 0.7605, 0.5845, 0.7611, 0.7693,
        0.7043, 0.6265, 0.6703, 0.7785, 0.8486, 0.6607, 0.8006, 0.7261, 0.5752,
        0.6446, 0.6734, 0.7625, 0.7184, 0.7065, 0.6035, 0.6402, 0.7801, 0.7195,
        0.8619, 0.6733, 0.5834, 0.6959, 0.8054, 0.6073, 0.7546, 0.6862, 0.7236,
        0.7460, 0.6096, 0.7756, 0.5456, 0.7343, 0.7652, 0.6451, 0.7536, 0.7579,
        0.6540, 0.5807, 0.6301, 0.7193, 0.7160, 0.6087, 0.7511, 0.7625, 0.6069,
        0.7281, 0.7882, 0.6469, 0.7493, 0.6404, 0.7647, 0.6455, 0.7690, 0.7919,
        0.7240, 0.7330, 0.7220, 0.6210, 0.8129, 0.8439, 0.7690, 0.7092, 0.5995,
        0.7220, 0.7633, 0.7155, 0.7156, 0.7705, 0.6758, 0.7848, 0.5950, 0.7664,
        0.7804, 0.6032, 0.7701, 0.7991, 0.7761, 0.5548, 0.6359, 0.7285, 0.7400,
        0.7171, 0.6392, 0.7857, 0.7330, 0.7744, 0.5767, 0.7074, 0.8190, 0.7546,
        0.8073, 0.6700, 0.7541, 0.7473, 0.8475, 0.8944, 0.7116, 0.7141, 0.6484,
        0.7958, 0.5665, 0.6870, 0.7664], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(231.0292, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([328, 1])
Inertia: tensor([144.1558], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([328, 1280])
Centroid_list: tensor([[-0.0583, -0.0494, -0.0374,  ..., -0.0644,  0.0797,  0.0706],
        [-0.0891, -0.0898, -0.0507,  ..., -0.0754,  0.0678, -0.3998],
        [-0.0317, -0.0429, -0.0242,  ..., -0.0544,  0.0842, -0.4794],
        ...,
        [-0.0317, -0.0429, -0.0242,  ..., -0.0544,  0.0842, -0.4794],
        [-0.0583, -0.0494, -0.0374,  ..., -0.0644,  0.0797,  0.0706],
        [-0.0583, -0.0494, -0.0374,  ..., -0.0644,  0.0797,  0.0706]],
       device='cuda:0')
Computed C_score: tensor([0.7094, 0.8339, 0.7029, 0.8391, 0.6062, 0.7846, 0.7534, 0.6349, 0.5610,
        0.5758, 0.7684, 0.7139, 0.8982, 0.8540, 0.5998, 0.8270, 0.8793, 0.6085,
        0.8349, 0.6711, 0.8105, 0.5545, 0.5272, 0.8050, 0.6266, 0.8205, 0.8502,
        0.7422, 0.5624, 0.7605, 0.7012, 0.7582, 0.7003, 0.7222, 0.3651, 0.7985,
        0.8628, 0.8268, 0.8455, 0.7317, 0.5663, 0.8326, 0.7683, 0.7054, 0.8039,
        0.6518, 0.8733, 0.8168, 0.8350, 0.7893, 0.5612, 0.7686, 0.5879, 0.5781,
        0.9018, 0.7217, 0.7412, 0.8842, 0.8160, 0.7719, 0.6670, 0.8303, 0.5606,
        0.7096, 0.8526, 0.6884, 0.6716, 0.9068, 0.8204, 0.7197, 0.7617, 0.6368,
        0.7161, 0.8040, 0.7293, 0.6788, 0.8730, 0.8168, 0.6700, 0.7743, 0.6383,
        0.6822, 0.7194, 0.7321, 0.7479, 0.8397, 0.7611, 0.5879, 0.7585, 0.7595,
        0.7631, 0.5790, 0.7056, 0.8792, 0.6604, 0.5503, 0.6135, 0.8565, 0.7675,
        0.6191, 0.6404, 0.7160, 0.7670, 0.6077, 0.8277, 0.8730, 0.7230, 0.5407,
        0.7976, 0.7410, 0.6663, 0.7940, 0.6831, 0.4801, 0.8559, 0.8307, 0.6607,
        0.8075, 0.4594, 0.5107, 0.6298, 0.8154, 0.8289, 0.7842, 0.8508, 0.7862,
        0.6176, 0.5710, 0.5661, 0.6939, 0.7425, 0.8168, 0.6711, 0.5735, 0.8344,
        0.7715, 0.8817, 0.8613, 0.6133, 0.6285, 0.9072, 0.8140, 0.6252, 0.7509,
        0.8386, 0.7022, 0.6935, 0.6997, 0.5852, 0.6496, 0.6404, 0.6587, 0.8127,
        0.7246, 0.7322, 0.6482, 0.6100, 0.8609, 0.6156, 0.7245, 0.5660, 0.7354,
        0.6193, 0.7050, 0.8014, 0.7385, 0.8020, 0.6266, 0.8922, 0.6463, 0.6775,
        0.6783, 0.7855, 0.7353, 0.7083, 0.7696, 0.7495, 0.7546, 0.6832, 0.6805,
        0.7901, 0.7423, 0.6319, 0.8933, 0.7744, 0.6610, 0.5647, 0.5674, 0.9089,
        0.7876, 0.6881, 0.8318, 0.5410, 0.7066, 0.7262, 0.5928, 0.8548, 0.6422,
        0.7795, 0.7273, 0.8237, 0.6150, 0.8113, 0.8425, 0.6954, 0.7900, 0.6197,
        0.8624, 0.7006, 0.6344, 0.7389, 0.7410, 0.6853, 0.8740, 0.7582, 0.7612,
        0.6292, 0.8708, 0.7567, 0.7306, 0.6447, 0.7903, 0.5851, 0.7442, 0.8254,
        0.8256, 0.6411, 0.6641, 0.8064, 0.8420, 0.7783, 0.8274, 0.7815, 0.5504,
        0.6536, 0.6627, 0.7606, 0.7053, 0.8158, 0.5789, 0.6494, 0.7471, 0.7234,
        0.8736, 0.6695, 0.5958, 0.7248, 0.8324, 0.6115, 0.7556, 0.8111, 0.7975,
        0.8653, 0.5855, 0.8163, 0.5671, 0.7445, 0.8086, 0.6806, 0.8158, 0.7628,
        0.6316, 0.7016, 0.6048, 0.7199, 0.7975, 0.6181, 0.8892, 0.7664, 0.5893,
        0.7444, 0.8170, 0.6822, 0.8097, 0.6662, 0.7280, 0.7077, 0.7720, 0.7837,
        0.7035, 0.7215, 0.7073, 0.6267, 0.8525, 0.8413, 0.7801, 0.8239, 0.6669,
        0.7075, 0.7607, 0.8270, 0.7121, 0.7786, 0.7014, 0.7814, 0.6154, 0.7358,
        0.7891, 0.5974, 0.7797, 0.8088, 0.7946, 0.5861, 0.6494, 0.7751, 0.7367,
        0.7262, 0.7082, 0.8084, 0.8396, 0.7931, 0.5529, 0.7318, 0.8763, 0.8173,
        0.8558, 0.7219, 0.8796, 0.7440, 0.9036, 0.8694, 0.7505, 0.7393, 0.6981,
        0.7551, 0.5689, 0.6658, 0.7885], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(239.2402, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([328, 1])
Inertia: tensor([145.1610], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([328, 1280])
Centroid_list: tensor([[-0.0586, -0.0498, -0.0375,  ..., -0.0642,  0.0793,  0.0700],
        [-0.0885, -0.0893, -0.0499,  ..., -0.0753,  0.0678, -0.4096],
        [-0.0314, -0.0431, -0.0239,  ..., -0.0541,  0.0839, -0.4876],
        ...,
        [-0.0314, -0.0431, -0.0239,  ..., -0.0541,  0.0839, -0.4876],
        [-0.0586, -0.0498, -0.0375,  ..., -0.0642,  0.0793,  0.0700],
        [-0.0586, -0.0498, -0.0375,  ..., -0.0642,  0.0793,  0.0700]],
       device='cuda:0')
Computed C_score: tensor([0.7072, 0.8347, 0.7014, 0.8863, 0.6090, 0.7887, 0.7553, 0.6345, 0.5618,
        0.5773, 0.7694, 0.7174, 0.8973, 0.8630, 0.6005, 0.8281, 0.8913, 0.6093,
        0.8372, 0.6722, 0.8112, 0.5567, 0.5244, 0.8021, 0.6283, 0.8797, 0.8238,
        0.7421, 0.5598, 0.7649, 0.7044, 0.7599, 0.7007, 0.7212, 0.4279, 0.7985,
        0.8658, 0.8284, 0.8629, 0.7197, 0.5638, 0.8759, 0.7677, 0.7039, 0.8042,
        0.6531, 0.8738, 0.8211, 0.8408, 0.7887, 0.5571, 0.7701, 0.5881, 0.5778,
        0.8997, 0.7223, 0.7421, 0.8585, 0.8459, 0.8371, 0.6671, 0.8322, 0.5609,
        0.7117, 0.8913, 0.6893, 0.6669, 0.9058, 0.8195, 0.7198, 0.7740, 0.6445,
        0.7125, 0.8039, 0.7312, 0.6805, 0.8731, 0.8272, 0.6679, 0.8006, 0.6399,
        0.6836, 0.7230, 0.7332, 0.7471, 0.8412, 0.7628, 0.5863, 0.7576, 0.8056,
        0.7629, 0.5787, 0.7083, 0.8807, 0.6595, 0.6047, 0.6147, 0.8584, 0.7693,
        0.6221, 0.6392, 0.7149, 0.8452, 0.6051, 0.9683, 0.8742, 0.7211, 0.5406,
        0.8013, 0.7437, 0.6674, 0.7952, 0.6846, 0.4766, 0.8446, 0.8326, 0.7590,
        0.8077, 0.4588, 0.5042, 0.6330, 0.8169, 0.8313, 0.7829, 0.8275, 0.7857,
        0.6162, 0.5717, 0.5663, 0.6950, 0.7445, 0.8176, 0.6671, 0.5747, 0.8953,
        0.7712, 0.8833, 0.8637, 0.6139, 0.6284, 0.8815, 0.9508, 0.6275, 0.9266,
        0.9625, 0.7624, 0.6946, 0.7682, 0.5839, 0.6484, 0.6408, 0.6589, 0.8134,
        0.7242, 0.7321, 0.6462, 0.6061, 0.8897, 0.6188, 0.7260, 0.5622, 0.7326,
        0.6673, 0.7777, 0.8000, 0.7402, 0.8027, 0.6271, 0.8941, 0.6473, 0.6767,
        0.6798, 0.8203, 0.7480, 0.7101, 0.7692, 0.8021, 0.7527, 0.6836, 0.6791,
        0.7869, 0.7434, 0.6752, 0.8943, 0.7753, 0.6163, 0.5580, 0.5638, 0.9094,
        0.7873, 0.6770, 0.8890, 0.5429, 0.7034, 0.7239, 0.5926, 0.8553, 0.6577,
        0.9372, 0.7292, 0.8234, 0.6109, 0.8376, 0.8649, 0.6962, 0.7919, 0.6199,
        0.8631, 0.7026, 0.6355, 0.7417, 0.7417, 0.6866, 0.8725, 0.7559, 0.7610,
        0.6310, 0.8714, 0.7580, 0.7289, 0.6461, 0.7892, 0.6549, 0.9094, 0.8366,
        0.8266, 0.6429, 0.6643, 0.8077, 0.8595, 0.7788, 0.8681, 0.9129, 0.5490,
        0.6531, 0.6288, 0.7242, 0.7053, 0.8162, 0.6142, 0.6488, 0.7467, 0.7248,
        0.8339, 0.6690, 0.5950, 0.7253, 0.8342, 0.6137, 0.7547, 0.8130, 0.8076,
        0.8639, 0.5884, 0.8156, 0.5679, 0.7478, 0.9609, 0.6830, 0.8128, 0.7611,
        0.6255, 0.7021, 0.6059, 0.7189, 0.7707, 0.6128, 0.8883, 0.7672, 0.5861,
        0.7446, 0.9610, 0.6817, 0.8071, 0.6677, 0.7260, 0.7090, 0.7707, 0.7809,
        0.7002, 0.7209, 0.7069, 0.6258, 0.9034, 0.8415, 0.7815, 0.8217, 0.6668,
        0.7073, 0.8216, 0.8265, 0.7130, 0.7816, 0.7585, 0.7823, 0.6175, 0.7885,
        0.7881, 0.5971, 0.9249, 0.9220, 0.7798, 0.5827, 0.6440, 0.7758, 0.7389,
        0.7231, 0.7095, 0.8085, 0.8395, 0.7690, 0.5525, 0.7340, 0.9144, 0.9316,
        0.9349, 0.8127, 0.8799, 0.8471, 0.9108, 0.8742, 0.7495, 0.7413, 0.6992,
        0.7414, 0.5699, 0.6628, 0.7879], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(242.6494, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0031, 0.0092, 0.0166, 0.0249], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1717, 1280])
S-Scores: tensor([0.6348, 1.7957, 3.8224, 6.2523], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1717, 1])
Inertia: tensor([132.9105], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1717, 1280])
Centroid_list: tensor([[-0.0191, -0.0402, -0.0404,  ..., -0.0184,  0.0331, -0.8244],
        [-0.0273, -0.0547, -0.0653,  ..., -0.0568,  0.0798, -0.2663],
        [-0.0273, -0.0547, -0.0653,  ..., -0.0568,  0.0798, -0.2663],
        ...,
        [-0.0273, -0.0547, -0.0653,  ..., -0.0568,  0.0798, -0.2663],
        [-0.0273, -0.0547, -0.0653,  ..., -0.0568,  0.0798, -0.2663],
        [-0.0191, -0.0402, -0.0404,  ..., -0.0184,  0.0331, -0.8244]],
       device='cuda:0')
Computed C_score: tensor([0.7987, 0.7507, 0.5547,  ..., 0.6369, 0.7945, 0.7786], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1256.0454, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1717, 1])
Inertia: tensor([135.2368], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1717, 1280])
Centroid_list: tensor([[-0.0211, -0.0404, -0.0396,  ..., -0.0159,  0.0312, -0.8672],
        [-0.0483, -0.0685, -0.0644,  ..., -0.0586,  0.0836, -0.3573],
        [-0.0168, -0.0481, -0.0646,  ..., -0.0552,  0.0765, -0.2366],
        ...,
        [-0.0483, -0.0685, -0.0644,  ..., -0.0586,  0.0836, -0.3573],
        [-0.0483, -0.0685, -0.0644,  ..., -0.0586,  0.0836, -0.3573],
        [-0.0211, -0.0404, -0.0396,  ..., -0.0159,  0.0312, -0.8672]],
       device='cuda:0')
Computed C_score: tensor([0.7961, 0.9234, 0.6744,  ..., 0.6656, 0.8478, 0.7765], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1305.3608, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1717, 1])
Inertia: tensor([131.2522], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1717, 1280])
Centroid_list: tensor([[-0.0427, -0.0695, -0.0667,  ..., -0.0642,  0.0739, -0.3978],
        [-0.0460, -0.0679, -0.0634,  ..., -0.0557,  0.0849, -0.3385],
        [-0.0023, -0.0349, -0.0633,  ..., -0.0500,  0.0777, -0.1538],
        ...,
        [-0.0427, -0.0695, -0.0667,  ..., -0.0642,  0.0739, -0.3978],
        [-0.0460, -0.0679, -0.0634,  ..., -0.0557,  0.0849, -0.3385],
        [-0.0218, -0.0406, -0.0392,  ..., -0.0155,  0.0309, -0.8735]],
       device='cuda:0')
Computed C_score: tensor([0.8005, 0.9339, 0.7554,  ..., 0.6349, 0.8432, 0.7739], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1330.3507, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1717, 1])
Inertia: tensor([128.7168], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1717, 1280])
Centroid_list: tensor([[-0.0424, -0.0749, -0.0665,  ..., -0.0603,  0.0734, -0.3732],
        [-0.0631, -0.0804, -0.0772,  ..., -0.0401,  0.0836, -0.5050],
        [-0.0034, -0.0332, -0.0650,  ..., -0.0475,  0.0776, -0.1419],
        ...,
        [-0.0271, -0.0538, -0.0550,  ..., -0.0723,  0.0819, -0.2833],
        [-0.0271, -0.0538, -0.0550,  ..., -0.0723,  0.0819, -0.2833],
        [-0.0219, -0.0403, -0.0396,  ..., -0.0157,  0.0310, -0.8741]],
       device='cuda:0')
Computed C_score: tensor([0.8046, 0.9693, 0.7612,  ..., 0.6351, 0.9029, 0.7760], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(1345.0858, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0005, 0.0014, 0.0029, 0.0046], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([731, 1280])
S-Scores: tensor([0.6480, 1.9890, 4.0113, 6.4784], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([731, 1])
Inertia: tensor([178.4668], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([731, 1280])
Centroid_list: tensor([[-0.0063, -0.0695, -0.0411,  ..., -0.0677,  0.0801, -0.1319],
        [-0.0063, -0.0695, -0.0411,  ..., -0.0677,  0.0801, -0.1319],
        [-0.0063, -0.0695, -0.0411,  ..., -0.0677,  0.0801, -0.1319],
        ...,
        [-0.0063, -0.0695, -0.0411,  ..., -0.0677,  0.0801, -0.1319],
        [-0.0063, -0.0695, -0.0411,  ..., -0.0677,  0.0801, -0.1319],
        [-0.0459, -0.0608, -0.0552,  ..., -0.0505,  0.0836, -0.2700]],
       device='cuda:0')
Computed C_score: tensor([0.6633, 0.4692, 0.7615, 0.6102, 0.6637, 0.6561, 0.4763, 0.7653, 0.7841,
        0.8196, 0.7139, 0.6985, 0.8276, 0.5500, 0.6687, 0.7802, 0.5844, 0.5311,
        0.4957, 0.6305, 0.4419, 0.6148, 0.7284, 0.6767, 0.5703, 0.6295, 0.6259,
        0.7260, 0.8359, 0.7337, 0.6176, 0.6222, 0.6477, 0.7412, 0.8039, 0.6449,
        0.6006, 0.7176, 0.6882, 0.5940, 0.6253, 0.6829, 0.6691, 0.4804, 0.6610,
        0.6826, 0.4937, 0.5794, 0.6246, 0.5906, 0.7059, 0.6084, 0.7703, 0.7142,
        0.5238, 0.6600, 0.7495, 0.8388, 0.6760, 0.8025, 0.7821, 0.7266, 0.8940,
        0.7097, 0.7065, 0.8332, 0.9105, 0.7113, 0.5348, 0.6964, 0.6161, 0.7999,
        0.7418, 0.7255, 0.5828, 0.5781, 0.6109, 0.6618, 0.7296, 0.6458, 0.7718,
        0.7089, 0.6124, 0.6339, 0.5853, 0.6162, 0.8912, 0.5578, 0.6247, 0.6082,
        0.5778, 0.7700, 0.6298, 0.8670, 0.6643, 0.5679, 0.6746, 0.7698, 0.6633,
        0.6685, 0.7140, 0.7393, 0.7559, 0.7631, 0.6063, 0.6340, 0.6753, 0.7165,
        0.7411, 0.8942, 0.6956, 0.6359, 0.7100, 0.5487, 0.6222, 0.7411, 0.6762,
        0.6674, 0.7858, 0.5489, 0.6056, 0.8603, 0.8799, 0.7073, 0.7665, 0.7580,
        0.6759, 0.6362, 0.6353, 0.6453, 0.5748, 0.7417, 0.7064, 0.6184, 0.7992,
        0.6124, 0.7055, 0.7857, 0.8765, 0.8015, 0.7133, 0.7183, 0.7011, 0.7129,
        0.8607, 0.8031, 0.8885, 0.5049, 0.6778, 0.7846, 0.7405, 0.7825, 0.7820,
        0.7860, 0.7289, 0.7416, 0.5280, 0.6298, 0.7071, 0.5693, 0.8562, 0.7054,
        0.6387, 0.6361, 0.5701, 0.6042, 0.5910, 0.8749, 0.8721, 0.7418, 0.7241,
        0.8894, 0.8374, 0.6634, 0.5805, 0.7183, 0.7154, 0.6489, 0.7429, 0.7059,
        0.8985, 0.5581, 0.7588, 0.7602, 0.8625, 0.4723, 0.6488, 0.6939, 0.7650,
        0.7628, 0.8011, 0.7780, 0.6718, 0.6397, 0.7530, 0.5004, 0.8080, 0.7804,
        0.8652, 0.7562, 0.5456, 0.6694, 0.7338, 0.8142, 0.5457, 0.7840, 0.7349,
        0.8531, 0.8459, 0.7097, 0.5289, 0.6675, 0.5615, 0.6137, 0.7702, 0.5792,
        0.5889, 0.6226, 0.8338, 0.7369, 0.7687, 0.3901, 0.6476, 0.8375, 0.6019,
        0.4510, 0.5327, 0.8764, 0.7175, 0.7665, 0.6539, 0.7507, 0.5585, 0.6497,
        0.4118, 0.6918, 0.8873, 0.7513, 0.8100, 0.8462, 0.5216, 0.7129, 0.5569,
        0.5420, 0.6997, 0.7835, 0.8022, 0.4858, 0.5495, 0.7013, 0.7851, 0.5530,
        0.6382, 0.7150, 0.5692, 0.5229, 0.6887, 0.7626, 0.5513, 0.7086, 0.7705,
        0.4998, 0.4823, 0.7378, 0.8119, 0.6702, 0.7117, 0.8316, 0.5539, 0.3948,
        0.6825, 0.6295, 0.6077, 0.8671, 0.6510, 0.4299, 0.7642, 0.8976, 0.6330,
        0.6865, 0.7274, 0.8367, 0.8745, 0.5816, 0.6573, 0.7960, 0.5623, 0.6567,
        0.6715, 0.7593, 0.7549, 0.8954, 0.8407, 0.8738, 0.7309, 0.5548, 0.6285,
        0.6996, 0.7770, 0.6718, 0.7226, 0.7422, 0.7705, 0.6420, 0.7860, 0.5943,
        0.6423, 0.5698, 0.8516, 0.6203, 0.6454, 0.6778, 0.6695, 0.8546, 0.6954,
        0.5228, 0.5791, 0.5782, 0.6877, 0.5007, 0.6733, 0.7343, 0.8746, 0.8516,
        0.6498, 0.6610, 0.7474, 0.7773, 0.6963, 0.7191, 0.6168, 0.6079, 0.5524,
        0.6491, 0.7267, 0.5226, 0.6977, 0.7677, 0.8086, 0.4798, 0.5040, 0.5255,
        0.6964, 0.7047, 0.6842, 0.7731, 0.7224, 0.6633, 0.4287, 0.7900, 0.7464,
        0.7754, 0.8686, 0.7074, 0.8156, 0.5675, 0.7566, 0.5619, 0.8181, 0.7009,
        0.7074, 0.5651, 0.7567, 0.7386, 0.6492, 0.6639, 0.5397, 0.6442, 0.6824,
        0.7194, 0.7033, 0.7397, 0.7948, 0.8644, 0.8600, 0.6957, 0.6954, 0.6294,
        0.6472, 0.8697, 0.8129, 0.6395, 0.6143, 0.7262, 0.7794, 0.7932, 0.8737,
        0.4973, 0.7517, 0.6801, 0.7330, 0.5409, 0.8655, 0.6358, 0.7245, 0.8079,
        0.6347, 0.7220, 0.7015, 0.7388, 0.7119, 0.6398, 0.7079, 0.7470, 0.7205,
        0.7979, 0.8274, 0.6191, 0.6928, 0.7139, 0.7525, 0.8958, 0.8367, 0.7277,
        0.6115, 0.7565, 0.7322, 0.5706, 0.7437, 0.7833, 0.6993, 0.7179, 0.6943,
        0.6642, 0.9094, 0.6051, 0.5155, 0.5790, 0.6897, 0.7872, 0.7641, 0.7249,
        0.7412, 0.7081, 0.6098, 0.6623, 0.8831, 0.5442, 0.7751, 0.5345, 0.6726,
        0.7179, 0.8442, 0.6814, 0.6170, 0.7780, 0.7065, 0.7502, 0.7705, 0.6403,
        0.5493, 0.6080, 0.6379, 0.5643, 0.7150, 0.4818, 0.8421, 0.7521, 0.4141,
        0.6537, 0.6680, 0.6101, 0.7166, 0.8327, 0.6760, 0.4707, 0.6218, 0.8184,
        0.8904, 0.6850, 0.5444, 0.7156, 0.6210, 0.8956, 0.5558, 0.6771, 0.7273,
        0.8529, 0.8841, 0.6663, 0.8847, 0.7513, 0.5934, 0.2399, 0.5641, 0.5806,
        0.7923, 0.6008, 0.5724, 0.6711, 0.7375, 0.6433, 0.6971, 0.6966, 0.6633,
        0.7497, 0.5447, 0.7639, 0.6203, 0.6925, 0.6666, 0.6429, 0.6392, 0.6166,
        0.4895, 0.7506, 0.6226, 0.6253, 0.7052, 0.6894, 0.7264, 0.7190, 0.7144,
        0.5612, 0.7099, 0.7682, 0.5064, 0.6829, 0.5518, 0.8528, 0.8825, 0.8578,
        0.7321, 0.5849, 0.6498, 0.7303, 0.8676, 0.7676, 0.7096, 0.5598, 0.7385,
        0.7219, 0.6241, 0.6080, 0.6613, 0.7952, 0.8446, 0.6822, 0.7629, 0.7510,
        0.8221, 0.6270, 0.6871, 0.7720, 0.8851, 0.6836, 0.5574, 0.7138, 0.7684,
        0.7108, 0.8897, 0.7015, 0.6393, 0.5967, 0.7059, 0.7845, 0.6292, 0.6908,
        0.6639, 0.7326, 0.8548, 0.5329, 0.6366, 0.5024, 0.5248, 0.6716, 0.7659,
        0.7779, 0.7013, 0.6649, 0.7466, 0.7698, 0.8003, 0.6351, 0.6290, 0.5642,
        0.6758, 0.5167, 0.6129, 0.7183, 0.4775, 0.5408, 0.6466, 0.7247, 0.8302,
        0.6497, 0.6447, 0.6055, 0.5378, 0.6817, 0.5374, 0.5641, 0.6289, 0.6812,
        0.5791, 0.6476, 0.8308, 0.6994, 0.5614, 0.6217, 0.6000, 0.6577, 0.6319,
        0.6298, 0.7218, 0.7025, 0.7586, 0.6915, 0.6905, 0.7964, 0.8955, 0.6740,
        0.5889, 0.5901, 0.5814, 0.8624, 0.8401, 0.9035, 0.6409, 0.6217, 0.7641,
        0.6901, 0.8227, 0.8539, 0.6508, 0.8275, 0.6528, 0.7435, 0.7292, 0.6849,
        0.7771, 0.7495, 0.7053, 0.7384, 0.7282, 0.6504, 0.7181, 0.7629, 0.7871,
        0.8539, 0.6841, 0.7609, 0.5766, 0.6916, 0.6157, 0.8690, 0.6042, 0.6240,
        0.7455, 0.7383, 0.5899, 0.6526, 0.6995, 0.6390, 0.6567, 0.6786, 0.5580,
        0.6332, 0.5569, 0.7112, 0.7409, 0.6036, 0.6105, 0.8257, 0.7110, 0.7398,
        0.8574, 0.7062, 0.7941, 0.7749, 0.6936, 0.8049, 0.6580, 0.7504, 0.6581,
        0.6928, 0.7359, 0.6545, 0.6953, 0.7436, 0.6476, 0.6770, 0.5491, 0.5441,
        0.8243, 0.6547, 0.5988, 0.7063, 0.6652, 0.7515, 0.7435, 0.7260, 0.7031,
        0.6561, 0.5450, 0.8641, 0.6867, 0.7613, 0.7012, 0.7373, 0.7822, 0.8613,
        0.7058, 0.7975, 0.6222, 0.6454, 0.8036, 0.7242, 0.8421, 0.6433, 0.8755,
        0.8539, 0.6923, 0.7629, 0.5960, 0.7240, 0.8257, 0.8864, 0.6500, 0.8521,
        0.6632, 0.6602, 0.6093, 0.7908, 0.5291, 0.6721, 0.4669, 0.6098, 0.5615,
        0.6695, 0.8159], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(505.8132, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([731, 1])
Inertia: tensor([151.3586], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([731, 1280])
Centroid_list: tensor([[ 0.0084, -0.0579, -0.0356,  ..., -0.0657,  0.0828, -0.0010],
        [ 0.0084, -0.0579, -0.0356,  ..., -0.0657,  0.0828, -0.0010],
        [ 0.0084, -0.0579, -0.0356,  ..., -0.0657,  0.0828, -0.0010],
        ...,
        [ 0.0084, -0.0579, -0.0356,  ..., -0.0657,  0.0828, -0.0010],
        [ 0.0084, -0.0579, -0.0356,  ..., -0.0657,  0.0828, -0.0010],
        [-0.0475, -0.0593, -0.0551,  ..., -0.0467,  0.0846, -0.2573]],
       device='cuda:0')
Computed C_score: tensor([0.7210, 0.5474, 0.7262, 0.7548, 0.6978, 0.6493, 0.4822, 0.8396, 0.8685,
        0.8358, 0.6970, 0.7056, 0.8275, 0.5593, 0.7135, 0.8455, 0.6623, 0.6084,
        0.5536, 0.6978, 0.4512, 0.5940, 0.7224, 0.6561, 0.5546, 0.5275, 0.5971,
        0.8098, 0.8256, 0.8825, 0.6491, 0.6470, 0.6623, 0.7280, 0.8296, 0.6167,
        0.7305, 0.6848, 0.8022, 0.6396, 0.6490, 0.7008, 0.6951, 0.5779, 0.6949,
        0.7385, 0.5407, 0.5447, 0.6452, 0.6394, 0.7388, 0.6656, 0.8246, 0.8527,
        0.5878, 0.7231, 0.8604, 0.8320, 0.6712, 0.8940, 0.7880, 0.7159, 0.8934,
        0.7735, 0.7528, 0.8497, 0.9200, 0.7447, 0.5101, 0.7372, 0.6523, 0.8744,
        0.7233, 0.8357, 0.6674, 0.5892, 0.6677, 0.6659, 0.8539, 0.6554, 0.7649,
        0.6978, 0.6884, 0.6852, 0.5965, 0.6092, 0.9027, 0.7036, 0.6929, 0.6104,
        0.6325, 0.8603, 0.6158, 0.8789, 0.6477, 0.5830, 0.7047, 0.7769, 0.6940,
        0.6544, 0.7806, 0.7340, 0.8586, 0.8422, 0.6626, 0.6892, 0.7102, 0.8758,
        0.7541, 0.9061, 0.8014, 0.6327, 0.7131, 0.5723, 0.6478, 0.8190, 0.6990,
        0.7109, 0.7862, 0.5410, 0.6221, 0.8632, 0.8708, 0.7988, 0.8030, 0.8207,
        0.8086, 0.6334, 0.6981, 0.6159, 0.6109, 0.7907, 0.7845, 0.6323, 0.7862,
        0.6319, 0.8267, 0.8248, 0.8909, 0.7938, 0.7523, 0.8304, 0.7297, 0.7413,
        0.8426, 0.8324, 0.8993, 0.5494, 0.6624, 0.7908, 0.7839, 0.7863, 0.7853,
        0.8594, 0.7136, 0.9129, 0.5832, 0.6940, 0.8259, 0.5722, 0.8698, 0.6725,
        0.6311, 0.6192, 0.5734, 0.7006, 0.6426, 0.8863, 0.8696, 0.8323, 0.7480,
        0.9007, 0.8358, 0.7023, 0.6128, 0.6847, 0.7336, 0.6595, 0.7756, 0.8338,
        0.9069, 0.6251, 0.8750, 0.8046, 0.8623, 0.5336, 0.7027, 0.6772, 0.8139,
        0.8613, 0.7956, 0.8761, 0.6548, 0.6587, 0.7529, 0.5384, 0.8038, 0.7741,
        0.8712, 0.9235, 0.5057, 0.7062, 0.7205, 0.8165, 0.6179, 0.8456, 0.7470,
        0.8387, 0.8520, 0.8406, 0.5267, 0.7092, 0.6091, 0.6061, 0.7529, 0.5938,
        0.6774, 0.6312, 0.8508, 0.7324, 0.7661, 0.4151, 0.6490, 0.8364, 0.5976,
        0.4782, 0.5464, 0.8812, 0.7855, 0.8319, 0.6454, 0.7298, 0.5789, 0.6920,
        0.4261, 0.7072, 0.8895, 0.7236, 0.8040, 0.8564, 0.5324, 0.7688, 0.6252,
        0.5261, 0.6928, 0.7846, 0.8180, 0.4689, 0.5524, 0.6869, 0.8683, 0.5807,
        0.7145, 0.8347, 0.5596, 0.5005, 0.7598, 0.8858, 0.5736, 0.7010, 0.8314,
        0.5424, 0.5500, 0.7544, 0.8057, 0.6873, 0.8187, 0.8743, 0.5820, 0.4298,
        0.7080, 0.6304, 0.6023, 0.8787, 0.7186, 0.4801, 0.7317, 0.9063, 0.6760,
        0.6599, 0.7770, 0.8471, 0.8871, 0.6199, 0.6921, 0.7999, 0.6416, 0.6410,
        0.6816, 0.7727, 0.8570, 0.9097, 0.8506, 0.8894, 0.7284, 0.5906, 0.6797,
        0.6975, 0.8361, 0.7098, 0.7636, 0.7504, 0.7705, 0.6142, 0.7784, 0.6602,
        0.6872, 0.6283, 0.8351, 0.6221, 0.6715, 0.7202, 0.6482, 0.8651, 0.7651,
        0.5129, 0.6000, 0.5956, 0.7368, 0.5667, 0.6515, 0.7178, 0.8774, 0.8502,
        0.6567, 0.6928, 0.7500, 0.7580, 0.6686, 0.7224, 0.6694, 0.5920, 0.5481,
        0.6658, 0.7000, 0.5701, 0.8333, 0.8405, 0.8137, 0.4946, 0.4778, 0.5449,
        0.7396, 0.7271, 0.6701, 0.8784, 0.7063, 0.6765, 0.4929, 0.8395, 0.9009,
        0.7684, 0.8712, 0.7050, 0.8172, 0.6075, 0.8887, 0.5431, 0.8522, 0.7390,
        0.6811, 0.5723, 0.7624, 0.7654, 0.6913, 0.7118, 0.5780, 0.6847, 0.6510,
        0.8406, 0.8226, 0.7592, 0.8021, 0.8658, 0.8629, 0.6950, 0.7339, 0.6534,
        0.6395, 0.8649, 0.8485, 0.6830, 0.6501, 0.8727, 0.8686, 0.7975, 0.8802,
        0.5285, 0.7093, 0.7336, 0.7211, 0.5360, 0.8733, 0.6878, 0.8073, 0.8586,
        0.7050, 0.7819, 0.6907, 0.7735, 0.7166, 0.6787, 0.7303, 0.8730, 0.7654,
        0.7577, 0.8374, 0.6794, 0.7203, 0.8156, 0.7638, 0.9019, 0.8536, 0.7281,
        0.6653, 0.8289, 0.7246, 0.6751, 0.7375, 0.8378, 0.7357, 0.7130, 0.6832,
        0.6958, 0.9232, 0.6168, 0.5411, 0.6146, 0.6568, 0.8192, 0.7585, 0.7261,
        0.8048, 0.7540, 0.6415, 0.7083, 0.8914, 0.5379, 0.8106, 0.5501, 0.6517,
        0.7684, 0.8481, 0.7027, 0.6108, 0.8987, 0.8437, 0.8246, 0.7521, 0.6648,
        0.5765, 0.6254, 0.6148, 0.6297, 0.7155, 0.5408, 0.8568, 0.7545, 0.4106,
        0.6804, 0.6889, 0.6886, 0.7545, 0.8350, 0.6991, 0.5274, 0.6284, 0.8146,
        0.8973, 0.6841, 0.5503, 0.6916, 0.6783, 0.9000, 0.6279, 0.7815, 0.7361,
        0.8685, 0.8962, 0.6727, 0.8979, 0.7569, 0.6216, 0.2416, 0.5721, 0.5969,
        0.8062, 0.6610, 0.6325, 0.6574, 0.6953, 0.6585, 0.6972, 0.7476, 0.6565,
        0.7674, 0.5627, 0.8061, 0.6718, 0.7045, 0.8315, 0.6618, 0.6839, 0.6579,
        0.5131, 0.9000, 0.7082, 0.6476, 0.7139, 0.7211, 0.8284, 0.7131, 0.7754,
        0.6244, 0.7104, 0.7249, 0.5054, 0.6682, 0.5828, 0.8335, 0.8760, 0.8504,
        0.7341, 0.6239, 0.6572, 0.7663, 0.8737, 0.8717, 0.8291, 0.5832, 0.8593,
        0.8063, 0.6416, 0.6290, 0.6780, 0.7848, 0.8294, 0.7073, 0.8670, 0.7487,
        0.8088, 0.6623, 0.8052, 0.8503, 0.8931, 0.6544, 0.5605, 0.7360, 0.7841,
        0.6696, 0.9018, 0.7118, 0.6181, 0.6157, 0.7306, 0.8568, 0.6921, 0.6572,
        0.6331, 0.7504, 0.8568, 0.5598, 0.6390, 0.4536, 0.5405, 0.7123, 0.8332,
        0.8596, 0.8229, 0.6462, 0.7354, 0.7745, 0.8733, 0.6883, 0.7020, 0.5894,
        0.8111, 0.5510, 0.6278, 0.7206, 0.5104, 0.5403, 0.6500, 0.8471, 0.7977,
        0.6400, 0.6719, 0.5919, 0.5572, 0.7024, 0.5947, 0.5590, 0.6659, 0.8501,
        0.5749, 0.6651, 0.8334, 0.7353, 0.5932, 0.6374, 0.6254, 0.7859, 0.5873,
        0.6290, 0.7303, 0.7462, 0.8316, 0.8028, 0.7481, 0.8128, 0.9003, 0.6599,
        0.6190, 0.5931, 0.5751, 0.8846, 0.8429, 0.8999, 0.6621, 0.6494, 0.8195,
        0.6932, 0.8250, 0.8548, 0.6892, 0.8161, 0.7058, 0.8862, 0.7371, 0.6804,
        0.7508, 0.7870, 0.8178, 0.7282, 0.7460, 0.7060, 0.6791, 0.8177, 0.7802,
        0.8443, 0.7001, 0.8418, 0.5864, 0.7410, 0.6078, 0.8727, 0.6182, 0.6674,
        0.7691, 0.6921, 0.5897, 0.6679, 0.6714, 0.6653, 0.6646, 0.6781, 0.6014,
        0.7149, 0.6142, 0.7621, 0.7345, 0.6529, 0.6060, 0.8294, 0.7279, 0.8258,
        0.8736, 0.7000, 0.8306, 0.7745, 0.7310, 0.8145, 0.7042, 0.7565, 0.6614,
        0.7051, 0.8566, 0.6978, 0.6902, 0.7458, 0.6336, 0.6424, 0.6724, 0.5792,
        0.8258, 0.7640, 0.6031, 0.7539, 0.6720, 0.7111, 0.8057, 0.7728, 0.8275,
        0.6556, 0.6119, 0.8647, 0.7367, 0.8681, 0.6826, 0.7239, 0.8634, 0.8629,
        0.7158, 0.8102, 0.6137, 0.6880, 0.8926, 0.7265, 0.8327, 0.5883, 0.8818,
        0.8665, 0.7092, 0.8357, 0.6416, 0.8129, 0.8351, 0.8814, 0.7109, 0.8631,
        0.6667, 0.7088, 0.6190, 0.7862, 0.5756, 0.6775, 0.5214, 0.6772, 0.6234,
        0.7297, 0.8287], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(526.5814, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([731, 1])
Inertia: tensor([152.7268], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([731, 1280])
Centroid_list: tensor([[ 0.0103, -0.0596, -0.0356,  ..., -0.0654,  0.0825,  0.0168],
        [ 0.0103, -0.0596, -0.0356,  ..., -0.0654,  0.0825,  0.0168],
        [ 0.0103, -0.0596, -0.0356,  ..., -0.0654,  0.0825,  0.0168],
        ...,
        [ 0.0103, -0.0596, -0.0356,  ..., -0.0654,  0.0825,  0.0168],
        [ 0.0103, -0.0596, -0.0356,  ..., -0.0654,  0.0825,  0.0168],
        [-0.0613, -0.0644, -0.0601,  ..., -0.0368,  0.0815, -0.2494]],
       device='cuda:0')
Computed C_score: tensor([0.7183, 0.5591, 0.7195, 0.7532, 0.7027, 0.6455, 0.4771, 0.8421, 0.8767,
        0.7939, 0.6952, 0.8022, 0.8874, 0.5588, 0.6965, 0.8442, 0.6603, 0.6130,
        0.5573, 0.6942, 0.4520, 0.6768, 0.7320, 0.6310, 0.6288, 0.7188, 0.6584,
        0.8043, 0.8602, 0.8878, 0.6559, 0.6538, 0.6621, 0.7344, 0.8267, 0.6299,
        0.7355, 0.7379, 0.8071, 0.6489, 0.6382, 0.7152, 0.7005, 0.5834, 0.6901,
        0.7457, 0.5481, 0.5345, 0.6352, 0.6496, 0.7442, 0.6689, 0.8285, 0.8555,
        0.5981, 0.7281, 0.8652, 0.8233, 0.6884, 0.8973, 0.7882, 0.7800, 0.9103,
        0.7789, 0.7532, 0.8092, 0.8904, 0.7543, 0.5059, 0.7459, 0.6446, 0.8750,
        0.7292, 0.8314, 0.6641, 0.5805, 0.6757, 0.6669, 0.8558, 0.6448, 0.7574,
        0.6737, 0.7021, 0.6860, 0.6075, 0.6076, 0.9217, 0.7085, 0.6946, 0.6020,
        0.6164, 0.8652, 0.6145, 0.8599, 0.6496, 0.5803, 0.7575, 0.7739, 0.6916,
        0.7835, 0.7869, 0.7952, 0.8586, 0.8455, 0.6701, 0.6916, 0.7137, 0.8792,
        0.7557, 0.8856, 0.7973, 0.6196, 0.7274, 0.6863, 0.6364, 0.8243, 0.6779,
        0.7247, 0.8538, 0.5187, 0.6240, 0.8280, 0.8389, 0.7978, 0.8083, 0.8230,
        0.8166, 0.6642, 0.7072, 0.6144, 0.6214, 0.7844, 0.7815, 0.6220, 0.7879,
        0.6388, 0.8312, 0.8201, 0.9297, 0.7940, 0.7510, 0.8404, 0.7369, 0.7481,
        0.8327, 0.8349, 0.8651, 0.5406, 0.6614, 0.8474, 0.7798, 0.8492, 0.8110,
        0.8572, 0.7168, 0.9157, 0.5639, 0.6915, 0.8291, 0.5640, 0.8286, 0.7019,
        0.7628, 0.6279, 0.5835, 0.6902, 0.6417, 0.9467, 0.8740, 0.8334, 0.7539,
        0.9411, 0.8996, 0.7206, 0.5946, 0.6828, 0.7190, 0.6635, 0.7806, 0.8343,
        0.9384, 0.6249, 0.8781, 0.8042, 0.8967, 0.5981, 0.6963, 0.7288, 0.8093,
        0.8569, 0.8219, 0.8782, 0.6759, 0.6595, 0.7593, 0.5952, 0.8343, 0.7674,
        0.9332, 0.9229, 0.6942, 0.6959, 0.7253, 0.8934, 0.6330, 0.8506, 0.7467,
        0.8218, 0.9205, 0.8466, 0.5332, 0.7229, 0.6036, 0.5824, 0.7484, 0.5929,
        0.6694, 0.6245, 0.8588, 0.7924, 0.8177, 0.4159, 0.7145, 0.8495, 0.5936,
        0.4809, 0.6617, 0.9208, 0.7863, 0.8336, 0.6326, 0.7351, 0.5848, 0.6946,
        0.4381, 0.7151, 0.8698, 0.7258, 0.8207, 0.8548, 0.5391, 0.7684, 0.6295,
        0.5173, 0.6981, 0.8294, 0.7784, 0.6155, 0.5507, 0.6893, 0.8719, 0.5835,
        0.7190, 0.8349, 0.7113, 0.5313, 0.7639, 0.8913, 0.5732, 0.7047, 0.8337,
        0.6795, 0.5619, 0.7513, 0.8275, 0.6920, 0.8215, 0.8703, 0.5890, 0.4257,
        0.7002, 0.6196, 0.6027, 0.9343, 0.7191, 0.4802, 0.7334, 0.9322, 0.6742,
        0.6559, 0.7865, 0.9162, 0.8855, 0.6378, 0.6886, 0.8875, 0.6388, 0.6689,
        0.6788, 0.7623, 0.8528, 0.8829, 0.8540, 0.8680, 0.7442, 0.5844, 0.6858,
        0.7192, 0.8357, 0.7151, 0.7579, 0.7623, 0.7767, 0.6185, 0.7650, 0.6671,
        0.6947, 0.6268, 0.8122, 0.5930, 0.6584, 0.7275, 0.6225, 0.9268, 0.7603,
        0.5182, 0.6470, 0.5933, 0.7360, 0.5686, 0.6554, 0.7244, 0.8781, 0.8824,
        0.6455, 0.6946, 0.7432, 0.7254, 0.7666, 0.7372, 0.6819, 0.5859, 0.5410,
        0.6504, 0.6946, 0.5711, 0.8426, 0.8466, 0.8287, 0.5063, 0.6045, 0.5363,
        0.7454, 0.7295, 0.6818, 0.8820, 0.7123, 0.6767, 0.4897, 0.8399, 0.9030,
        0.7933, 0.8769, 0.7313, 0.8923, 0.6170, 0.8846, 0.6765, 0.8529, 0.7458,
        0.6540, 0.5751, 0.7613, 0.7729, 0.6966, 0.7131, 0.5760, 0.6914, 0.6514,
        0.8416, 0.8330, 0.7638, 0.7991, 0.9092, 0.9275, 0.7033, 0.7281, 0.6357,
        0.6583, 0.9150, 0.8478, 0.6877, 0.6434, 0.8737, 0.8670, 0.8585, 0.9235,
        0.5369, 0.7090, 0.7489, 0.8195, 0.5230, 0.8710, 0.6944, 0.8122, 0.8603,
        0.7121, 0.7766, 0.7738, 0.7728, 0.7212, 0.6816, 0.7429, 0.8677, 0.7647,
        0.7591, 0.8350, 0.6801, 0.7130, 0.8137, 0.7476, 0.9440, 0.8036, 0.7277,
        0.6666, 0.8330, 0.7531, 0.6695, 0.8434, 0.8377, 0.7399, 0.7199, 0.8005,
        0.7109, 0.9517, 0.6081, 0.5264, 0.6139, 0.6627, 0.8129, 0.7460, 0.7269,
        0.7984, 0.7469, 0.6456, 0.6990, 0.9231, 0.5398, 0.8119, 0.5502, 0.6921,
        0.7575, 0.9032, 0.7073, 0.6162, 0.9006, 0.8536, 0.8258, 0.7543, 0.6755,
        0.5735, 0.6170, 0.6125, 0.6423, 0.7148, 0.5513, 0.8616, 0.7139, 0.4903,
        0.6901, 0.6900, 0.6981, 0.7655, 0.9025, 0.7085, 0.5302, 0.6664, 0.8517,
        0.9463, 0.6787, 0.5467, 0.7571, 0.6847, 0.9420, 0.6335, 0.7841, 0.6942,
        0.8379, 0.9382, 0.6563, 0.8747, 0.7587, 0.6225, 0.2970, 0.5651, 0.5870,
        0.8042, 0.6639, 0.6427, 0.6641, 0.6942, 0.6601, 0.8445, 0.7389, 0.6792,
        0.7567, 0.5617, 0.8102, 0.6862, 0.7012, 0.8341, 0.6502, 0.6881, 0.6892,
        0.5069, 0.8986, 0.7207, 0.6581, 0.7573, 0.7272, 0.8314, 0.7167, 0.7635,
        0.6305, 0.8278, 0.7210, 0.5090, 0.6733, 0.5669, 0.8076, 0.8481, 0.8277,
        0.7341, 0.7116, 0.6450, 0.7683, 0.9370, 0.8707, 0.8353, 0.5777, 0.8603,
        0.8041, 0.6408, 0.6214, 0.6683, 0.8188, 0.8420, 0.7059, 0.8649, 0.7543,
        0.8745, 0.6639, 0.8157, 0.8413, 0.9274, 0.6638, 0.5592, 0.7484, 0.7910,
        0.6739, 0.9225, 0.7093, 0.6165, 0.6161, 0.7309, 0.8606, 0.6752, 0.7623,
        0.7411, 0.7282, 0.8947, 0.5663, 0.7125, 0.5602, 0.5770, 0.7071, 0.8388,
        0.8562, 0.8188, 0.6488, 0.7943, 0.7857, 0.8681, 0.7056, 0.7007, 0.5841,
        0.8195, 0.5375, 0.6340, 0.7251, 0.5309, 0.5413, 0.7616, 0.8513, 0.7942,
        0.6309, 0.6742, 0.5960, 0.5589, 0.7028, 0.6051, 0.5532, 0.6568, 0.8600,
        0.5893, 0.6611, 0.8101, 0.7430, 0.6033, 0.6388, 0.6292, 0.7878, 0.5899,
        0.6327, 0.7218, 0.7501, 0.8367, 0.8031, 0.7516, 0.8123, 0.9521, 0.7084,
        0.6228, 0.6159, 0.5814, 0.8496, 0.9072, 0.8696, 0.6506, 0.6472, 0.8205,
        0.7709, 0.8725, 0.8881, 0.6903, 0.8113, 0.7204, 0.8934, 0.7293, 0.6692,
        0.7391, 0.7846, 0.8240, 0.7232, 0.7495, 0.7186, 0.6749, 0.8178, 0.8475,
        0.8920, 0.7108, 0.8381, 0.5755, 0.7246, 0.5995, 0.8523, 0.6174, 0.6564,
        0.7752, 0.7016, 0.5863, 0.6614, 0.6629, 0.6659, 0.6662, 0.7270, 0.6042,
        0.7258, 0.6070, 0.7622, 0.7972, 0.6539, 0.6692, 0.8669, 0.7232, 0.8313,
        0.9098, 0.8599, 0.8284, 0.7740, 0.7362, 0.8481, 0.7084, 0.8155, 0.7345,
        0.7114, 0.8602, 0.6806, 0.6831, 0.8657, 0.6294, 0.6386, 0.6652, 0.6243,
        0.8277, 0.7753, 0.6113, 0.7585, 0.6682, 0.7085, 0.8076, 0.7799, 0.8282,
        0.6888, 0.6236, 0.9046, 0.7513, 0.8702, 0.6840, 0.7250, 0.8650, 0.8267,
        0.7100, 0.7938, 0.6139, 0.6919, 0.8962, 0.7302, 0.8249, 0.7540, 0.9376,
        0.8873, 0.7545, 0.8377, 0.6397, 0.8148, 0.9123, 0.8691, 0.7084, 0.8601,
        0.6710, 0.7052, 0.6232, 0.7861, 0.5836, 0.6825, 0.5173, 0.6809, 0.6257,
        0.7246, 0.9087], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(534.6136, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([731, 1])
Inertia: tensor([140.3841], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([731, 1280])
Centroid_list: tensor([[ 0.0164, -0.0569, -0.0276,  ..., -0.0844,  0.0777,  0.1398],
        [ 0.0164, -0.0569, -0.0276,  ..., -0.0844,  0.0777,  0.1398],
        [-0.0060, -0.0619, -0.0493,  ..., -0.0378,  0.0891, -0.2050],
        ...,
        [ 0.0164, -0.0569, -0.0276,  ..., -0.0844,  0.0777,  0.1398],
        [ 0.0164, -0.0569, -0.0276,  ..., -0.0844,  0.0777,  0.1398],
        [-0.0626, -0.0634, -0.0599,  ..., -0.0368,  0.0809, -0.2411]],
       device='cuda:0')
Computed C_score: tensor([0.7451, 0.5965, 0.7587, 0.7501, 0.7067, 0.6998, 0.6377, 0.8428, 0.8755,
        0.7988, 0.6738, 0.8063, 0.8880, 0.5905, 0.7011, 0.8430, 0.6522, 0.6154,
        0.6121, 0.6936, 0.4985, 0.7190, 0.7782, 0.6207, 0.6135, 0.7274, 0.6429,
        0.8096, 0.8578, 0.8867, 0.7385, 0.6995, 0.6442, 0.7485, 0.8207, 0.7148,
        0.7372, 0.7208, 0.8022, 0.7024, 0.6783, 0.6836, 0.7205, 0.5731, 0.7959,
        0.8023, 0.6265, 0.5310, 0.6854, 0.6626, 0.7864, 0.7199, 0.8481, 0.8570,
        0.6476, 0.7652, 0.8698, 0.8161, 0.6548, 0.8957, 0.7880, 0.7829, 0.9088,
        0.7699, 0.7559, 0.8065, 0.8949, 0.7288, 0.5785, 0.7415, 0.6853, 0.8772,
        0.7204, 0.8379, 0.7045, 0.6635, 0.6651, 0.6512, 0.8632, 0.6704, 0.7670,
        0.6268, 0.7583, 0.6668, 0.5990, 0.7345, 0.9231, 0.7064, 0.7033, 0.7382,
        0.6063, 0.8700, 0.7799, 0.8650, 0.6193, 0.6647, 0.7632, 0.7735, 0.7470,
        0.8122, 0.7440, 0.7771, 0.8644, 0.8405, 0.6744, 0.7522, 0.7267, 0.8858,
        0.7568, 0.8873, 0.7973, 0.6642, 0.6879, 0.7090, 0.7516, 0.8237, 0.6762,
        0.6895, 0.8702, 0.5295, 0.7290, 0.8290, 0.8419, 0.8031, 0.8029, 0.8179,
        0.8179, 0.6159, 0.7945, 0.6923, 0.6225, 0.7886, 0.7812, 0.7167, 0.7811,
        0.6135, 0.8384, 0.8222, 0.9288, 0.7931, 0.7808, 0.8368, 0.7318, 0.7585,
        0.8328, 0.7837, 0.8699, 0.5398, 0.6755, 0.8417, 0.7796, 0.8440, 0.8098,
        0.8609, 0.8346, 0.9208, 0.6248, 0.7369, 0.8362, 0.6912, 0.8322, 0.8052,
        0.8053, 0.6279, 0.6081, 0.6949, 0.6817, 0.9438, 0.8780, 0.8382, 0.7289,
        0.9396, 0.8959, 0.7000, 0.6255, 0.6717, 0.7364, 0.7078, 0.7754, 0.8422,
        0.9375, 0.6936, 0.8857, 0.8067, 0.8946, 0.6275, 0.6984, 0.7032, 0.8149,
        0.8599, 0.8281, 0.8849, 0.6773, 0.6688, 0.7201, 0.6366, 0.8271, 0.7750,
        0.9301, 0.9308, 0.7288, 0.6974, 0.7787, 0.9029, 0.6974, 0.8469, 0.7370,
        0.8253, 0.9181, 0.8417, 0.5719, 0.7224, 0.5779, 0.6217, 0.8009, 0.5635,
        0.6712, 0.6822, 0.8629, 0.7774, 0.8463, 0.4024, 0.7117, 0.8300, 0.6830,
        0.5143, 0.6937, 0.9171, 0.7944, 0.8308, 0.6513, 0.7824, 0.6239, 0.6622,
        0.4941, 0.7563, 0.8727, 0.7140, 0.8363, 0.8542, 0.6144, 0.7505, 0.6988,
        0.6842, 0.7511, 0.8265, 0.7843, 0.6158, 0.6774, 0.7421, 0.8764, 0.6851,
        0.7154, 0.8438, 0.7425, 0.5995, 0.7626, 0.8942, 0.6911, 0.6982, 0.8316,
        0.7219, 0.5955, 0.7138, 0.8212, 0.7458, 0.8272, 0.8733, 0.5976, 0.4167,
        0.6948, 0.7251, 0.5740, 0.9321, 0.7489, 0.5282, 0.7240, 0.9339, 0.7517,
        0.6567, 0.8071, 0.9130, 0.8911, 0.6621, 0.6715, 0.8832, 0.6804, 0.6482,
        0.6797, 0.7645, 0.8596, 0.8861, 0.8481, 0.8730, 0.7451, 0.6896, 0.7428,
        0.7354, 0.8385, 0.6922, 0.8495, 0.7402, 0.7334, 0.6129, 0.7664, 0.6213,
        0.7486, 0.7191, 0.8140, 0.6898, 0.7541, 0.7535, 0.6463, 0.9244, 0.7646,
        0.5989, 0.6678, 0.5961, 0.7093, 0.5929, 0.7287, 0.7914, 0.8642, 0.8796,
        0.7209, 0.7328, 0.7672, 0.7155, 0.8009, 0.7074, 0.7234, 0.6692, 0.6786,
        0.7220, 0.7342, 0.5828, 0.8419, 0.8417, 0.8356, 0.5785, 0.6083, 0.5431,
        0.7555, 0.7876, 0.7069, 0.8862, 0.6942, 0.7994, 0.6103, 0.8431, 0.9084,
        0.7924, 0.8853, 0.7157, 0.8912, 0.6585, 0.8929, 0.7089, 0.8486, 0.7117,
        0.6898, 0.6992, 0.7785, 0.7257, 0.7785, 0.6804, 0.5891, 0.7233, 0.7902,
        0.8486, 0.8355, 0.7569, 0.7969, 0.9073, 0.9237, 0.6845, 0.7284, 0.6743,
        0.7406, 0.9117, 0.8487, 0.6840, 0.6742, 0.8769, 0.8684, 0.8534, 0.9208,
        0.5749, 0.7049, 0.8106, 0.8020, 0.6675, 0.8656, 0.7748, 0.8022, 0.8590,
        0.7055, 0.7731, 0.7720, 0.7666, 0.6791, 0.7633, 0.7792, 0.8769, 0.7615,
        0.7669, 0.8241, 0.7022, 0.7257, 0.8199, 0.7329, 0.9425, 0.8096, 0.7871,
        0.6551, 0.8309, 0.7653, 0.6734, 0.8496, 0.8356, 0.7818, 0.7489, 0.8309,
        0.6747, 0.9516, 0.6619, 0.5748, 0.7096, 0.7110, 0.8135, 0.7453, 0.6891,
        0.8030, 0.8092, 0.7718, 0.7057, 0.9202, 0.6314, 0.8102, 0.5444, 0.7025,
        0.7635, 0.8994, 0.7323, 0.6280, 0.9022, 0.8515, 0.8246, 0.7447, 0.7219,
        0.5901, 0.6281, 0.7731, 0.7283, 0.6946, 0.5731, 0.8658, 0.7207, 0.5108,
        0.6801, 0.7324, 0.7623, 0.7594, 0.8981, 0.7002, 0.5234, 0.6604, 0.8377,
        0.9447, 0.6758, 0.5659, 0.7256, 0.6367, 0.9421, 0.6148, 0.7784, 0.7104,
        0.8448, 0.9371, 0.6442, 0.8780, 0.7569, 0.6958, 0.2578, 0.5975, 0.6663,
        0.8068, 0.6439, 0.6427, 0.6430, 0.7214, 0.7288, 0.8633, 0.7173, 0.6990,
        0.8070, 0.5667, 0.8038, 0.6729, 0.7986, 0.8339, 0.6908, 0.7089, 0.7252,
        0.6001, 0.9056, 0.7333, 0.7423, 0.7370, 0.7303, 0.8328, 0.6873, 0.7694,
        0.6892, 0.8511, 0.7174, 0.5592, 0.7183, 0.6467, 0.7974, 0.8484, 0.8290,
        0.7881, 0.7431, 0.7077, 0.7728, 0.9341, 0.8741, 0.8330, 0.6822, 0.8625,
        0.8070, 0.7141, 0.7161, 0.6417, 0.8156, 0.8410, 0.6984, 0.8712, 0.7550,
        0.8775, 0.7310, 0.8188, 0.8460, 0.9252, 0.7270, 0.6706, 0.7368, 0.7815,
        0.7128, 0.9249, 0.7025, 0.6087, 0.6106, 0.7416, 0.8643, 0.6545, 0.7658,
        0.7343, 0.7194, 0.8937, 0.6136, 0.6810, 0.5581, 0.5982, 0.7169, 0.8381,
        0.8626, 0.8254, 0.6527, 0.7903, 0.7936, 0.8733, 0.7197, 0.7784, 0.6120,
        0.8213, 0.5196, 0.6279, 0.7564, 0.5559, 0.6233, 0.7764, 0.8612, 0.7917,
        0.6933, 0.7216, 0.6466, 0.7049, 0.7770, 0.6587, 0.5865, 0.6483, 0.8635,
        0.5725, 0.6486, 0.8113, 0.7704, 0.6796, 0.6561, 0.6090, 0.7849, 0.5726,
        0.7635, 0.6933, 0.7561, 0.8396, 0.8069, 0.7218, 0.8053, 0.9515, 0.7273,
        0.6449, 0.6609, 0.6902, 0.8540, 0.9041, 0.8560, 0.7342, 0.7024, 0.8210,
        0.7906, 0.8621, 0.8878, 0.7172, 0.8110, 0.7394, 0.8938, 0.7315, 0.7093,
        0.7758, 0.7886, 0.8322, 0.7168, 0.7417, 0.7224, 0.7189, 0.8184, 0.8430,
        0.8883, 0.7203, 0.8405, 0.6757, 0.7291, 0.7388, 0.8555, 0.7560, 0.6789,
        0.7914, 0.7230, 0.6129, 0.6597, 0.7859, 0.6372, 0.6978, 0.7295, 0.5983,
        0.7539, 0.6249, 0.7518, 0.8071, 0.6737, 0.6969, 0.8520, 0.7792, 0.8258,
        0.9083, 0.8885, 0.8245, 0.7781, 0.7561, 0.8363, 0.6808, 0.8474, 0.7526,
        0.7383, 0.8575, 0.6945, 0.7209, 0.8915, 0.6819, 0.6286, 0.6681, 0.6246,
        0.8303, 0.7739, 0.6562, 0.7468, 0.8196, 0.7422, 0.8065, 0.7426, 0.8362,
        0.6599, 0.6429, 0.9006, 0.7755, 0.8660, 0.7397, 0.7265, 0.8708, 0.8329,
        0.6953, 0.7983, 0.5954, 0.6659, 0.8993, 0.6854, 0.8268, 0.7680, 0.9351,
        0.8870, 0.7721, 0.8405, 0.6598, 0.8117, 0.9085, 0.8697, 0.6826, 0.8571,
        0.6575, 0.6938, 0.6193, 0.7940, 0.6108, 0.7850, 0.5722, 0.7078, 0.6955,
        0.7057, 0.9044], device='cuda:0', grad_fn=<SumBackward1>)
Sum: tensor(547.4392, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0013, 0.0038, 0.0074, 0.0117], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(2, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([5179, 1280])
S-Scores: tensor([0.6593, 1.9576, 4.0361, 6.4091], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([5179, 1])
Inertia: tensor([336.5396], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([5179, 1280])
Centroid_list: tensor([[-0.0499, -0.0570, -0.0539,  ..., -0.0559,  0.0770, -0.3802],
        [-0.0499, -0.0570, -0.0539,  ..., -0.0559,  0.0770, -0.3802],
        [-0.0534, -0.0481, -0.0766,  ..., -0.0587,  0.0457, -0.4629],
        ...,
        [-0.0499, -0.0570, -0.0539,  ..., -0.0559,  0.0770, -0.3802],
        [-0.0534, -0.0481, -0.0766,  ..., -0.0587,  0.0457, -0.4629],
        [-0.0499, -0.0570, -0.0539,  ..., -0.0559,  0.0770, -0.3802]],
       device='cuda:0')
Computed C_score: tensor([0.7595, 0.7320, 0.7876,  ..., 0.6848, 0.7638, 0.8422], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3741.3960, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5179, 1])
Inertia: tensor([287.4769], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([5179, 1280])
Centroid_list: tensor([[-0.0501, -0.0549, -0.0530,  ..., -0.0489,  0.0794, -0.3105],
        [-0.0501, -0.0549, -0.0530,  ..., -0.0489,  0.0794, -0.3105],
        [-0.0598, -0.0484, -0.0895,  ..., -0.0503,  0.0302, -0.4780],
        ...,
        [-0.0456, -0.0516, -0.0572,  ..., -0.0706,  0.0692, -0.4631],
        [-0.0598, -0.0484, -0.0895,  ..., -0.0503,  0.0302, -0.4780],
        [-0.0501, -0.0549, -0.0530,  ..., -0.0489,  0.0794, -0.3105]],
       device='cuda:0')
Computed C_score: tensor([0.7983, 0.7097, 0.8062,  ..., 0.6302, 0.7952, 0.8826], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3889.8501, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5179, 1])
Inertia: tensor([281.4536], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([5179, 1280])
Centroid_list: tensor([[-0.0500, -0.0536, -0.0520,  ..., -0.0478,  0.0797, -0.2984],
        [-0.0500, -0.0536, -0.0520,  ..., -0.0478,  0.0797, -0.2984],
        [-0.0592, -0.0468, -0.0897,  ..., -0.0493,  0.0296, -0.4712],
        ...,
        [-0.0691, -0.0791, -0.0737,  ..., -0.0751,  0.0580, -0.5485],
        [-0.0592, -0.0468, -0.0897,  ..., -0.0493,  0.0296, -0.4712],
        [-0.0500, -0.0536, -0.0520,  ..., -0.0478,  0.0797, -0.2984]],
       device='cuda:0')
Computed C_score: tensor([0.8025, 0.7056, 0.8035,  ..., 0.6623, 0.7943, 0.8881], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3967.7744, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5179, 1])
Inertia: tensor([115.5771], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([5179, 1280])
Centroid_list: tensor([[-0.0594, -0.0722, -0.0691,  ..., -0.0313,  0.0740, -0.5294],
        [-0.0398, -0.0430, -0.0441,  ..., -0.0565,  0.0819, -0.2160],
        [-0.0592, -0.0467, -0.0896,  ..., -0.0494,  0.0296, -0.4714],
        ...,
        [-0.0703, -0.0797, -0.0743,  ..., -0.0745,  0.0576, -0.5487],
        [-0.0592, -0.0467, -0.0896,  ..., -0.0494,  0.0296, -0.4714],
        [-0.0594, -0.0722, -0.0691,  ..., -0.0313,  0.0740, -0.5294]],
       device='cuda:0')
Computed C_score: tensor([0.9304, 0.7649, 0.8040,  ..., 0.6600, 0.7946, 0.8532], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4010.7356, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0002, 0.0005, 0.0010, 0.0016], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([5179, 1280])
S-Scores: tensor([0.6593, 1.9576, 4.0361, 6.4091], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([5179, 1])
Inertia: tensor([336.5396], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([5179, 1280])
Centroid_list: tensor([[-0.0499, -0.0570, -0.0539,  ..., -0.0559,  0.0770, -0.3802],
        [-0.0499, -0.0570, -0.0539,  ..., -0.0559,  0.0770, -0.3802],
        [-0.0534, -0.0481, -0.0766,  ..., -0.0587,  0.0457, -0.4629],
        ...,
        [-0.0499, -0.0570, -0.0539,  ..., -0.0559,  0.0770, -0.3802],
        [-0.0534, -0.0481, -0.0766,  ..., -0.0587,  0.0457, -0.4629],
        [-0.0499, -0.0570, -0.0539,  ..., -0.0559,  0.0770, -0.3802]],
       device='cuda:0')
Computed C_score: tensor([0.7595, 0.7320, 0.7876,  ..., 0.6848, 0.7638, 0.8967], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3741.4504, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5179, 1])
Inertia: tensor([287.4769], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([5179, 1280])
Centroid_list: tensor([[-0.0501, -0.0549, -0.0530,  ..., -0.0489,  0.0794, -0.3105],
        [-0.0501, -0.0549, -0.0530,  ..., -0.0489,  0.0794, -0.3105],
        [-0.0598, -0.0484, -0.0895,  ..., -0.0503,  0.0302, -0.4780],
        ...,
        [-0.0456, -0.0516, -0.0572,  ..., -0.0706,  0.0692, -0.4631],
        [-0.0598, -0.0484, -0.0895,  ..., -0.0503,  0.0302, -0.4780],
        [-0.0501, -0.0549, -0.0530,  ..., -0.0489,  0.0794, -0.3105]],
       device='cuda:0')
Computed C_score: tensor([0.7983, 0.7097, 0.8062,  ..., 0.6302, 0.7952, 0.9299], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3889.8972, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5179, 1])
Inertia: tensor([281.4536], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([5179, 1280])
Centroid_list: tensor([[-0.0500, -0.0536, -0.0520,  ..., -0.0478,  0.0797, -0.2984],
        [-0.0500, -0.0536, -0.0520,  ..., -0.0478,  0.0797, -0.2984],
        [-0.0592, -0.0468, -0.0897,  ..., -0.0493,  0.0296, -0.4712],
        ...,
        [-0.0691, -0.0791, -0.0737,  ..., -0.0751,  0.0580, -0.5485],
        [-0.0592, -0.0468, -0.0897,  ..., -0.0493,  0.0296, -0.4712],
        [-0.0500, -0.0536, -0.0520,  ..., -0.0478,  0.0797, -0.2984]],
       device='cuda:0')
Computed C_score: tensor([0.8025, 0.7056, 0.8035,  ..., 0.6623, 0.7943, 0.9325], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(3967.8188, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([5179, 1])
Inertia: tensor([115.5771], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([5179, 1280])
Centroid_list: tensor([[-0.0594, -0.0722, -0.0691,  ..., -0.0313,  0.0740, -0.5294],
        [-0.0398, -0.0430, -0.0441,  ..., -0.0565,  0.0819, -0.2160],
        [-0.0592, -0.0467, -0.0896,  ..., -0.0494,  0.0296, -0.4714],
        ...,
        [-0.0703, -0.0797, -0.0743,  ..., -0.0745,  0.0576, -0.5487],
        [-0.0592, -0.0467, -0.0896,  ..., -0.0494,  0.0296, -0.4714],
        [-0.0594, -0.0722, -0.0691,  ..., -0.0313,  0.0740, -0.5294]],
       device='cuda:0')
Computed C_score: tensor([0.9304, 0.7649, 0.8040,  ..., 0.6600, 0.7946, 0.9119], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(4010.7944, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0002, 0.0005, 0.0010, 0.0016], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(1, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1023, 1280])
S-Scores: tensor([0.6369, 1.6949, 3.5639, 6.1535], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1023, 1])
Inertia: tensor([92.7061], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1023, 1280])
Centroid_list: tensor([[-0.0224, -0.0391, -0.0537,  ..., -0.0143,  0.0357, -0.7373],
        [-0.0307, -0.0599, -0.0733,  ..., -0.0563,  0.0806, -0.3267],
        [-0.0224, -0.0391, -0.0537,  ..., -0.0143,  0.0357, -0.7373],
        ...,
        [-0.0224, -0.0391, -0.0537,  ..., -0.0143,  0.0357, -0.7373],
        [-0.0224, -0.0391, -0.0537,  ..., -0.0143,  0.0357, -0.7373],
        [-0.0307, -0.0599, -0.0733,  ..., -0.0563,  0.0806, -0.3267]],
       device='cuda:0')
Computed C_score: tensor([0.8673, 0.7458, 0.8685,  ..., 0.7745, 0.8013, 0.6337], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(770.9042, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1023, 1])
Inertia: tensor([92.5038], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1023, 1280])
Centroid_list: tensor([[-0.0235, -0.0391, -0.0518,  ..., -0.0108,  0.0318, -0.7784],
        [-0.0234, -0.0509, -0.0712,  ..., -0.0557,  0.0782, -0.3055],
        [-0.0235, -0.0391, -0.0518,  ..., -0.0108,  0.0318, -0.7784],
        ...,
        [-0.0235, -0.0391, -0.0518,  ..., -0.0108,  0.0318, -0.7784],
        [-0.0235, -0.0391, -0.0518,  ..., -0.0108,  0.0318, -0.7784],
        [-0.0234, -0.0509, -0.0712,  ..., -0.0557,  0.0782, -0.3055]],
       device='cuda:0')
Computed C_score: tensor([0.8666, 0.7521, 0.8706,  ..., 0.7700, 0.8036, 0.7137], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(792.2117, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1023, 1])
Inertia: tensor([92.4691], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1023, 1280])
Centroid_list: tensor([[-0.0235, -0.0391, -0.0516,  ..., -0.0109,  0.0314, -0.7841],
        [-0.0332, -0.0603, -0.0658,  ..., -0.0577,  0.0771, -0.3693],
        [-0.0235, -0.0391, -0.0516,  ..., -0.0109,  0.0314, -0.7841],
        ...,
        [-0.0332, -0.0603, -0.0658,  ..., -0.0577,  0.0771, -0.3693],
        [-0.0235, -0.0391, -0.0516,  ..., -0.0109,  0.0314, -0.7841],
        [-0.0108, -0.0409, -0.0759,  ..., -0.0535,  0.0796, -0.2228]],
       device='cuda:0')
Computed C_score: tensor([0.8666, 0.7498, 0.8704,  ..., 0.7799, 0.8034, 0.7785], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(805.0250, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1023, 1])
Inertia: tensor([90.1358], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1023, 1280])
Centroid_list: tensor([[-0.0213, -0.0359, -0.0529,  ..., -0.0063,  0.0269, -0.7692],
        [-0.0283, -0.0594, -0.0643,  ..., -0.0643,  0.0811, -0.3118],
        [-0.0213, -0.0359, -0.0529,  ..., -0.0063,  0.0269, -0.7692],
        ...,
        [-0.0305, -0.0471, -0.0506,  ..., -0.0270,  0.0476, -0.7498],
        [-0.0305, -0.0471, -0.0506,  ..., -0.0270,  0.0476, -0.7498],
        [-0.0146, -0.0456, -0.0801,  ..., -0.0525,  0.0816, -0.2195]],
       device='cuda:0')
Computed C_score: tensor([0.8700, 0.7802, 0.8677,  ..., 0.8980, 0.8080, 0.7514], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(813.7394, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0008, 0.0021, 0.0044, 0.0075], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(4, device='cuda:0', dtype=torch.int32)
***************************************************************************************
i: 
Batch x size: torch.Size([1057, 1280])
S-Scores: tensor([0.7998, 2.2584, 4.4682, 7.6373], device='cuda:0')
Batch assignments size *(unsqueezed): torch.Size([1057, 1])
Inertia: tensor([104.6185], device='cuda:0')
Centroids: torch.Size([2, 1280])
Centroid_list size: torch.Size([1057, 1280])
Centroid_list: tensor([[-0.0238, -0.0439, -0.0867,  ..., -0.0451,  0.0737,  0.0862],
        [-0.0346, -0.0664, -0.0690,  ..., -0.0555,  0.0761, -0.2347],
        [-0.0238, -0.0439, -0.0867,  ..., -0.0451,  0.0737,  0.0862],
        ...,
        [-0.0238, -0.0439, -0.0867,  ..., -0.0451,  0.0737,  0.0862],
        [-0.0346, -0.0664, -0.0690,  ..., -0.0555,  0.0761, -0.2347],
        [-0.0238, -0.0439, -0.0867,  ..., -0.0451,  0.0737,  0.0862]],
       device='cuda:0')
Computed C_score: tensor([0.8306, 0.8740, 0.7129,  ..., 0.8015, 0.8115, 0.7640], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(794.1470, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1057, 1])
Inertia: tensor([105.0412], device='cuda:0')
Centroids: torch.Size([3, 1280])
Centroid_list size: torch.Size([1057, 1280])
Centroid_list: tensor([[-0.0140, -0.0383, -0.0885,  ..., -0.0428,  0.0737,  0.1533],
        [-0.0430, -0.0610, -0.0785,  ..., -0.0565,  0.0738, -0.1447],
        [-0.0140, -0.0383, -0.0885,  ..., -0.0428,  0.0737,  0.1533],
        ...,
        [-0.0140, -0.0383, -0.0885,  ..., -0.0428,  0.0737,  0.1533],
        [-0.0329, -0.0713, -0.0600,  ..., -0.0462,  0.0789, -0.2881],
        [-0.0430, -0.0610, -0.0785,  ..., -0.0565,  0.0738, -0.1447]],
       device='cuda:0')
Computed C_score: tensor([0.8302, 0.9067, 0.7210,  ..., 0.7839, 0.8645, 0.7548], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(811.7176, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1057, 1])
Inertia: tensor([109.1947], device='cuda:0')
Centroids: torch.Size([4, 1280])
Centroid_list size: torch.Size([1057, 1280])
Centroid_list: tensor([[-0.0163, -0.0379, -0.0913,  ..., -0.0412,  0.0738,  0.1735],
        [-0.0512, -0.0682, -0.0792,  ..., -0.0536,  0.0730, -0.1211],
        [-0.0186, -0.0484, -0.0687,  ..., -0.0601,  0.0754, -0.1318],
        ...,
        [-0.0163, -0.0379, -0.0913,  ..., -0.0412,  0.0738,  0.1735],
        [-0.0419, -0.0829, -0.0660,  ..., -0.0347,  0.0796, -0.4251],
        [-0.0512, -0.0682, -0.0792,  ..., -0.0536,  0.0730, -0.1211]],
       device='cuda:0')
Computed C_score: tensor([0.8219, 0.9043, 0.7821,  ..., 0.7828, 0.8460, 0.7923], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(821.7317, device='cuda:0', grad_fn=<SelectBackward0>)
Batch assignments size *(unsqueezed): torch.Size([1057, 1])
Inertia: tensor([88.5451], device='cuda:0')
Centroids: torch.Size([5, 1280])
Centroid_list size: torch.Size([1057, 1280])
Centroid_list: tensor([[-0.0127, -0.0373, -0.0770,  ..., -0.0491,  0.0699, -0.0170],
        [-0.0573, -0.0744, -0.0789,  ..., -0.0570,  0.0729, -0.1504],
        [-0.0127, -0.0373, -0.0770,  ..., -0.0491,  0.0699, -0.0170],
        ...,
        [-0.0127, -0.0373, -0.0770,  ..., -0.0491,  0.0699, -0.0170],
        [-0.0358, -0.0752, -0.0612,  ..., -0.0460,  0.0797, -0.3245],
        [-0.0573, -0.0744, -0.0789,  ..., -0.0570,  0.0729, -0.1504]],
       device='cuda:0')
Computed C_score: tensor([0.8581, 0.9046, 0.7792,  ..., 0.7892, 0.8622, 0.7878], device='cuda:0',
       grad_fn=<SumBackward1>)
Sum: tensor(828.3738, device='cuda:0', grad_fn=<SelectBackward0>)
CCI: tensor([0.0010, 0.0028, 0.0054, 0.0091], device='cuda:0',
       grad_fn=<DivBackward0>)
Best-K: tensor(3, device='cuda:0', dtype=torch.int32)
Cluster assignment: tensor(0, device='cuda:0', dtype=torch.int32)
***************************************************************************************
D_batch: tensor([[[3.6016e+02],
         [3.3211e+02],
         [3.5566e+02],
         [3.6039e+02]],

        [[2.2678e+02],
         [2.5583e+02],
         [7.7393e+01],
         [6.1035e-05]],

        [[2.4433e+02],
         [1.8906e+02],
         [1.9360e+02],
         [1.8566e+02]],

        [[1.7251e+02],
         [1.2947e+02],
         [1.3398e+02],
         [1.3338e+02]],

        [[2.0980e+02],
         [2.2687e+02],
         [2.2592e+02],
         [1.8058e+02]],

        [[1.5071e+02],
         [1.5689e+02],
         [1.7773e+02],
         [1.0363e+02]],

        [[1.8508e+02],
         [1.7758e+02],
         [1.7181e+02],
         [1.2012e+02]],

        [[1.7374e+02],
         [1.3531e+02],
         [9.8547e+01],
         [1.1970e+02]],

        [[1.8500e+02],
         [1.7298e+02],
         [1.8032e+02],
         [1.8370e+02]],

        [[1.5279e+02],
         [1.2807e+02],
         [9.2339e+01],
         [1.4518e+01]],

        [[1.2526e+02],
         [1.0322e+02],
         [1.0740e+02],
         [1.1041e+02]],

        [[1.4899e+02],
         [1.5648e+02],
         [1.5962e+02],
         [1.2765e+02]],

        [[2.5309e+02],
         [2.6476e+02],
         [2.1581e+02],
         [2.3538e+02]],

        [[1.9586e+02],
         [2.1140e+02],
         [1.9158e+02],
         [1.8681e+02]],

        [[1.4730e+02],
         [1.3453e+02],
         [8.6925e+01],
         [1.3806e+02]],

        [[1.6770e+02],
         [1.6498e+02],
         [1.6405e+02],
         [1.4608e+02]],

        [[1.7316e+02],
         [1.6643e+02],
         [1.3859e+02],
         [1.3649e+02]],

        [[1.3777e+02],
         [1.5125e+02],
         [1.5993e+02],
         [1.3051e+02]],

        [[2.9919e+02],
         [2.7169e+02],
         [2.6985e+02],
         [2.8435e+02]],

        [[1.6073e+02],
         [1.8065e+02],
         [1.2928e+02],
         [1.3024e+02]],

        [[1.8546e+02],
         [1.7841e+02],
         [1.7786e+02],
         [1.3255e+02]],

        [[1.8975e+02],
         [1.8773e+02],
         [1.8773e+02],
         [1.1818e+02]],

        [[1.6073e+02],
         [1.8065e+02],
         [1.2928e+02],
         [1.3024e+02]],

        [[1.4960e+02],
         [1.4591e+02],
         [1.4901e+02],
         [1.4901e+02]],

        [[2.3525e+02],
         [2.1903e+02],
         [1.8811e+02],
         [1.9036e+02]],

        [[7.7604e+01],
         [7.7387e+01],
         [8.8317e+01],
         [8.8392e+01]],

        [[2.6357e+02],
         [2.7583e+02],
         [2.6213e+02],
         [2.6940e+02]],

        [[3.0521e+02],
         [1.2323e+02],
         [1.1535e+02],
         [1.1535e+02]],

        [[1.6444e+02],
         [1.9194e+02],
         [1.4591e+02],
         [1.4591e+02]],

        [[2.8339e+02],
         [2.4958e+02],
         [2.2056e+02],
         [2.2524e+02]],

        [[3.3654e+02],
         [2.8748e+02],
         [2.8145e+02],
         [1.1558e+02]],

        [[2.2673e+02],
         [1.8210e+02],
         [1.8798e+02],
         [1.7501e+02]],

        [[2.5654e+02],
         [2.5643e+02],
         [1.3674e+02],
         [1.3661e+02]],

        [[1.5452e+02],
         [1.6677e+02],
         [1.9243e+02],
         [1.9529e+02]],

        [[2.2635e+02],
         [2.0149e+02],
         [1.9953e+02],
         [1.8311e-04]],

        [[3.0986e+02],
         [2.3081e+02],
         [2.3051e+02],
         [2.1786e+02]],

        [[1.3777e+02],
         [1.5125e+02],
         [1.5993e+02],
         [1.3051e+02]],

        [[1.4774e+02],
         [1.4235e+02],
         [1.4420e+02],
         [1.4497e+02]],

        [[2.5198e+02],
         [2.3709e+02],
         [2.3177e+02],
         [2.3822e+02]],

        [[1.8546e+02],
         [1.7841e+02],
         [1.7786e+02],
         [1.3255e+02]],

        [[1.7308e+02],
         [1.6257e+02],
         [1.1037e+02],
         [1.1002e+02]],

        [[2.6357e+02],
         [2.7583e+02],
         [2.6213e+02],
         [2.6940e+02]],

        [[1.5543e+02],
         [1.4239e+02],
         [1.4231e+02],
         [1.5923e+02]],

        [[1.7251e+02],
         [1.2947e+02],
         [1.3398e+02],
         [1.3338e+02]],

        [[2.2338e+02],
         [2.3367e+02],
         [2.1698e+02],
         [2.1439e+02]],

        [[1.0584e+02],
         [7.9503e+01],
         [7.4819e+01],
         [7.4344e+01]],

        [[1.0982e+02],
         [7.5464e+01],
         [4.4062e+01],
         [3.2594e+01]],

        [[2.0293e+02],
         [1.5566e+02],
         [1.5663e+02],
         [1.5666e+02]],

        [[2.4865e+02],
         [2.6508e+02],
         [2.6652e+02],
         [2.4557e+02]],

        [[1.6275e+02],
         [1.7244e+02],
         [1.5562e+02],
         [1.3137e+02]],

        [[2.9125e+02],
         [2.9167e+02],
         [2.9327e+02],
         [2.8241e+02]],

        [[2.4433e+02],
         [1.8906e+02],
         [1.9360e+02],
         [1.8566e+02]],

        [[1.2356e+02],
         [1.2253e+02],
         [1.0871e+02],
         [1.0863e+02]],

        [[1.4730e+02],
         [1.3453e+02],
         [8.6925e+01],
         [1.3806e+02]],

        [[2.7000e+02],
         [2.6070e+02],
         [2.6870e+02],
         [2.7655e+02]],

        [[2.1097e+02],
         [2.2222e+02],
         [2.2624e+02],
         [2.2623e+02]],

        [[1.8234e+02],
         [1.8594e+02],
         [1.7476e+02],
         [1.7176e+02]],

        [[1.9176e+02],
         [1.8640e+02],
         [1.6166e+02],
         [1.6769e+02]],

        [[1.2356e+02],
         [1.2253e+02],
         [1.0871e+02],
         [1.0863e+02]],

        [[2.6045e+02],
         [2.6195e+02],
         [2.6565e+02],
         [1.9489e+02]],

        [[2.1400e+02],
         [2.1896e+02],
         [2.2927e+02],
         [2.3899e+02]],

        [[2.0115e+02],
         [1.7163e+02],
         [1.8324e+02],
         [1.8447e+02]],

        [[2.6523e+02],
         [2.3688e+02],
         [2.3452e+02],
         [2.3716e+02]],

        [[2.8265e+02],
         [2.5639e+02],
         [1.5287e+02],
         [2.3682e+02]],

        [[2.5198e+02],
         [2.3709e+02],
         [2.3177e+02],
         [2.3822e+02]],

        [[2.0115e+02],
         [1.7163e+02],
         [1.8324e+02],
         [1.8447e+02]],

        [[2.5665e+02],
         [2.6907e+02],
         [2.4153e+02],
         [2.4316e+02]],

        [[1.2356e+02],
         [1.2253e+02],
         [1.0871e+02],
         [1.0863e+02]],

        [[7.7604e+01],
         [7.7387e+01],
         [8.8317e+01],
         [8.8392e+01]],

        [[1.3186e+02],
         [1.7578e+02],
         [1.4607e+02],
         [1.4616e+02]],

        [[1.8500e+02],
         [1.7298e+02],
         [1.8032e+02],
         [1.8370e+02]],

        [[1.4730e+02],
         [1.3453e+02],
         [8.6925e+01],
         [1.3806e+02]],

        [[1.4960e+02],
         [1.4591e+02],
         [1.4901e+02],
         [1.4901e+02]],

        [[2.1097e+02],
         [2.2222e+02],
         [2.2624e+02],
         [2.2623e+02]],

        [[1.7316e+02],
         [1.6643e+02],
         [1.3859e+02],
         [1.3649e+02]],

        [[1.0568e+02],
         [8.4952e+01],
         [6.6411e+01],
         [6.7328e+01]],

        [[1.3630e+02],
         [1.0076e+02],
         [1.0094e+02],
         [9.7944e+01]],

        [[1.3186e+02],
         [1.7578e+02],
         [1.4607e+02],
         [1.4616e+02]],

        [[1.8546e+02],
         [1.7841e+02],
         [1.7786e+02],
         [1.3255e+02]],

        [[1.5870e+02],
         [1.6342e+02],
         [1.5653e+02],
         [1.4891e+02]],

        [[2.0514e+02],
         [2.2036e+02],
         [2.2682e+02],
         [1.3724e+02]],

        [[1.8150e+02],
         [1.4543e+02],
         [1.1540e+02],
         [1.0302e+02]],

        [[2.4433e+02],
         [1.8906e+02],
         [1.9360e+02],
         [1.8566e+02]],

        [[1.4454e+02],
         [1.3600e+02],
         [1.4416e+02],
         [1.4516e+02]],

        [[1.8147e+02],
         [1.3031e+02],
         [1.2586e+02],
         [1.1769e+02]],

        [[1.0568e+02],
         [8.4952e+01],
         [6.6411e+01],
         [6.7328e+01]],

        [[2.3030e+02],
         [2.2627e+02],
         [2.2475e+02],
         [2.2672e+02]],

        [[1.3186e+02],
         [1.7578e+02],
         [1.4607e+02],
         [1.4616e+02]],

        [[7.7604e+01],
         [7.7387e+01],
         [8.8317e+01],
         [8.8392e+01]],

        [[1.4454e+02],
         [1.3600e+02],
         [1.4416e+02],
         [1.4516e+02]],

        [[1.3291e+02],
         [1.3524e+02],
         [1.3125e+02],
         [1.2872e+02]],

        [[1.7847e+02],
         [1.5136e+02],
         [1.5273e+02],
         [1.4038e+02]],

        [[3.3654e+02],
         [2.8748e+02],
         [2.8145e+02],
         [1.1558e+02]],

        [[3.3654e+02],
         [2.8748e+02],
         [2.8145e+02],
         [1.1558e+02]],

        [[9.2706e+01],
         [9.2504e+01],
         [9.2469e+01],
         [9.0136e+01]],

        [[1.0462e+02],
         [1.0504e+02],
         [1.0919e+02],
         [8.8545e+01]]], device='cuda:0')
